{"version":3,"sources":["compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","compontents/Kategorija.js","compontents/Search.js","store/product-actions.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","store/carusel-actions.js","screens/HomeScreen.js","screens/CategoryScreen.js","store/cart-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","store/userRegister-actions.js","store/userDetails-actions.js","screens/ProfileScreen.js","store/orderOrdersProfile-actions.js","store/userUpdateProfile-actions.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","store/payment-actions.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","screens/OrderScreen.js","store/orderPay-actions.js","store/userList-actions.js","screens/UserListScreen.js","store/userDelete-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","store/deleteProduct-actions.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","screens/UserEditScreen.js","store/userUpdate-actions.js","screens/ProductEditScreen.js","store/updateProduct-actions.js","screens/ProductCreateScreen.js","screens/OrderListScreen.js","store/orderList-actions.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css","compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselActions","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","navigate","useNavigate","location","useLocation","Form","onSubmit","e","preventDefault","pathname","Container","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","style","background","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","dispatch","fetchData","axios","get","data","cartData","response","detail","message","Header","useDispatch","Navbar","expand","collapseOnSelect","to","Brand","Text","textAlign","fontSize","faPhone","Nav","Link","HeaderCardButton","onShowCart","bg","Toggle","pading","Collapse","margin","size","NavDropdown","title","color","border","display","map","category","Item","_id","span","offset","faCartFlatbed","faInfo","faAnchor","faContactBook","user_name","event","removeItem","faUser","isAdmin","Footer","Rating","Product","Card","width","height","Img","src","image","Body","Title","as","price","countInStock","Kategorija","productNumber","Search","setPretraga","setBoja","padding","xl","justifyContent","alignItems","placeholder","listProducts","productDetails","Loader","Spinner","animation","role","Message","children","Alert","Heading","Paginate","ProductCarusel","productTop","getState","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","cat","useSearchParams","search","sm","lg","xs","CategoryScreen","prod","catProducts","useParams","toString","addToCart","setItem","stringify","ProductScreen","match","setQty","productDet","window","scrollTo","top","left","behavior","ListGroup","flowering_time","place_of_planting","Number","Array","keys","disabled","description","CartScreen","setDostava","setPlacanje","removeFromCartHandler","removeFromCart","hidden","rounded","faTrash","m","toFixed","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","addDostavaAndPlacanjeCart","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","post","login","Group","controlId","Label","varaiant","RegisterScreen","username","setName","fullname","setUserName","place","setPlace","address","setAddress","self_phone","setSelfPhone","fix_phone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","register","required","getUserDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","Object","put","userUpdateProfileSuccess","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","shippingPrice","taxPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","href","index","createOrder","ukupno","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","options","layout","amount","onSuccess","paymentResult","payOrder","listUsers","UserListScreen","uDelete","deleteHandler","confirm","delete","deleteUser","deleteUserReset","bordered","hover","uploadData","product_id","img","file","formData","FormData","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","InfoScreen","ONamaScreen","KontakScreen","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductEditScreen","productId","setPrice","setImage","setColor","flow","setFlow","brand","setBrand","setCategory","setCountInStock","setDescription","high","setHigh","setType","uploading","setUploading","productUpd","updateProductDetails","type_of_plant","uploadFileHandler","files","defaultValue","controlid","Select","colorChoises","col","floweringChoises","placeChoises","highChoises","type_of_plantChoises","ProductCreateScreen","categoryLoading","categoryError","OrderListScreen","listOrds","deliverdAt","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.9b365770.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:null\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useState } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        if(keyword){\r\n            \r\n            navigate(`/?keyword=${keyword}`)\r\n        }else{\r\n\r\n            navigate(location.pathname)\r\n        }\r\n\r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch(listCategories())\r\n\r\n  }, []);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect className={classes[\"color-navbar\"]}>\r\n        <Container  >\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  <h1 className={classes[\"h1\"]}>PolicPlant</h1>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div >065356458</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          <Row>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Col md={6} style={{ pading:10, margin:10, size:20}} >\r\n                \r\n                <NavDropdown title=\"Kategorije proizvoda\" \r\n                             id=\"basic-nav-dropdown\"  \r\n                             style={{\r\n                                    fontSize: '1.4rem',\r\n                                    color: 'red', \r\n                                    border:'1px solid black',\r\n                                     display: 'inline-block',\r\n                                     background: 'rgb(97, 240, 7)'}}>\r\n                  {categories?.map( (category) => (\r\n                    <NavDropdown.Item  key={category._id}>\r\n                      <LinkContainer to={`/categories/${category._id}`} >\r\n                          <Nav.Link >\r\n                          { category.name }\r\n                          </Nav.Link>\r\n                      </LinkContainer>\r\n                        \r\n                    </NavDropdown.Item>\r\n                  ))}\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">\r\n                    Action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">\r\n                    Separated link\r\n                  </NavDropdown.Item> */}\r\n                </NavDropdown>\r\n              </Col>\r\n              <Col md={{ span: 10, offset: 2 }}>\r\n                <Nav>\r\n                  <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faCartFlatbed} />     Korpa</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/info\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faInfo} />  Info</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; PolicPlant</Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className={`my-2 p-2 rounded ${classes[\"img-hover-zoom\"]} `} border=\"primary\"  style={{ width: '18rem', height: '30rem' }}>\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 28}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black'}}>\r\n                    {product.price} din\r\n            </Card.Text>\r\n            <Card.Text as=\"h7\">\r\n                    {product.countInStock > 0 ? <strong style={{ color:'green'}}>{product.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-2 p-2  ${classes[\"img/-hover-zoom\"]} `} border=\"primary\"  style={{ width: '18rem', height: '25rem' }}>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 26}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            <Card.Text as=\"h7\" style={{ color:'black'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nfunction Search() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [boja, setBoja] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n   \r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        if(keyword){\r\n            \r\n            navigate(`/?keyword=${keyword}`)\r\n        }else{\r\n\r\n            navigate(location.pathname)\r\n        }\r\n\r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{ padding: '0.2rem'}}>\r\n           \r\n            <h7>Pretraga Proizvoda:</h7>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex',  justifyContent:'center', alignItems:'center', }}>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='pretraga'\r\n                        inline ='true'\r\n                        placeholder='Trazeni proizvod'\r\n                        onChange={(e) => setPretraga(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <h7>Boja proizvoda</h7>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='boja'\r\n                        inline ='true'\r\n                        placeholder='Boja proizvoda'\r\n                        onChange={(e) => setBoja(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                <h7>Tip biljke</h7>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='tip'\r\n                        inline ='true'\r\n                        placeholder='Tip biljke'\r\n                        onChange={(e) => setBoja(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    useEffect(() => {\r\n        dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/products/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                </Image>\r\n                                <Carousel.Caption className='carusel.caption'>\r\n                                    <h4>{product.name} ({product.price} din)</h4>\r\n                                </Carousel.Caption>\r\n\r\n                            </Link>\r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import { caruselActions } from './carusel-slice'\r\nimport axios from 'axios'\r\n\r\nexport const caruselTop = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n       \r\n\r\n        const fetchData = async () => {\r\n\r\n            \r\n            const { data } = await axios.get(\r\n                `/api/products/carusel/top/`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(caruselActions.caruselRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(caruselActions.caruselSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                caruselActions.caruselFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error, loading, categories } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n        \r\n }, [dispatch, keyword]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { true && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h1>Kategorije:</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={10} xs={8}>\r\n                        <Row >\r\n                          {categories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listProducts())\r\n        \r\n }, [dispatch, id]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h1>{ catProducts?.find( cat => cat._id.toString() === id)?.name}</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product.category.toString() === id).length == 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product.category.toString() === id).map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  useEffect(()=>{\r\n\r\n       dispatch(productDetails(id))\r\n\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <Link to='/' className='btn btn-primary my-3'> Nazad</Link>\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={3} xs={6} >\r\n                                    <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                    </Image>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={6} xl={6} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2>{product.name}</h2>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} din</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Polozaj:</strong> {product.flowering_time}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} din</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={6} lg={4} xl={3} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"uplata\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price} din</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} din</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Novi Kupac\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" />\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler1}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='password'\r\n                            placeholder='Unesite lozinku...'\r\n                            value={password ? password : ''}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            console.log('Pre localstorage remove')\r\n            localStorage.removeItem('cartItems')\r\n            console.log('Posle localstorage remove')\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        console.log('ovo je pre succesa',success)\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n        console.log('jel doslo dovde?')\r\n\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart.cartItems.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price} din = {(item.qty *item.price).toFixed(2)} din\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Shiping:</strong></Col>\r\n                                   <Col>{shippingPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>{taxPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{totalPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart.cartItems.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, image) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod, config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const file = img //e.target.files[0]\r\n         \r\n            const formData = new FormData()\r\n\r\n            formData.append('image', file)\r\n            formData.append('product_id', product_id)\r\n\r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, image)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button></td>\r\n                                        </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    console.log('ovo je product id:', productId)\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log('pocetka useEffecta')\r\n\r\n        dispatch(updateProductDetails(id))\r\n\r\n        if(success){\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setFlow(product.flowering_time)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n        }  \r\n\r\n    }, [dispatch, navigate, success])\r\n\r\n    console.log('drugo')\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description,\r\n            brand,\r\n            high,\r\n            type\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n     }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Link to='/admin/productlist'>\r\n            Go Back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Create Product</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label><strong>Name</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                defaultValue={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label><strong>Cena</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                defaultValue={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label><strong>Image</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter image...'\r\n                                defaultValue={image}\r\n                               \r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <Form.Control\r\n                                controlid=\"image-file\"\r\n                                type='file'\r\n                                label=\"Izaberite sliku:\"\r\n                                \r\n                                onChange={(e) => uploadFileHandler(e)}\r\n                            > \r\n\r\n                            </Form.Control>  \r\n                            {uploading && <Loader />}\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='color'>\r\n                            <Form.Label><strong>Boja</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setColor(e.target.value)}>\r\n                                <option>{color}</option>\r\n                                {product?.colorChoises?.map(col => (\r\n                                    <option value={col}>{col}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countinstock'>\r\n                            <Form.Label><strong>Stanje</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='number'\r\n                                placeholder='Enter stock'\r\n                                defaultValue={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group controlId='category'>\r\n                            <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setCategory(e.target.value)}>\r\n                                <option>Odaberi kategoriju cveca...</option>\r\n                                {product.category?.map(cat => (\r\n                                    <option value={cat.name}>{cat.name}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group> */}\r\n\r\n                        <Form.Group controlId='flow'>\r\n                            <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setFlow(e.target.value)}>\r\n                                <option>{flow}</option>\r\n                                {product.floweringChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='place'>\r\n                            <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setPlace(e.target.value)}>\r\n                                <option>{place}</option>\r\n                                {product.placeChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label><strong>Brand</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter brand...'\r\n                                defaultValue={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='high'>\r\n                            <Form.Label><strong>Visina biljke</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setHigh(e.target.value)}>\r\n                                <option>{high}</option>\r\n                                {product.highChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='type_plant'>\r\n                            <Form.Label><strong>Tip biljke</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setType(e.target.value)}>\r\n                                <option>{type}</option>\r\n                                {product.type_of_plantChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label><strong>Description</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                defaultValue={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update Product\r\n                    </Button>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories())  \r\n\r\n    }, [dispatch, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description,\r\n            brand,\r\n            high,\r\n            type\r\n        }, image))\r\n        navigate('/admin/productlist')\r\n        console.log('Ovde treba da ide na product list')\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>Name</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>Cena</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>Image</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    label=\"Izaberite sliku:\"\r\n                                    \r\n                                    onChange={(e) =>  setImage(e.target.files[0])}\r\n                                > \r\n\r\n                                </Form.Control>  \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>Boja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    <option>Odaberite boju cveca...</option>\r\n                                    {allcategories?.color?.map(col => (\r\n                                        <option value={col}>{col}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>Stanje</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setCategory(e.target.value)}>\r\n                                    <option>Odaberi kategoriju cveca...</option>\r\n                                    {categories?.map(cat => (\r\n                                        <option value={cat.name}>{cat.name}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='flow'>\r\n                                <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setFlow(e.target.value)}>\r\n                                    <option>Odaberi vreme cvetanja...</option>\r\n                                    {allcategories?.flowering_time?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option>Odaberi mesto sadnje...</option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label><strong>Brand</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand...'\r\n                                    defaultValue={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>Visina biljke</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setHigh(e.target.value)}>\r\n                                    <option>Visina biljke...</option>\r\n                                    {allcategories?.high?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>Tip biljke</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>Tip biljke...</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>Description</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem} from '../../../store/cart-actions'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        cartItems?.map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}>\r\n\r\n            </CartItem>\r\n \r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button}> Narudzba</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    console.log('ovo je value:', props.value)\r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Order number: </span>\r\n            <span>{props.value.orderId}</span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};"],"sourceRoot":""}