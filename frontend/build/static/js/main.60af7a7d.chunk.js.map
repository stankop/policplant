{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/MDBCarusel.js","screens/HomeScreen.js","screens/CategoryScreen.js","store/cart-actions.js","store/review-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","screens/ProductEditScreen.js","compontents/UI/Image/ImageGallery.jsx","compontents/Photo.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","useNavigate","useDispatch","useLocation","useEffect","setItem","Form","onSubmit","e","preventDefault","Container","style","padding","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","background","i","login","email","password","dispatch","fetchData","config","headers","axios","post","data","stringify","response","detail","message","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","get","cartData","Header","Navbar","expand","collapseOnSelect","height","to","Brand","src","width","marginTop","alt","Text","textAlign","fontSize","color","faPhone","Nav","Link","margin","HeaderCardButton","onShowCart","bg","Toggle","pading","Collapse","span","offset","faStore","NavDropdown","title","display","map","category","Item","_id","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","backgroundColor","Rating","Product","Card","border","Img","images","findLast","image","ImgOverlay","countInStock","Title","marginBottom","Body","as","price","Kategorija","textDecoration","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","productDetails","listFilterProducts","val","high","flow","place","search","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","navigate","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","useMemo","initialRender","useRef","current","xl","justifyContent","alignItems","placeholder","mesto_sadnje","col","label","type_of_plant","disabled","Loader","Spinner","animation","role","Message","children","Alert","Heading","Paginate","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","MDBCarusel","itemRef","productTop","interval","c","Image","ref","fluid","rounded","offsetPosition","right","objectFit","HomeScreen","carucel","setCarucel","toggle","setToggle","setVal","screenType","useScreenType","cat","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","customerLogo","setSearchValue","isMobile","isDesktop","isLargeDesktop","sm","lg","xs","CategoryScreen","catProducts","useParams","window","scrollTo","Breadcrumb","href","active","toString","includes","addToCart","getState","removeFromCart","addDostavaAndPlacanjeCart","ProductScreen","match","setQty","productDet","WebFont","load","google","families","top","left","behavior","original","thumbnail","class","items","lazyLoad","ListGroup","fontFamily","botanicki_naziv","join","place_of_planting","vre_cve","Array","isArray","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","sirina_biljke","velicina_slanja","Number","keys","description","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","img","files","formData","FormData","arr","from","forEach","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","whiteSpace","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateProductDetails","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","uploading","productUpd","data2","POSITION","TOP_RIGHT","autoClose","defaultValue","controlid","multiple","Select","minMenuHeight","openMenuOnFocus","ImagesGallery","imgWithClick","cursor","Photo","photo","direction","imgStyle","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","ProductCreateScreen","setItems","inputName","inputHesh","notify","onKeyPress","key","focus","checkPress","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","axis","rows","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.60af7a7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('keyword', keyword)\r\n    },[keyword])\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{padding:'4rem'}}>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantpublic.s3.eu-west-2.amazonaws.com/veliki+logo+verzija+1.0.png'\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch(listCategories())\r\n\r\n  }, []);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Row>\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        <Container  >\r\n        \r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                  <img src={image} style={{ width:'22rem', height:'22rem',marginTop: '+2rem'}} alt=\"Facebook\"/>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link style={{ margin:'1rem'}}>\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      </Row>\r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row >\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              \r\n              <Col md={{ span: 12, offset: 10 }}>\r\n                <Nav>\r\n                    \r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                        {categories?.map( (category) => (\r\n                            <NavDropdown.Item  key={category._id}>\r\n                                <LinkContainer to={`/categories/${category._id}`} >\r\n                                    <Nav.Link >\r\n                                    { category.name }\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                                \r\n                            </NavDropdown.Item>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                  \r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <h6>Korisni linkovi</h6>\r\n                <h5>Kako poručiti putem sajta</h5>\r\n                <h5>Izrada plana sadnje</h5>\r\n                <h5>Najčešća pitanja</h5>\r\n                <h5>Način plaćanja</h5>\r\n                <h5>Isporuka</h5>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className={`my-2 p-2 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"primary\"  style={{ width: '18rem', height: '26rem' }}>\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} style={{width: '16.4rem', height: '18rem' }}></Card.Img>\r\n            <Card.ImgOverlay>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '5px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: '1.6rem'}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black', fontSize: '1.8rem'}}>\r\n                    {product.price} rsd\r\n            </Card.Text>\r\n            <Card.Text as=\"h6\">\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-1 p-1  ${classes[\"img/-hover-zoom\"]} h-100 `} border=\"dark\"  style={{ width: '18rem', height: '25rem' }}>\r\n        <Card.Header as=\"h6\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\",textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block',fontSize: '1.6rem'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 100);\r\n    const initialRender = useRef(true);\r\n    \r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        \r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [dispatch, debouncedSearchTerm, keyword]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{ padding: '0.2rem'}}>\r\n           \r\n            <h6><strong>Pretraga Proizvoda:</strong></h6>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex',  justifyContent:'center', alignItems:'center', }}>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='pretraga'\r\n                        inline ='true'\r\n                        placeholder='Trazeni proizvod...'\r\n                        onChange={(e) => setPretraga(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                \r\n                <h6><strong>Pozicija za sadnju</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setPozicija}></CustomSelect>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                <h6><strong>Boja cveta</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='pretraga'\r\n                        inline ='true'\r\n                        placeholder='Boja...NE radi jos ovo za boje'\r\n                        onChange={(e) => setBoja(e.target.value) }>\r\n                    </Form.Control>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                \r\n                <h6><strong>Tip biljke</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setTip}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                \r\n                {/* <h6><strong>Visina biljke</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.high?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setHigh}></CustomSelect>\r\n                    </Row>\r\n                <hr/> */}\r\n                \r\n                <h6><strong>Kategorija biljke</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect  values={ allcategories?.categories?.map(col => (\r\n                            { value: col.name, label: col.name}\r\n                        ))} onAction={setKategorija}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n//import { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\nimport {\r\n    MDBCarousel,\r\n    MDBCarouselItem,\r\n  } from 'mdb-react-ui-kit';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport {  Image} from 'react-bootstrap'\r\n\r\nimport { Rerousel } from 'rerousel';\r\n\r\nfunction MDBCarusel( {itemRef}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n    \r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Rerousel itemRef={itemRef} interval={5000}>\r\n                {slike.map((c) => {\r\n                    return <Image key={c.id} src={c.src} ref={itemRef} fluid  rounded   style={{ offsetPosition: 'auto', position: 'relative' , right:'1.4rem',  width:'100%',\r\n                        height: '28rem', objectFit:'fill', margin:'auto', padding:'0.2rem 0.8rem'}}/>\r\n                })}\r\n                </Rerousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default MDBCarusel","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n  const [ val, setVal ] = useState({\r\n    color: [],\r\n    high: [],\r\n    type: [],\r\n    category: [],\r\n    flow: [],\r\n    search: ''\r\n})\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch, keyword]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n    setVal(value)\r\n    if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n     setToggle(false)\r\n     setCarucel(false)\r\n   } else{\r\n     setToggle(true)\r\n     setCarucel(true)\r\n   }\r\n }\r\n \r\n  return (\r\n    <div>\r\n        { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>} \r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        <h1> {carucel ? 'Kategorije:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (\r\n                        <Row  className={'gy-2'}>\r\n                          {categories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row className={'gy-2'}>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo(0, 0)\r\n    dispatch(listProducts())\r\n        \r\n }, [dispatch, id]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        <h1>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n       dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n const images = product?.images?.map(image => {\r\n    return {\r\n        original: image.image,\r\n        thumbnail: image.image\r\n    }\r\n })\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/#/\"><i class=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item href={`#/categories/${product?.category?.map(x => x._id)[0]}`}>\r\n                \r\n          { product?.category?.map(x => x.name)[0]}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            { product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        \r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={6} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ fontSize:'2.8rem', fontFamily: 'Oswald, sans-serif;'}}>{product.name}</strong> <i style={{fontSize:'1.4rem'}}>{product.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product.vre_cve) ? product.vre_cve?.join(', ') : product.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong> Sirina:</strong> {product.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item>\r\n                                            \r\n                                                \r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {product.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Kolicina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )}\r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product.countInStock == 0} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const files = img //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td style={{whiteSpace: \"nowrap\"}}>{product.countInStock}</td>\r\n                                        <td><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n        \r\n        if(success){\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, success])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category\r\n        },images))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n          notify()\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        <Link to='/admin/productlist'>\r\n            Go Back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    onChange={(e) =>  setImage(e.target.files)}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    {/* <option>Odaberi mesto sadnje...</option> */}\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>Orezivanje...</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>Privlaci instekte...</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>Brzina rasta...</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","function ImagesGallery({images}){\r\n\r\n    const handleFirstImage = (e) => {\r\n        console.log('text:', e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n        {\r\n        images.map((url)=>{\r\n            return (\r\n                <div className=\"col-sm-2\">\r\n                <div className=\"card\">\r\n                <img src={url} alt='Slikica' onClick={handleFirstImage} />\r\n                </div>\r\n                </div>\r\n            )\r\n        })\r\n        }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesGallery","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      alt=\"img\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        console.log('First useEffect') \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        \r\n        console.log('images', images)\r\n        console.log('items', items)\r\n        \r\n    }, [images, items])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category  \r\n        }, images))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={{   backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}