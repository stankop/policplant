{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","store/product-actions.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","store/cart-actions.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/StaticCarusel.jsx","compontents/MultiCaroseul.jsx","screens/HomeScreen.js","screens/CategoryScreen.js","store/review-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","compontents/UI/GoogleApiWrapper.jsx","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","compontents/Photo.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","screens/InformacijeIsporuka.jsx","screens/InformacijePorucivanje.jsx","screens/InformacijePitanja.jsx","screens/InformacijeReklamacije.jsx","screens/InformacijePrivatnost.jsx","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","success","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","i","listProducts","pk","keyword","dispatch","fetchData","axios","get","data","cartData","response","detail","message","productDetails","listFilterProducts","value","val","color","high","type","category","flow","place","search","console","log","post","prodData","listFilterGornjeProducts","SearchBox","useState","setKeyword","useNavigate","useDispatch","useLocation","Form","onSubmit","e","preventDefault","Container","fluid","Row","Col","style","padding","Control","placeholder","onChange","target","border","width","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","className","background","xmlns","height","fill","class","viewBox","d","login","email","password","config","headers","setItem","stringify","logout","removeItem","CartIcon","HeaderCartButton","btnIsHihg","setBtnIsHigh","screenType","useScreenType","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","isDesktop","isLargeDesktop","onClick","icon","badge","listCategories","Header","image","listKagetorija","useRef","cat","setCat","current","info","src","Navbar","expand","collapseOnSelect","isMobile","overflow","to","Brand","Image","alt","Text","textAlign","Nav","Link","margin","HeaderCardButton","onShowCart","fontSize","faPhone","marginTop","bg","display","Toggle","md","Collapse","span","offset","paddingRight","faStore","NavDropdown","title","slice","sort","a","b","map","_id","Item","faInfo","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","WebFont","load","google","families","backgroundColor","xs","responsive","objectFit","href","paddingTop","fontFamily","marginBottom","textDecoration","Rating","addToCart","getState","images","price","countInStock","removeFromCart","addDostavaAndPlacanjeCart","Product","catId","setShow","isLoading","setLoading","Card","Img","findLast","ImgOverlay","Title","prodajno_mesto","Body","as","fontStyle","botanicki_naziv","disabled","Number","ref","Overlay","arrowProps","popper","hasDoneInitialMeasure","position","borderRadius","Kategorija","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","Search","onSearch","forToogle","pretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","navigate","memoizedValue","useMemo","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","initialRender","xl","justifyContent","col","label","type_of_plant","mesto_sadnje","inline","Loader","Spinner","animation","role","Message","children","Alert","Heading","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","tabIndex","animationDirection","dialogClassName","scrollable","CarouselFadeExample","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MultiCaroseul","image1","rounded","image2","image3","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","img","buttonPosition","alwaysShowButton","primary","cursor","HomeScreen","carucel","setCarucel","setToggle","categoryError","categoryLoading","prod","useSearchParams","searchFunc","orderCategories","alignItems","paddingBottom","paddingLeft","sm","lg","CategoryScreen","catProducts","useParams","window","scrollTo","top","left","behavior","htmlString","__html","DOMPurify","sanitize","toString","description","bordureImages","Breadcrumb","active","dangerouslySetInnerHTML","maxWidth","Math","random","includes","ProductScreen","match","setQty","productDet","setImages","prvaSlika","Array","from","targetFilesObject","y","targetFilesObjectWithoutLast","unshift","imgs","Set","original","thumbnail","incrementHandle","decrementHandle","textDecorationLine","marginLeft","lazyLoad","ListGroup","join","isArray","place_of_planting","vre_cve","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","sirina_biljke","velicina_slanja","size","InputGroup","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","keys","Table","striped","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","textDocorationColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","itms","files","formData","FormData","append","arr","forEach","productData","changeStanjeValue","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","setVal","order_set","changingValueHandler","reverse","novo","popust","defaultValue","InfoScreen","ONamaScreen","mapStyles","MapContainer","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","marker","setState","onClose","this","zoom","initialCenter","lat","lng","visible","Component","GoogleApiWrapper","apiKey","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateProductDetails","imgWithClick","Photo","photo","direction","imgStyle","onDoubleClick","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","setItems","setProdajnoMesto","setNovo","setPopust","uploading","productUpd","prodSuccess","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","image_name","data_mesto_sadnje","data2","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","memoizedImageCard","axis","POSITION","TOP_RIGHT","autoClose","isValid","defaultChecked","row","onContextMenu","newItems","controlid","multiple","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","rows","minMenuHeight","openMenuOnFocus","Select","ProductCreateScreen","inputName","inputHesh","notify","mesta_sadnje","onKeyPress","key","focus","checkPress","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","InformacijeIsporuka","InformacijePorucivanje","InformacijePitanja","InformacijeReklamacije","InformacijePrivatnost","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":";yFACAA,EAAOC,QAAU,CAAC,aAAa,yBAAyB,MAAQ,oBAAoB,QAAU,sBAAsB,cAAc,0BAA0B,OAAS,qB,sBCArKD,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0B,sBCA1KD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,KAAO,+B,sBCAjJD,EAAOC,QAAU,CAAC,iBAAiB,gCAAgC,gCAAgC,+C,sBCAnGD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,yBAAyB,aAAa,8B,sBCAvGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,2BAA2B,eAAe,6BAA6B,GAAK,mB,sBCA3ID,EAAOC,QAAU,CAAC,MAAQ,2B,2NCCpBC,EAAmBC,YAAY,CACjCC,KAAM,cACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,GACPC,SAAQ,EACRC,KAAK,EACLC,MAAM,GAEVC,SAAS,CACLC,mBAAkB,SAACC,GACfA,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMR,SAAW,EACrB,EAEAS,mBAAkB,SAACD,EAAOE,GACdF,EAAMP,SAAU,EAChBO,EAAMR,SAAWU,EAAOC,QAAQX,SAChCQ,EAAML,SAAU,EAChBK,EAAMJ,KAAOM,EAAOC,QAAQP,KAC5BI,EAAMH,MAAQK,EAAOC,QAAQN,KACzC,EAEAO,gBAAe,SAACJ,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,QACrBH,EAAML,SAAU,CACpB,KAIKU,EAAqBjB,EAAiBkB,QACtCC,EAAqBnB,EAAiBoB,QClC7CC,EAAoBpB,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVmB,WAAY,GACZC,cAAc,GACdlB,SAAS,EACTE,SAAS,EACTD,MAAO,GACPE,KAAK,EACLC,MAAM,GAEVC,SAAS,CACLc,oBAAmB,SAACZ,GAChBA,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMU,WAAa,EACvB,EAEAG,oBAAmB,SAACb,EAAOE,GACfF,EAAMP,SAAU,EAChBO,EAAMU,WAAaR,EAAOC,QAAQO,WAClCV,EAAMW,cAAgBT,EAAOC,QAAQQ,cACrCX,EAAML,SAAU,EAChBK,EAAMJ,KAAOM,EAAOC,QAAQP,KAC5BI,EAAMH,MAAQK,EAAOC,QAAQN,KACzC,EAEAiB,iBAAgB,SAACd,EAAOE,GACpBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,QACrBH,EAAML,SAAU,CACpB,KAIKoB,EAAsBN,EAAkBH,QACxCU,EAAsBP,EAAkBD,QCpC/CS,EAAsB5B,YAAY,CACpCC,KAAM,UACNC,aAAc,CACN2B,QAAS,KACTzB,SAAS,EACTE,SAAS,EACTD,MAAM,IAGdI,SAAS,CACLqB,sBAAqB,SAACnB,GAClBA,EAAMP,SAAU,EAChBO,EAAML,SAAU,CACpB,EAEAyB,sBAAqB,SAACpB,EAAOE,GACjBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMkB,QAAUhB,EAAOC,QACvBH,EAAMN,MAAQ,EAC1B,EAEA2B,mBAAkB,SAACrB,EAAOE,GACtBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACAmB,oBAAmB,SAACtB,GAGhBA,EAAML,SAAU,EAChBK,EAAMN,MAAQ,EAClB,KAIK6B,EAAwBN,EAAoBX,QAC5CkB,EAAwBP,EAAoBT,QCpCnDiB,EAAuBC,aAAaC,QAAQ,aACnBC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACzBG,EAAYzC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVwC,UAAUN,EACVO,QAAQ,GACRC,SAAS,IAEbnC,SAAS,CACLoC,YAAW,SAAClC,EAAOE,GAEf,IAAMiC,EAAUjC,EAAOC,QACjBiC,EAAYpC,EAAM+B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAQI,EAAE,IAC5DH,EACKpC,EAAM+B,UAAUM,MAAK,SAAAG,GAAI,OAAIA,EAAKD,KAAOH,EAAUG,EAAE,IAAEE,IAAMN,EAAQM,IAIrEzC,EAAM+B,UAAUW,KAAKP,EAEjC,EAEAQ,eAAc,SAAC3C,EAAOE,GACd,IAAMqC,EAAKrC,EAAOC,QACZyC,EAAkB5C,EAAM+B,UAAUc,QAAO,SAAAP,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAC/DvC,EAAM+B,UAAYa,CAC1B,EAEDE,eAAc,SAAC9C,EAAOE,GAEjBF,EAAM+B,UAAU,EACrB,EAEAgB,sBAAqB,SAAC/C,EAAOE,GACxB,IAAM8C,EAAM9C,EAAOC,QACnBH,EAAMgC,QAAUgB,EAAIhB,QACpBhC,EAAMiC,SAAWe,EAAIf,QAC1B,EAEAgB,oBAAmB,SAACjD,EAAOE,GACtB,IAAMqC,EAAKrC,EAAOC,QAClBH,EAAM+B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAAEE,KAAO,CACnD,EACAS,iBAAgB,SAAClD,EAAOE,GACvB,IAAMqC,EAAKrC,EAAOC,QAClBH,EAAM+B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAAEE,KAAO,CACnD,KAIUU,EAAcrB,EAAUxB,QACxB8C,EAActB,EAAUtB,QCrD/B6C,EAAsB3B,aAAaC,QAAQ,YAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEzB2B,EAAYjE,YAAY,CACtBC,KAAM,OACNC,aAAc,CACVgE,SAAUF,EACV5D,SAAS,EACTC,MAAO,IAEXI,SAAU,CACN0D,iBAAgB,SAACxD,GACbA,EAAMP,SAAU,CAEpB,EAEAgE,iBAAgB,SAACzD,EAAOE,GACpBF,EAAMP,SAAU,EAChBO,EAAMuD,SAAWrD,EAAOC,OAC5B,EAEAuD,cAAa,SAAC1D,EAAOE,GACjBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EAEAwD,WAAU,SAAC3D,EAAOE,GACdF,EAAMuD,SAAW,IAErB,KAMCK,EAAcN,EAAUhD,QACxBuD,EAAcP,EAAU9C,QCrC/B6C,EAAsB3B,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEEmC,EAAoBzE,YAAY,CACpCC,KAAM,eACNC,aAAc,CACZgE,SAAUF,EACV5D,SAAS,EACTC,MAAO,IAETI,SAAU,CACRiE,oBAAmB,SAAC/D,GAClBA,EAAMP,SAAU,CAClB,EAEAuE,oBAAmB,SAAChE,EAAOE,GACzBF,EAAMP,SAAU,EAChBO,EAAMuD,SAAWrD,EAAOC,OAC1B,EAEA8D,iBAAgB,SAACjE,EAAOE,GACtBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACvB,EAEAwD,WAAU,SAAC3D,EAAOE,GAChBF,EAAMuD,SAAW,IACnB,KAMSW,EAAsBJ,EAAkBxD,QACxC6D,EAAsBL,EAAkBtD,QClC/C4D,EAAmB/E,YAAY,CAC7BC,KAAM,OACNC,aAAc,CACV8E,KAAM,CAAC,EACP5E,SAAS,EACTC,MAAO,IAEXI,SAAU,CACNwE,mBAAkB,SAACtE,GACfA,EAAMP,SAAU,CAEpB,EAEA8E,mBAAkB,SAACvE,EAAOE,GACtBF,EAAMP,SAAU,EAChBO,EAAMqE,KAAOnE,EAAOC,OACxB,EAEAqE,gBAAe,SAACxE,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EAEAsE,iBAAgB,SAACzE,EAAOE,GACpBF,EAAMqE,KAAO,CAAC,CAElB,KAQCK,EAAqBN,EAAiB9D,QACtCqE,EAAqBP,EAAiB5D,QCnC7CoE,EAAyBvF,YAAY,CACnCC,KAAM,oBACNC,aAAc,CACVgE,SAAU,CAAC,EACX9D,SAAS,EACTC,MAAO,GACPC,SAAS,GAEbG,SAAU,CACN+E,yBAAwB,SAAC7E,GACrBA,EAAMP,SAAU,CAEpB,EAEA8E,mBAAkB,SAACvE,EAAOE,GACtBF,EAAMP,SAAU,EAChBO,EAAMuD,SAAWrD,EAAOC,QACxBH,EAAML,SAAS,CACnB,EAEAmF,sBAAqB,SAAC9E,EAAOE,GACzBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACA4E,uBAAsB,SAAC/E,EAAOE,GAC1BF,EAAMuD,SAAW,CAAC,CACtB,KAQCyB,EAA2BJ,EAAuBtE,QAClD2E,EAA2BL,EAAuBpE,QCpCzD0E,EAA6BxD,aAAaC,QAAQ,mBACzBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,CAAC,EAE1BwD,EAAgB9F,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACX6F,gBAAiBF,GAEpBpF,SAAS,CAELuF,mBAAkB,SAACrF,EAAOE,GAElBF,EAAMoF,gBAAkBlF,EAAOC,OAEvC,KAKKmF,EAAkBH,EAAc7E,QAChCiF,EAAkBJ,EAAc3E,QCpBvCgF,EAAenG,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVkG,cAAc,IAElB3F,SAAS,CACL4F,kBAAiB,SAAC1F,EAAOE,GAErBF,EAAMyF,cAAgBvF,EAAOC,OACjC,KAIKwF,EAAiBH,EAAalF,QAC9BsF,EAAiBJ,EAAahF,QCdrCqF,EAAaxG,YAAY,CAC3BC,KAAM,QACNC,aAAc,CACXE,SAAS,EACTE,SAAS,EACTmG,MAAM,CAAC,EACPpG,MAAO,IAEVI,SAAS,CACLiG,mBAAkB,SAAC/F,EAAOE,GAEtBF,EAAMP,SAAU,CACpB,EAEAuG,mBAAkB,SAAChG,EAAOE,GAElBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAM8F,MAAQ5F,EAAOC,QACrBH,EAAMN,MAAQ,EACtB,EAEAuG,gBAAe,SAACjG,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EAEA+F,iBAAgB,SAAClG,EAAOE,GACpBF,EAAMP,SAAU,EAChBO,EAAM8F,MAAQ,CAAC,EACf9F,EAAMN,OAAQ,EACdM,EAAML,SAAU,CACpB,KAKKwG,EAAeN,EAAWvF,QAC1B8F,EAAeP,EAAWrF,QCvCjC6F,EAAoBhH,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVuG,MAAM,CAAC,EACPrG,SAAS,EACTC,MAAO,MAEXI,SAAS,CACLwG,oBAAmB,SAACtG,GAChBA,EAAMP,SAAU,CAEpB,EAEA8G,oBAAmB,SAACvG,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAM8F,MAAQ5F,EAAOC,OAC7B,EAEAqG,iBAAgB,SAACxG,EAAOE,GACpBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,KAIKsG,EAAsBJ,EAAkB/F,QACxCoG,EAAsBL,EAAkB7F,QCzB/CmG,EAAgBtH,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACXE,SAAS,EACTE,SAAS,GAGZG,SAAS,CACL8G,gBAAe,SAAC5G,EAAOE,GAEnBF,EAAMP,SAAU,CACpB,EAEAoH,gBAAe,SAAC7G,EAAOE,GAEfF,EAAMP,SAAU,EAEhBO,EAAML,SAAU,CACxB,EAEAmH,aAAY,SAAC9G,EAAOE,GAChBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EAEA4G,cAAa,SAAC/G,EAAOE,GACjBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CACpB,KAKKqH,EAAkBL,EAAcrG,QAChC2G,EAAkBN,EAAcnG,QCnCvC0G,EAA0B7H,YAAY,CACxCC,KAAM,eACNC,aAAc,CACV4H,OAAO,GACP1H,SAAS,EACTC,MAAO,MAEXI,SAAS,CACLsH,0BAAyB,SAACpH,GACtBA,EAAMP,SAAU,CAEpB,EAEA4H,0BAAyB,SAACrH,EAAOE,GACzBF,EAAMP,SAAU,EAChBO,EAAMmH,OAASjH,EAAOC,OAC9B,EAEAmH,uBAAsB,SAACtH,EAAOE,GAC1BF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACAoH,wBAAuB,SAACvH,EAAOE,GAC3BF,EAAMP,SAAU,EAChBO,EAAMmH,OAAS,EACnB,KAIKK,EAA4BN,EAAwB5G,QACpDmH,EAA4BP,EAAwB1G,QC1B3DkH,IAJsBhG,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGzCtC,YAAY,CAC1BC,KAAM,WACNC,aAAc,CACVoI,MAAO,GACPlI,SAAS,EACTC,MAAO,MAEXI,SAAU,CACN8H,gBAAe,SAAC5H,GACZA,EAAMP,SAAU,CAEpB,EAEAoI,gBAAe,SAAC7H,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAM2H,MAAQzH,EAAOC,QACrBH,EAAMN,MAAQ,IAClB,EAEAoI,aAAY,SAAC9H,EAAOE,GAChBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OAEzB,EAEA4H,cAAa,SAAC/H,EAAOE,GACjBF,EAAM2H,MAAQ,EAElB,MAMCK,GAAkBN,GAAcpH,QAChC2H,GAAkBP,GAAclH,QCnCvC0H,IAJsBxG,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGvCtC,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACVI,SAAS,EACTF,SAAS,EACTC,MAAO,MAEXI,SAAU,CACNqI,kBAAiB,SAACnI,GACdA,EAAMP,SAAU,CAEpB,EAEA2I,kBAAiB,SAACpI,EAAOE,GACrBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CACpB,EAEA0I,eAAc,SAACrI,EAAOE,GAClBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACAmI,gBAAe,SAACtI,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CACpB,MAMC4I,GAAoBL,GAAgB5H,QACpCkI,GAAoBN,GAAgB1H,QCpC3CiI,GAAoBpJ,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVI,SAAQ,EACRF,SAAS,EACTC,MAAO,MAEXI,SAAS,CACL4I,oBAAmB,SAAC1I,GAChBA,EAAMP,SAAU,CAEpB,EAEAkJ,oBAAmB,SAAC3I,EAAOE,GACfF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CAC5B,EAEAiJ,iBAAgB,SAAC5I,EAAOE,GACpBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACA0I,kBAAiB,SAAC7I,EAAOE,GACrBF,EAAML,SAAU,EAChBK,EAAMP,SAAU,EAChBO,EAAMN,MAAS,IACnB,KAKKoJ,IADsBL,GAAkBnI,QAClBmI,GAAkBjI,SC/B/CuI,GAAe1J,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,MAGXI,SAAS,CACLkJ,eAAc,SAAChJ,GACXA,EAAMP,SAAU,EAChBO,EAAMR,SAAW,EACrB,EAEAyJ,eAAc,SAACjJ,EAAOE,GACVF,EAAMP,SAAU,EAChBO,EAAMR,SAAWU,EAAOC,OAEpC,EAEA+I,YAAW,SAAClJ,EAAOE,GACfF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,KAKKgJ,IADiBJ,GAAazI,QACbyI,GAAavI,SC5BrC4I,GAAqB/J,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRE,SAAS,EACTD,MAAO,MAEXI,SAAS,CACLuJ,qBAAoB,SAACrJ,GACjBA,EAAMP,SAAU,CACpB,EAEA6J,qBAAoB,SAACtJ,EAAOE,GACxBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CAEpB,EAEA4J,kBAAiB,SAACvJ,EAAOE,GACrBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACAqJ,mBAAkB,SAACxJ,EAAOE,GACtBF,EAAMN,MAAQ,KACdM,EAAML,SAAU,CACpB,KAIK8J,GAAuBL,GAAmB9I,QAC1CoJ,GAAuBN,GAAmB5I,QC9BjDmJ,GAAqBtK,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRE,SAAS,EACTD,MAAO,GACPwB,QAAS,CAAC,GAEdpB,SAAS,CACL8J,qBAAoB,SAAC5J,GACjBA,EAAMP,SAAU,CAEpB,EAEAoK,qBAAoB,SAAC7J,EAAOE,GACxBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMkB,QAAUhB,EAAOC,OAC3B,EAEA2J,kBAAiB,SAAC9J,EAAOE,GACrBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,QACrBH,EAAML,SAAU,CACpB,EACAoK,mBAAkB,SAAC/J,EAAOE,GAEtBF,EAAMkB,QAAU,CAAC,EACjBlB,EAAML,SAAU,EAChBK,EAAMN,MAAQ,EAClB,KAIKsK,GAAuBL,GAAmBrJ,QAC1C2J,GAAuBN,GAAmBnJ,QCnCjD0J,GAAkB7K,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACV8E,KAAK,CAAC,EACN1E,SAAS,EACTF,SAAS,EACTC,MAAO,MAEXI,SAAU,CACNqK,kBAAiB,SAACnK,GACdA,EAAMP,SAAU,CAEpB,EAEA2K,kBAAiB,SAACpK,EAAOE,GACrBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,CACpB,EAEA0K,eAAc,SAACrK,EAAOE,GAClBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,EACAmK,gBAAe,SAACtK,EAAOE,GACnBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMqE,KAAO,CAAC,CAClB,KAMCkG,GAAoBL,GAAgB5J,QACpCkK,GAAoBN,GAAgB1J,QClC3CiK,GAAqBpL,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRE,SAAS,EACTD,MAAO,GACPwB,QAAS,CAAC,GAEdpB,SAAS,CACL4K,qBAAoB,SAAC1K,GACjBA,EAAMP,SAAU,CAEpB,EAEAkL,qBAAoB,SAAC3K,EAAOE,GACxBF,EAAMP,SAAU,EAChBO,EAAML,SAAU,EAChBK,EAAMN,MAAQ,GACdM,EAAMkB,QAAUhB,EAAOC,OAC3B,EAEAyK,kBAAiB,SAAC5K,EAAOE,GACrBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,QACrBH,EAAML,SAAU,CACpB,EACAkL,mBAAkB,SAAC7K,EAAOE,GAEtBF,EAAMkB,QAAU,CAAC,EACjBlB,EAAML,SAAU,EAChBK,EAAMN,MAAQ,EAClB,KAIKoL,GAAuBL,GAAmBnK,QAC1CyK,GAAuBN,GAAmBjK,QCpCjDwK,GAAiB3L,YAAY,CAC/BC,KAAM,YACNC,aAAc,CACV4H,OAAQ,GACR1H,SAAS,EACTC,MAAO,MAGXI,SAAS,CACLmL,iBAAgB,SAACjL,GACbA,EAAMP,SAAU,EAChBO,EAAMmH,OAAS,EACnB,EAEA+D,iBAAgB,SAAClL,EAAOE,GACZF,EAAMP,SAAU,EAChBO,EAAMmH,OAASjH,EAAOC,OAElC,EAEAgL,cAAa,SAACnL,EAAOE,GACjBF,EAAMP,SAAU,EAChBO,EAAMN,MAAQQ,EAAOC,OACzB,KAIKiL,GAAmBJ,GAAe1K,QAClC+K,GAAmBL,GAAexK,QCyBhC8K,GA7BDC,YAAe,CACzB/K,QAAQ,CACJgL,YAAajL,EACbW,QAASM,EACTiK,KAAMrI,EACNsI,UAAW7H,EACX8H,aAAcxH,EACdyH,YAAajH,EACbkH,kBAAmB5G,EACnB6G,SAAUvG,EACVwG,QAASnG,EACTE,MAAOM,EACP4F,YAAatF,EACbuF,SAAUhF,EACViF,mBAAoBzE,EACpB0E,SAAUlE,GACVmE,WAAY5D,GACZ6D,aAAcvD,GACdwD,QAASnD,GACToD,cAAe7C,GACf8C,cAAevC,GACfwC,WAAYjC,GACZkC,cAAe3B,GACf4B,UAAWtB,GACXuB,aAAc5L,K,uNCjDtB,mmGAAA6L,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMC,GAAe,WAAqC,IAApCC,EAAG,UAAD,6CAAC,KAAMC,EAAO,uDAAG,GAAIpN,EAAK,UAAD,6CAAC,GACrD,gDAAO,WAAOqN,GAAQ,0EAoBmC,OAlB/CC,EAAS,yCAAG,2FAOd,GALe,OAAZF,IACCA,EAAU,IAKJ,OAAPD,EAAW,gCACaI,KAAMC,IAAI,0BAAD,OAA2BJ,EAAO,iBAASpN,IAAO,OAAtE,OAAsE,SAA1EyN,EAAI,EAAJA,KAAI,kBACLA,GAAI,wBAEYF,KAAMC,IAAI,kCAAD,OAAmCL,IAAK,QAA5D,OAA4D,SAAhEM,EAAI,EAAJA,KAAI,kBACLA,GAAI,4CAElB,kBAfc,4CAkBXJ,EAAS5M,EAAmBN,sBAAqB,SAC1BmN,IAAW,OAA5BI,EAAQ,OACdL,EAAS5M,EAAmBJ,mBAAmBqN,IAAU,gDAGzDL,EACI5M,EAAmBD,gBACjB,KAAMmN,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDAlCD,EAmCJ,EAEaC,GAAiB,SAACnL,GAC3B,gDAAO,WAAO0K,GAAQ,0EAUyC,OAPrDC,EAAS,yCAAG,uGAESC,KAAMC,IAAI,iBAAD,OAAkB7K,IAAK,OAA3C,OAA2C,SAA/C8K,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXJ,EAAS1L,EAAsBJ,yBAAwB,SAChC+L,IAAW,OAA5BI,EAAQ,OACdL,EAAS1L,EAAsBH,sBAAsBkM,IAAU,gDAG/DL,EACI1L,EAAsBF,mBACpB,KAAMkM,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDAxBD,EAyBJ,EAEaE,GAAqB,SAACC,GAC/B,gDAAO,WAAOX,GAAQ,4EAsBmC,OAnB/CY,EAAM,CACJC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,SAAUL,EAAMK,SAChBC,KAAMN,EAAMM,KACZC,MAAOP,EAAMO,MACbC,OAAQR,EAAMQ,OACdpB,QAASY,EAAMZ,SAGvBqB,QAAQC,IAAI,gBAAiBT,GACvBX,EAAS,yCAAG,uGAESC,KAAMoB,KAAK,wBAAwBV,GAAI,OAAlD,OAAkD,SAAtDR,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXJ,EAAS5M,EAAmBN,sBAAqB,SAC1BmN,IAAW,OAA5BsB,EAAQ,OACdvB,EAAS5M,EAAmBJ,mBAAmBuO,IAAU,kDAGzDvB,EACI5M,EAAmBD,gBACjB,KAAMmN,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,mDApCD,EAqCJ,EAEagB,GAA2B,SAACb,GACrC,gDAAO,WAAOX,GAAQ,4EAamC,OAV/CY,EAAM,CAACO,OAAQR,GAErBS,QAAQC,IAAI,uBAAwBT,GAC9BX,EAAS,yCAAG,uGAESC,KAAMoB,KAAK,8BAA+BV,GAAI,OAAzD,OAAyD,SAA7DR,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXJ,EAAS5M,EAAmBN,sBAAqB,SAC1BmN,IAAW,OAA5BsB,EAAQ,OACdvB,EAAS5M,EAAmBJ,mBAAmBuO,IAAU,kDAGzDvB,EACI5M,EAAmBD,gBACjB,KAAMmN,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,mDA3BD,EA4BJ,E,QCxDeiB,OAvEf,WAEI,MAA8BC,mBAAS,IAAG,oBAAnC3B,EAAO,KAAE4B,EAAU,KAEpB3B,GADW4B,eACAC,eA2BnB,OA1BmBC,eA4BjB,eAACC,GAAA,EAAI,CAACC,SApBgB,SAACC,GACnBA,EAAEC,iBACFd,QAAQC,IAAI,WAAYtB,GACxBC,EAASwB,GAAyBzB,GAEtC,EAe8B,SAC1B,eAACoC,GAAA,EAAS,CAACC,OAAK,WACZ,gBAACC,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACC,MAAO,CAAEC,QAAQ,GAAG,SACrB,eAACT,GAAA,EAAKU,QAAO,CACTC,YAAY,iBACZ3B,KAAK,SACL1O,KAAK,UAGLsQ,SAAU,SAACV,GAAC,OAAKN,EAAWM,EAAEW,OAAOjC,MAAM,EAC3C4B,MAAO,CAAEM,OAAO,8BAA+BC,MAAM,aAG7D,eAACR,GAAA,EAAG,CAACC,MAAO,CAAEC,QAAQ,GAAG,SACrB,eAACO,GAAA,EAAc,CACXC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QA5CE,SAACC,GAAK,OACxB,eAACC,GAAA,EAAO,2BAAChO,GAAG,kBAAqB+N,GAAK,aAAE,aAE9B,EAyC6B,SAEnB,eAACE,GAAA,EAAM,CACHxC,KAAK,SACLyC,QAAQ,kBACRC,UAAU,QACVlB,MAhCX,CACbmB,WAAY,oBACZb,OAAO,+BA8BiC,SAEhB,sBAAKc,MAAM,6BAA6Bb,MAAM,KAAKc,OAAO,KAAKC,KAAK,eAAeC,MAAM,eAAeC,QAAQ,YAAW,SACvH,uBAAMC,EAAE,4MAS5C,E,cChFA,mmGAAApE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAMO,IAAMqE,GAAQ,SAACC,EAAOC,GACzB,gDAAO,WAAOnE,GAAQ,0EAkB0B,OAhBtCC,EAAS,yCAAG,yFAMb,OAJKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAEtB,SACsBnE,KAAMoB,KAAK,oBAClC,CACI,MAAS4C,EACT,SAAYC,GACbC,GAAO,OAJE,OAIF,SAJFhE,EAAI,EAAJA,KAAI,kBAKLA,GAAI,2CACd,kBAbc,4CAgBXJ,EAASrJ,EAAYJ,oBAAmB,SACrB0J,IAAW,OAAxBG,EAAI,OACVJ,EAASrJ,EAAYH,iBAAiB4J,IAEtC3L,aAAa6P,QAAQ,WAAY3P,KAAK4P,UAAUnE,IAAM,kDAKtDJ,EACIrJ,EAAYF,cACV,KAAM6J,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,mDAnCD,EAoCJ,EAEagE,GAAU,WAEnB,OAAO,SAACxE,GAEJvL,aAAagQ,WAAW,YACxBzE,EAASrJ,EAAYD,cACrBsJ,EAASvI,EAAmBD,oBAC5BwI,EAASzF,EAA0BD,0BAEvC,CACJ,EC5CiBoK,GAZA,WACb,OACE,sBACEf,MAAM,6BACNI,QAAQ,YACRF,KAAK,eAAc,SAEnB,uBAAMG,EAAE,6RAGd,E,yCC+CaW,GAnDU,SAACtB,GAEtB,MAAkC3B,oBAAS,GAAM,oBAA1CkD,EAAS,KAAEC,EAAY,KACxBC,EAAaC,OAGXjQ,EADKkQ,aAAY,SAACjS,GAAK,OAAKA,EAAMyL,IAAI,IACtC1J,UAOFmQ,GAJYD,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC9CnI,SAG2B,OAATxB,QAAS,IAATA,OAAS,EAATA,EAAWoQ,QAAO,SAACC,EAAe5P,GACxD,OAAO4P,EAAiB5P,EAAKC,GACjC,GAAG,IAEG4P,EAAU,UAAMC,KAAQC,OAAM,YAAIV,EAAaS,KAAQE,KAAO,IAqBpE,OAlBAC,qBAAU,WAEN,GAAyB,KAAb,OAAT1Q,QAAS,IAATA,OAAS,EAATA,EAAW2Q,QAAd,CAGAZ,GAAa,GAEb,IAAMa,EAAQC,YAAW,WACrBd,GAAa,EACjB,GAAG,KAEH,OAAO,WACHe,aAAaF,EACjB,CATA,CAWJ,GAAG,CAAC5Q,IAIA,0BAASyN,MAAQuC,EAAWe,WAAaf,EAAWgB,eAAiB,CAAEhD,MAAM,QAASc,OAAO,QAAU,CAACd,MAAM,OAAQc,OAAO,QAAUH,UAAW2B,EAAYW,QAAS1C,EAAM0C,QAAQ,UACjL,uBAAMtC,UAAW4B,KAAQW,KAAK,SAC1B,eAAC,GAAQ,MAEb,gCAAM,eACN,uBAAMvC,UAAW4B,KAAQY,MAAM,SAC1BhB,MAIjB,E,mCCtDA,26MAGO,IAAMiB,GAAiB,WAAyB,IAAxBnG,EAAO,uDAAG,GACrC,gDAAO,WAAOC,GAAQ,0EAeqC,OAbjDC,EAAS,yCAAG,2FAIb,OAFc,OAAZF,IACCA,EAAU,IACb,SAEkCG,KAAMC,IAAI,6BAA4B,OAA7D,OAA6D,SAA3D1M,EAAU,EAAhB2M,KAAI,SAC0BF,KAAMC,IAAI,gCAA+B,OAAnE,OAAmE,SAAjEzM,EAAa,EAAnB0M,KAAI,kBAEL,CAAE3M,aAAYC,kBAAe,4CACvC,kBAVc,4CAaXsM,EAASlM,EAAoBH,uBAAsB,SAC5BsM,IAAW,OAA5BI,EAAQ,OACdL,EAASlM,EAAoBF,oBAAoByM,IAAU,gDAG3DL,EACIlM,EAAoBD,iBAClB,KAAMyM,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDA7BD,EA8BJ,E,0BC4Pe2F,OAlQf,SAAgB9C,GACd,IACQ/M,EADU0O,aAAY,SAACjS,GAAK,OAAKA,EAAM0L,SAAS,IAChDnI,SAGA7C,EADSuR,aAAY,SAACjS,GAAK,OAAKA,EAAM4M,YAAY,IAClDlM,WACF2S,EAAQ,gGAERC,EAAgBC,iBAAO,IAE7B,EAAsB5E,mBAASjO,GAAW,oBAAnC8S,EAAG,KAAEC,EAAM,KAEZxG,EAAW6B,cACXiD,EAAaC,OAEnBS,qBAAU,WAGR,GAEC,CAACxF,IAEJwF,qBAAU,WAGR/Q,aAAa6P,QAAQ,aAAc3P,KAAK4P,UAAU9Q,IAClD4S,EAAeI,QAAU9R,KAAKC,MAAMH,aAAaC,QAAQ,eACzD8R,EAAOH,EAAeI,QAExB,GAAG,CAAChT,IAEJ,IAIMiT,EAAO,CAMX,CACEpR,GAAG,EACHqL,MAAO,mBACPgG,IAAK,eACP,CACErR,GAAG,EACHqL,MAAO,uCACPgG,IAAK,YAEP,CACErR,GAAG,EACHqL,MAAM,mCACNgG,IAAK,WAEP,CACErR,GAAG,EACHqL,MAAM,cACNgG,IAAK,eAEP,CACErR,GAAG,EACHqL,MAAM,uBACNgG,IAAK,eAGT,OACE,gBAAC,WAAQ,WACT,oCAEE,eAACC,GAAA,EAAM,CAAEpD,QAAQ,OAAOqD,OAAO,KAAKC,kBAAgB,EAACvE,MAAO,CAAEqB,OAAO,SAAUH,UAAW4B,KAAQ,gBAAgB,SAC9GP,EAAWiC,SACP,eAAC5E,GAAA,EAAS,CAAEI,MAAO,CAAEyE,SAAS,UAAU,SACpC,gBAAC3E,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,UACF,eAAC,iBAAa,CAAC2E,GAAG,IAAG,SACnB,eAACL,GAAA,EAAOM,MAAK,UAEX,eAACC,GAAA,EAAK,CAAC/E,OAAK,EAAEuE,IAAKP,EAAO5T,QAAQ,QAAQ+P,MAAO,CAAEO,MAAM,QAASc,OAAO,QAASoD,SAAS,UAAWI,IAAI,uBAchH,gBAAC9E,GAAA,EAAG,WACF,eAACsE,GAAA,EAAOS,KAAI,CAAC9E,MAAO,CAAE+E,UAAW,UAAU,SAC3C,eAAC,iBAAa,CAACL,GAAG,QAAO,SACnB,eAACM,GAAA,EAAIC,KAAI,CAACjF,MAAO,CAAEkF,OAAO,QAAQ,SAChC,eAACC,GAAgB,CAAC3B,QAAS1C,EAAMsE,mBAIzC,eAACf,GAAA,EAAOS,KAAI,CAAC9E,MAAO,CAAE+E,UAAW,UAAU,SACxC,iCACC,uBAAK/E,MAAO,CAACqF,SAAU,SAAU/G,MAAM,SAAS,UAAC,eAAC,KAAe,CAACmF,KAAM6B,OAAW,uBAEnF,sBAAKtF,MAAO,CAAC1B,MAAM,QAAQ+G,SAAU,UAAU,SAAC,4BAQ5D,gBAACzF,GAAA,EAAS,CAAEI,MAAO,CAAEyE,SAAS,UAAU,UAEtC,eAAC,iBAAa,CAACC,GAAG,IAAG,SACnB,eAACL,GAAA,EAAOM,MAAK,UAEX,eAACC,GAAA,EAAK,CAAC/E,OAAK,EAAEuE,IAAKP,EAAO5T,QAAQ,QAAQ+P,MAAO,CAAEO,MAAM,QAASc,OAAO,QAAQkE,UAAW,QAASd,SAAS,UAAWI,IAAI,qBAIjI,eAACR,GAAA,EAAOS,KAAI,CAAC9E,MAAO,CAAE+E,UAAW,UAAU,SACtC,iCACC,uBAAK/E,MAAO,CAACqF,SAAU,SAAU/G,MAAM,SAAS,UAAC,eAAC,KAAe,CAACmF,KAAM6B,OAAW,uBAEnF,sBAAKtF,MAAO,CAAC1B,MAAM,QAAQ+G,SAAU,UAAU,SAAC,oBAKpD,eAAC,GAAS,IAEZ,eAAChB,GAAA,EAAOS,KAAI,CAAC9E,MAAO,CAAE+E,UAAW,UAAU,SAC3C,eAAC,iBAAa,CAACL,GAAG,QAAO,SACnB,eAACM,GAAA,EAAIC,KAAI,CAACjF,MAAO,CAAEkF,OAAO,QAAQ,SAChC,eAACC,GAAgB,CAAC3B,QAAS1C,EAAMsE,wBAQnD,eAACf,GAAA,EAAM,CAACmB,GAAG,QAAQvE,QAAQ,QAAQqD,OAAO,KAAKC,kBAAgB,WAC7D,eAAC3E,GAAA,EAAS,UAER,gBAACE,GAAA,EAAG,CAACE,MAAO,CAACO,MAAM,OAAQkF,QAAS,QAAQ,UAE5C,eAACpB,GAAA,EAAOqB,OAAM,CAAC,gBAAc,mBAAmBC,GAAI,IAElD,eAACtB,GAAA,EAAOuB,SAAQ,CAAC7S,GAAG,mBAAmBiN,MAAO,CAACO,MAAM,QAAQ,SAE3D,eAACR,GAAA,EAAG,CAAC4F,GAAI,CAAEE,KAAM,GAAIC,OAAQ,IAAK,SAChC,gBAACd,GAAA,EAAG,CAAChF,MAAO,CAACO,MAAM,QAAQ,UAEvB,uBAAKP,MAAO,CAACqF,SAAU,SAAUU,aAAa,QAAQ,UAAC,eAAC,KAAe,CAACtC,KAAMuC,OACxE,eAACC,GAAA,EAAW,CAACC,MAAM,aACXnT,GAAG,qBAEHiN,MAAO,CACCqF,SAAU,SACVI,QAAS,gBAAgB,SACnC,OAAHzB,QAAG,IAAHA,OAAG,EAAHA,EAAKmC,QAAQC,MAAK,SAACC,EAAGC,GAAM,OAAOD,EAAE/P,MAAQgQ,EAAEhQ,KAAK,IAAGiQ,KAAK,SAAC9H,GAAQ,OACpE,eAAC,iBAAa,CAACiG,GAAE,sBAAiBjG,EAAS+H,KAAM,SAC7C,eAACP,GAAA,EAAYQ,KAAI,UACXhI,EAAS3O,MADS2O,EAAS+H,MADkB/H,EAAS+H,IAI9C,SAM5B,uBAAKxG,MAAO,CAACqF,SAAU,SAASI,QAAS,eAAgBM,aAAa,QAAQ,UAAC,eAAC,KAAe,CAACtC,KAAMiD,OAChG,eAACT,GAAA,EAAW,CAACC,MAAM,OACXnT,GAAG,qBAEHiN,MAAO,CAECqF,SAAU,SACVI,QAAS,gBAAgB,SAClC,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,KAAK,SAAClJ,GAAC,OACZ,eAAC,iBAAa,CAACqH,GAAE,WAAMrH,EAAE+G,IAAG,KAAI,SAC5B,eAAC6B,GAAA,EAAYQ,KAAI,CAACvF,UAAU,QAAO,SAC7B7D,EAAEe,OADkCf,EAAEtK,KADVsK,EAAEtK,GAItB,SAM9B,eAAC,iBAAa,CAAC2R,GAAG,SAAQ,SAExB,eAACM,GAAA,EAAIC,KAAI,UACP,uBAAKjF,MAAO,CAACqF,SAAU,SAASI,QAAS,eAAeM,aAAa,QAAQ,UAAC,eAAC,KAAe,CAACtC,KAAMkD,OAA4B,qBAKrI,eAAC,iBAAa,CACZjC,GAAG,WAAU,SACb,eAACM,GAAA,EAAIC,KAAI,UACT,uBAAKjF,MAAO,CAACqF,SAAU,UAAU,UAAC,eAAC,KAAe,CAAC5B,KAAMmD,OAAiB,oBAK3E7S,EACC,gBAACkS,GAAA,EAAW,CAACC,MAAOnS,EAAS8S,UAAW9T,GAAG,WAAWiN,MAAO,CAACqF,SAAU,SAAUU,aAAa,QAAQ,UACrG,eAAC,iBAAa,CACZrB,GAAG,WAAU,SACb,eAACuB,GAAA,EAAYQ,KAAI,UAAC,cAEpB,eAACR,GAAA,EAAYQ,KAAI,CAACjD,QAvLhB,SAACsD,GACrBrJ,EAASwE,KACX,EAqL6D,SAAE,cAM7C,eAAC,iBAAa,CAACyC,GAAG,SAAS1E,MAAO,CAACqF,SAAU,SAAUU,aAAa,QAAQ,SAC1E,gBAACf,GAAA,EAAIC,KAAI,WACP,eAAC,KAAe,CAACxB,KAAMsD,KAAQ/G,MAAO,CAAC+F,aAAa,WAAY,sBAMrEhS,GAAYA,EAASiT,SACpB,gBAACf,GAAA,EAAW,CAACC,MAAM,QAAQnT,GAAG,YAAYiN,MAAO,CAACqF,SAAU,UAAU,UACpE,eAAC,iBAAa,CAACX,GAAG,kBAAiB,SACjC,eAACuB,GAAA,EAAYQ,KAAI,UAAC,YAGpB,eAAC,iBAAa,CAAC/B,GAAG,qBAAoB,SACpC,eAACuB,GAAA,EAAYQ,KAAI,UAAC,eAGpB,eAAC,iBAAa,CAAC/B,GAAG,mBAAkB,SAClC,eAACuB,GAAA,EAAYQ,KAAI,UAAC,kCAYpC,IAKN,E,mECzLeQ,OAnFf,WAcE,OAVmBzE,OAEnBS,qBAAU,WACRiE,KAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,UAAW,cAG5B,GAAG,IAGD,yBAAQrH,MAAO,CAACsH,gBAAgB,SAAS,SACrC,gBAAC1H,GAAA,EAAS,WACN,wBAMA,gBAACE,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAAIC,MAAO,CAAE,EAAE,UACjB,eAAC4E,GAAA,EAAK,CAAC2C,GAAI,EAAGnD,IAvBd,gGAyBOvE,OAAK,EACL2H,WAAW,OACXxH,MAAO,CAACO,MAAM,MAAOc,OAAO,OAAQoG,UAAU,UAGrD,+BAAK,sCAGL,+BAAK,wBAGL,iCAAK,UACI,oBAAGC,KAAK,8BAA6B,SAAC,6BAE/C,uBAAK1H,MAAO,CAACC,QAAQ,SAAS,UAE1B,oBAAGyH,KAAK,wCAAwC1H,MAAO,CAACkF,OAAO,UAAYgB,MAAM,OAAM,SAC/E,oBAAGhF,UAAU,8BAA8BlB,MAAO,CAAC1B,MAAM,aAKjE,oBAAGoJ,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,YAAW,SACtD,oBAAGhF,UAAU,+BAA+BlB,MAAO,CAAC1B,MAAM,mBAUxE,gBAACyB,GAAA,EAAG,CAAIC,MAAO,CAACkF,OAAO,OAAQyC,WAAW,QAAS,UACjD,qBAAI3H,MAAO,CAAEqF,SAAU,SAAU/G,MAAM,UAAWsJ,WAAY,wBAAyBC,aAAa,UAAU,SAAC,kCAAQ,sBACvH,eAAC,QAAI,CAACnD,GAAG,eAAe1E,MAAO,CAAE8H,eAAgB,QAAS,SACxD,qBAAI5G,UAAU,QAAQlB,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAC,qCAE1G,qBAAI5H,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAC,wBACtF,qBAAI5H,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAC,oCACtF,qBAAI5H,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAC,6BACtF,eAAC,QAAI,CAAClD,GAAG,YAAY1E,MAAO,CAAE8H,eAAgB,QAAS,SACrD,qBAAI5G,UAAU,QAAQlB,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAC,qBAI9G,eAAC9H,GAAA,EAAG,UACA,eAACC,GAAA,EAAG,CAACmB,UAAU,mBAAkB,SAAC,sCAOlD,E,mBCxCe6G,I,mCCzDf,mmGAAA1K,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM2K,GAAY,SAACjV,EAAIE,GAC1B,gDAAO,WAAOwK,EAAUwK,GAAQ,8EAEb,OAATvK,EAAS,yCAAG,uGAESC,KAAMC,IAAI,iBAAD,OAAkB7K,IAAK,OAA3C,OAA2C,SAA/C8K,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,qDAQQH,IAAW,OAAxBG,EAAI,OACJnM,EAAU,CACZqB,GAAI8K,EAAK2I,IACT1W,KAAM+N,EAAK/N,KACX+T,MAAqB,QAAhB,EAAEhG,EAAKqK,OAAO,UAAE,aAAd,EAAgBrE,MACvBsE,MAAOtK,EAAKsK,MACZC,aAAcvK,EAAKuK,aACnBnV,IAAKA,GAETwK,EAAS9J,EAAYjB,YAAYhB,IAEjCQ,aAAa6P,QAAQ,YAAa3P,KAAK4P,UAAUiG,IAAWhM,KAAK1J,YAAW,4GAOnF,qDA5BD,EA6BJ,EAEa8V,GAAiB,SAACtV,GAC3B,OAAQ,SAAC0K,EAAUwK,GAEXxK,EAAS9J,EAAYR,eAAeJ,IAEpCb,aAAa6P,QAAQ,YAAa3P,KAAK4P,UAAUiG,IAAWhM,KAAK1J,WAEzE,CACJ,EAEa+V,GAA4B,SAAC9V,EAASC,GAC/C,OAAQ,SAACgL,GAED,IAAMzK,EAAO,CACTR,UACAC,YAEJgL,EAAS9J,EAAYJ,sBAAsBP,GAEnD,CACJ,E,gGCwDeuV,OAhGf,SAAiB,GAAmB,IAAD,IAAjB7W,EAAO,EAAPA,QAAS8W,EAAK,EAALA,MAGjB/K,GADW4B,eACAC,eACXiD,EAAaC,OACnB,EAAwBrD,oBAAS,GAAM,oBAAhCwB,EAAI,KAAE8H,EAAO,KACpB,EAAgCtJ,oBAAS,GAAM,oBAAxCuJ,EAAS,KAAEC,EAAU,KACtBtI,EAAS0D,iBAAO,MAkBxB,OAREd,qBAAU,WACNiE,KAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,UAAW,cAG9B,GAAG,IAGH,gBAACuB,GAAA,EAAI,CAAC1H,UAAS,2BAAsB4B,KAAQ,oBAAsBxC,OAAO,UAAUN,MAAQuC,EAAWiC,SAAW,CAAGnD,OAAQ,WAAc,CAAEd,MAAO,MAAOc,OAAQ,SAAU,UACzK,gBAAC,QAAI,CAACqD,GAAE,oBAAehT,EAAQ8U,IAAG,YAAIgC,GAAQ,UAC1C,eAACI,GAAA,EAAKC,IAAG,CAACzE,IAAmB,QAAhB,EAAE1S,EAAQwW,cAAM,OAAuC,QAAvC,EAAd,EAAgBY,UAAU,SAAAjF,GAAK,OAAoB,IAAhBA,EAAMvN,KAAW,WAAC,WAAvC,EAAd,EAAuDuN,MAAO5T,QAAQ,OAAO+P,MAAOuC,EAAWiC,SAAW,CAAEjE,MAAO,OAAQc,OAAQ,OAAQoG,UAAW,SAAY,CAAElH,MAAO,OAAQc,OAAQ,OAAQoG,UAAW,WAC7N,eAACmB,GAAA,EAAKG,WAAU,CAAC/I,MAAO,CAACO,MAAO,OAAQc,OAAQ,SAAU,UAC9C,OAAP3P,QAAO,IAAPA,OAAO,EAAPA,EAAS0W,cAAe,GAAK,eAACQ,GAAA,EAAKI,MAAK,UAAC,sBAAKhJ,MAAQuC,EAAWiC,SAAW,CAAE8C,gBAAgB,MAAMjC,SAAS,QAAS/G,MAAM,QAASiC,MAAM,MAAOkF,QAAS,cAAexF,QAAS,MAAO4H,aAAc,OAAS,CAAEP,gBAAgB,MAAOhJ,MAAM,QAASmH,QAAS,cAAexF,QAAS,MAAO4H,aAAc,OAAO,SAAC,uBAE5T,eAACe,GAAA,EAAKG,WAAU,CAAC7H,UAAU,wEAAwElB,MAAQuC,EAAWiC,SAAW,CAACjE,MAAO,OAAQc,OAAQ,SAAY,CAACd,MAAO,OAAQc,OAAQ,SAAU,UAC3L,OAAP3P,QAAO,IAAPA,OAAO,EAAPA,EAASuX,iBACN,eAACL,GAAA,EAAKC,IAAG,CAACzE,IAAI,8FACJnU,QAAQ,OACR+P,MAAO,CAACO,MAAO,MAAOc,OAAQ,cAIpD,gBAACuH,GAAA,EAAKM,KAAI,CAAClJ,MAAO,CAAE+E,UAAW,UAAU,UACrC,eAAC,QAAI,CAAC/E,MAAO,CAAE8H,eAAgB,QAAUpD,GAAE,oBAAehT,EAAQ8U,KAAM,SACvE,gBAACoC,GAAA,EAAKI,MAAK,CAACG,GAAG,KAAI,UACf,sBAAKjI,UAAU,QAAQlB,MAAO,CAAEqF,SAAU,OAAQ/G,MAAM,UAAWsJ,WAAY,yBAAyB,SAAS,OAAPlW,QAAO,IAAPA,OAAO,EAAPA,EAAS5B,OACnH,sBAAKoR,UAAU,QAAQlB,MAAO,CAAEqF,SAAU,QAAS+D,UAAW,SAAU9K,MAAM,UAAWsJ,WAAY,WAAW,SAAS,OAAPlW,QAAO,IAAPA,OAAO,EAAPA,EAAS2X,uBAQhI,gBAACT,GAAA,EAAK9D,KAAI,CAACqE,GAAG,KAAKnJ,MAAO,CAAE1B,MAAM,UAAW+G,SAAU,QAAQ,UACtD3T,EAAQyW,MAAM,UAMvB,eAACnH,GAAA,EAAM,CAAKC,QAAQ,UACRqI,SAAU5X,EAAQ0W,aAAe,EACjC5J,KAAK,SACLwB,MAAOuC,EAAWiC,SAAW,CAACrD,WAAW,UAAWZ,MAAM,MAAOc,OAAO,MAAOf,OAAO,qBAAuB,CAACa,WAAW,UAAWZ,MAAM,MAAOc,OAAO,MAAOf,OAAO,qBACtKkD,QAtDK,WAErB/F,EAASuK,GAAUuB,OAAO7X,EAAQ8U,KAAM+C,OAAO,KAC/Cd,GAAS9H,GACTgI,GAAW,EAEf,EAiDoBa,IAAKnJ,EAAO,SACFqI,EAA8B,iBAAlB,kBAElC,eAACe,GAAA,EAAO,CAACpJ,OAAQA,EAAO6D,QAASvD,KAAMA,EAAMF,UAAU,QAAO,SACzD,YACoB,EAArBA,UACuB,EAAvBiJ,WACW,EAAX/I,KACe,EAAfgJ,OAC6C,EAA7CC,sBALC,IAME9I,EAAK,0BAER,kDACQA,GAAK,IACTd,MAAK,cACL6J,SAAU,WACVvC,gBAAiB,QACjBrH,QAAS,WACT3B,MAAO,QACPwL,aAAc,GACXhJ,EAAMd,OACP,SACL,6BAEK,SAMtB,EC5Ee+J,OA3Bf,SAAoB,GAAa,IAAZtL,EAAQ,EAARA,SAEb8D,EAAaC,OACnB,OACE,gBAACoG,GAAA,EAAI,CAAC1H,UAAS,qBAAgB4B,KAAQ,mBAAkB,WAAWxC,OAAO,UAAWN,MAAQuC,EAAWiC,SAAW,CAAEjE,MAAO,OAAQc,OAAQ,SAAY,CAAEd,MAAO,OAAQc,OAAQ,SAAU,UACxL,eAACuH,GAAA,EAAKhF,OAAM,CAACuF,GAAG,OAChB,eAAC,QAAI,CAACzE,GAAE,sBAAiBjG,EAAS+H,KAAM,SACpC,eAACoC,GAAA,EAAKC,IAAG,CAACzE,IAAK3F,EAASoF,MAAO5T,QAAQ,OAAO+P,MAAOuC,EAAWiC,SAAW,CAAEjE,MAAO,OAAQc,OAAQ,OAAQoG,UAAW,SAAY,CAAElH,MAAO,OAAQc,OAAQ,OAAQoG,UAAW,aAEnL,eAACmB,GAAA,EAAKM,KAAI,CAAClJ,MAAO,CAAE+E,UAAW,SAAU+C,eAAgB,QAAQ,SAC7D,eAAC,QAAI,CAACpD,GAAE,sBAAiBjG,EAAS+H,KAAM,SACvC,eAACoC,GAAA,EAAKI,MAAK,CAACG,GAAG,MAAK,SAChB,yBAAQnJ,MAAO,CAAEyF,QAAS,eAAgBV,UAAW,SAAUM,SAAU,SAAU/G,MAAM,WAAW,SAAEG,EAAS3O,eAahI,E,MCyCeka,I,SCrEA,SAASC,GAAa,GAAqB,IAApBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAE5C,EAAgDhL,mBAAS,IAAG,oBAC5D,GADuB,KAAqB,KACRA,oBAAS,IAAM,oBAAhCiL,GAAF,KAAe,MA6BhC,OAEI,eAAC,KAAM,CACL,kBAAgB,aAChBC,QAAQ,qBACRva,KAAK,kBACLwa,aAAW,EACXC,cAAY,EACZC,SAAO,EACPrK,YAAY,aACZe,UAAU,qBACVuJ,WAda,WAAH,OAASL,GAAc,EAAM,EAevCM,YAdc,WAAH,OAASN,GAAc,EAAO,EAezCO,QAAST,EACTU,gBAAgB,SAChBxK,SA7BW,SAACyK,EAAW,GAAgC,IAA9Bna,EAAM,EAANA,OAAsB,EAAdoa,eAEtB,kBAAXpa,GACAyZ,EAASU,GACE,UAAXna,GACAyZ,EAAS,IACE,iBAAXzZ,GACAyZ,EAASU,EAEf,EAqBME,mBAAmB,GAI3B,CCsHeC,OA5If,SAAgB,GAA0B,IAAD,IAAtBC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAEnBzN,EAAW6B,cACX0E,EAAMvB,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IAC3CjM,EAA8B6S,EAA9B7S,cAAeD,EAAe8S,EAAf9S,WAIvB,GAHauR,aAAY,SAAAjS,GAAK,OAAIA,EAAMwL,WAAW,IAC3ChM,SAEwBmP,mBAAS,KAAG,oBAArCgM,EAAQ,KACf,GAD4B,KACIhM,mBAAS,KAAG,oBAArCiM,EAAQ,KAAEC,EAAW,KAC5B,EAAwBlM,mBAAS,IAAG,oBAA7BmM,EAAI,KAAEC,EAAO,KACpB,EAAwBpM,mBAAS,IAAG,oBAA7BZ,EAAI,KACX,GADoB,KACEY,mBAAS,KAAG,oBAA3BqM,EAAG,KAAEC,EAAM,KAClB,EAAoCtM,mBAAS,IAAG,oBAAzCuM,EAAU,KAAEC,EAAa,KAE1BC,EAAWvM,eAEX7B,GADW+B,eACDrN,aAAaC,QAAQ,YAG/B0Z,EAAgBC,mBAAQ,WAW1B,MAVc,CACVxN,MAAOgN,EACP/M,KAAMA,EACNC,KAAMgN,EACN/M,SAAUiN,EACVhN,KAAM0M,EACNxM,OAAQuM,EACR3N,QAASA,EAIb,GAAG,CAAC8N,EAAM/M,EAAMiN,EAAKE,EAAYN,EAAUD,EAAU3N,IAEnDuO,EAvDV,SAAqB3N,EAAOsC,GAExB,MAA4CvB,mBAASf,GAAM,oBAApD4N,EAAc,KAAEC,EAAiB,KAgBxC,OAfAhJ,qBACE,WAEE,IAAMiJ,EAAU9I,YAAW,WACzB6I,EAAkB7N,EACpB,GAAGsC,GAIH,OAAO,WACL2C,aAAa6I,EACf,CACF,GACA,CAAC9N,EAAOsC,IAEHsL,CACX,CAoCgCG,CAAYN,EAAe,KACjDO,EAAgBrI,kBAAO,GAyB/B,OAvBEd,qBAAU,aAEFmJ,EAAclI,SAAYoH,EAAKpI,OAAS,GAAK3E,EAAK2E,OAAS,GAAKsI,EAAItI,OAAS,GAAKwI,EAAWxI,OAAS,GAAKkI,EAASlI,OAAS,GAAKiI,GAAY3N,KAC9IC,EAASU,GAAmB4N,IAE5Bb,EAAUW,IAEdO,EAAclI,SAAS,EACvB+G,EAASc,EAGb,GAAG,CAACtO,EAAUsO,IAcd,eAACvM,GAAA,EAAI,CAACC,SAZgB,SAACC,GACnBA,EAAEC,iBACFiM,EAAS,SAAU,CAACpb,MAAOub,GAC/B,EAS8B,SAC1B,eAACnM,GAAA,EAAS,CAACC,OAAK,EAACG,MAAO,CAACyF,QAAS,OAAQxF,QAAS,UAAU,SACzD,gBAACH,GAAA,EAAG,CAAC6F,GAAI,GAAI0G,GAAI,GAAIrM,MAAO,CAACkF,OAAQ,OAAQO,QAAS,OAAQV,UAAU,OAASuH,eAAe,OAAS/L,MAAM,QAAS,UAEpH,gBAACT,GAAA,EAAG,CAAC6F,GAAI,GAAI0G,GAAI,GAAIrM,MAAO,CAAEC,QAAQ,SAAUM,MAAO,QAAQ,UAC3D,8BAAI,yBAAQP,MAAO,CAAC1B,MAAM,WAAW,SAAC,wBAClC,eAAC2L,GAAY,CAAEC,OAAmB,OAAVhZ,QAAU,IAAVA,OAAU,EAAVA,EAAYiV,QAAQC,MAAK,SAACC,EAAGC,GAAM,OAAOD,EAAE/P,MAAQgQ,EAAEhQ,KAAK,IAAGiQ,KAAI,SAAAgG,GAAG,MACzF,CAAEnO,MAAOmO,EAAIzc,KAAM0c,MAAOD,EAAIzc,KAAK,IAC/Bqa,SAAUwB,OAK1B,gBAAC7L,GAAA,EAAG,CAAC6F,GAAI,GAAI0G,GAAI,GAAIrM,MAAO,CAAEC,QAAQ,SAAUM,MAAO,QAAQ,UAE3D,8BAAI,yBAAQP,MAAO,CAAC1B,MAAM,WAAW,SAAC,iBAClC,eAAC2L,GAAY,CAACC,OAAsB,OAAb/Y,QAAa,IAAbA,GAA4B,QAAf,EAAbA,EAAesb,qBAAa,WAAf,EAAb,EAA8BlG,KAAI,SAAAgG,GAAG,MACxD,CAAEnO,MAAOmO,EAAKC,MAAOD,EAAI,IACrBpC,SAAUsB,OAK1B,gBAAC3L,GAAA,EAAG,CAAC6F,GAAI,GAAI0G,GAAI,GAAIrM,MAAO,CAAEC,QAAQ,SAAUM,MAAO,QAAQ,UAE3D,8BAAI,yBAAQP,MAAO,CAAC1B,MAAM,WAAW,SAAC,yBAClC,eAAC2L,GAAY,CAACC,OAAsB,OAAb/Y,QAAa,IAAbA,GAA2B,QAAd,EAAbA,EAAeub,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAgG,GAAG,MACvD,CAAEnO,MAAOmO,EAAKC,MAAOD,EAAI,IACrBpC,SAAUkB,OAK1B,gBAACvL,GAAA,EAAG,CAAC6F,GAAI,GAAI0G,GAAI,GAAIrM,MAAO,CAAC,EAAE,UAG3B,8BAAI,yBAAQA,MAAO,CAAC1B,MAAM,WAAW,SAAC,iBAClC,eAACkB,GAAA,EAAKU,QAAO,CACT1B,KAAK,SACL1O,KAAK,OACL6c,OAAQ,OACRxM,YAAY,kBACZC,SAAU,SAACV,GAAC,OAAK6L,EAAQ7L,EAAEW,OAAOjC,MAAM,aAkCpE,E,UCrJewO,OAnBf,WACE,OACE,eAACC,GAAA,EAAO,CACPC,UAAU,SACVC,KAAK,SACL9L,QAAQ,UACRjB,MAAO,CACHqB,OAAQ,QACRd,MAAO,QACP2E,OAAO,OACPO,QAAQ,SACV,SACK,uBAAMvE,UAAU,UAAS,SAAC,gBAKtC,E,UCRe8L,OATf,SAAiB,GAA+B,IAA9B/L,EAAO,EAAPA,QAASgM,EAAQ,EAARA,SAAUhP,EAAO,EAAPA,QACnC,OACE,gBAACiP,GAAA,EAAK,CAACjM,QAASA,EAAQ,UACtB,eAACiM,GAAA,EAAMC,QAAO,UAAElP,IACbgP,IAGT,E,8BCyCeG,I,8BClCA,SAASC,GAAY,GAAyB,IAAvBpC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAC9C,EAAoC/L,oBAAS,GAAM,oBAA5CmO,EAAU,KAAEC,EAAa,KAE1BC,EAAa,WAAH,OAASD,GAAeD,EAAY,EAEpD,OACE,uCACE,gBAAC,KAAM,CAACtN,MAAO,CAACmB,WAAW,QAASb,OAAO,mBAAoBkD,QAASgK,EAAW,UAAC,cAAW,oBAAGtM,UAAU,2BAC5G,eAAC,KAAQ,CAACP,KAAM2M,EAAY7E,QAAS8E,EAAeE,SAAS,KAAKC,mBAAmB,OAAM,SACzF,eAAC,KAAc,CAAC7D,SAAS,YAAa8D,gBAAiB7K,KAAe,MAAG8K,YAAU,WACjF,gBAAC,KAAe,WACd,gBAAC,KAAc,WACb,eAAC,KAAa,CAAC5N,MAAO,CAAC1B,MAAM,SAAS,SAAC,qBACvC,eAAC,KAAM,CAAC4C,UAAU,YAAY5C,MAAM,OAAOkF,QAASgK,OAEtD,eAAC,KAAY,UACT,eAAC,GAAM,CAACvC,SAAWA,EAAUC,UAAYA,MAG7C,eAAC,KAAc,UACb,eAAC,KAAM,CAAC5M,MAAM,YAAYkF,QAASgK,EAAW,SAAC,qBAU7D,C,wDCEeK,I,+CC1CTrG,GAAa,CACfsG,QAAS,CACPC,WAAY,CAAEC,IAAK,IAAMC,IAAK,MAC9BC,MAAO,EACPC,cAAe,GAEjBC,OAAQ,CACNL,WAAY,CAAEC,IAAK,KAAMC,IAAK,KAC9BC,MAAO,EACPC,cAAe,GAEjBE,OAAQ,CACNN,WAAY,CAAEC,IAAK,IAAKC,IAAK,GAC7BC,MAAO,EACPC,cAAe,IA+ENG,OA3Ef,SAAuBxN,GAEnB,IAAM8K,EAAWvM,eACXkP,EAAS,eAAC3J,GAAA,EAAK,CACb1D,UAAU,qBACVkD,IAAK,mGACLS,IAAI,cACJ2J,SAAO,EACPhL,QAAS,WAAQoI,EAAS,iBAAiB,EAC3C5L,MAAO,CAAEqB,OAAO,SAGlBoN,EAAS,eAAC7J,GAAA,EAAK,CACb1D,UAAU,qBACVkD,IAAK,4FACLS,IAAI,eACJ2J,SAAO,EACPhL,QAAS,WAAQoI,EAAS,iBAAiB,EAC3C5L,MAAO,CAAEqB,OAAO,SAGlBqN,EAAS,eAAC9J,GAAA,EAAK,CACb1D,UAAU,qBACVkD,IAAK,kGACLS,IAAI,cACJ2J,SAAO,EACPhL,QAAS,WAAQoI,EAAS,iBAAiB,EAC3C5L,MAAO,CAAEqB,OAAO,SAExB,OACI,gBAAC,KAAQ,CACLsN,WAAW,EACXC,WAAW,EACXC,UAAU,EACVrH,WAAYA,GACZsH,KAAK,EACLC,UAAU,EAEVC,cAAe,IACfC,iBAAiB,EACjBC,iBAAiB,SACjBC,mBAAoB,IACpBC,eAAe,qBACfC,wBAAyB,CAAC,UAE1BC,aAAa,wBACbC,UAAU,8BAA6B,UAEvC,sBAAKvP,MAAO,CAACC,QAAQ,QAAQ,SACzB,eAAC,KAAW,CAACuP,IAAKjB,EAELkB,eAAe,SACfC,kBAAkB,EAAK,SAChC,yBAAQlM,QAAS,WAAQoI,EAAS,iBAAiB,EAAG+D,QAAQ,OAAQzO,UAAU,cAAclB,MAAO,CAAEM,OAAQ,kBAAkBsP,OAAO,UAAWtI,gBAAgB,SAAS,SAAE,oCAGtL,sBAAKtH,MAAO,CAACC,QAAQ,QAAQ,SACzB,eAAC,KAAW,CAACuP,IAAKf,EAELiB,kBAAkB,EAClBD,eAAe,SAAQ,SAChC,yBAAQjM,QAAS,WAAQoI,EAAS,iBAAiB,EAAG+D,QAAQ,OAAOzO,UAAU,cAAclB,MAAO,CAAEM,OAAQ,kBAAkBsP,OAAO,UAAWtI,gBAAgB,SAAS,SAAE,gCAGrL,sBAAKtH,MAAO,CAACC,QAAQ,QAAQ,SACzB,eAAC,KAAW,CAACuP,IAAKd,EACLgB,kBAAkB,EAClBD,eAAe,SAAQ,SAChC,yBAAQjM,QAAS,WAAQoI,EAAS,iBAAiB,EAAG+D,QAAQ,OAAOzO,UAAU,cAAclB,MAAO,CAAEM,OAAQ,kBAAkBsP,OAAO,UAAWtI,gBAAgB,SAAS,SAAE,kCAKjM,ECqGeuI,OAzKf,WAEE,IAAMpS,EAAW6B,cACjB,EAA8BH,oBAAS,GAAK,oBAArC2Q,EAAO,KAAEC,EAAU,KAC1B,EAA8B5Q,oBAAS,GAAK,oBAA5B6Q,GAAF,KAAW,MAEnBzN,EAAaC,OACbwB,EAAMvB,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IACnC6S,EAAwDjM,EAAhE9T,MAAgCggB,EAAgClM,EAAzC/T,QAA0BiB,EAAe8S,EAAf9S,WACnDif,EAAO1N,aAAY,SAAAjS,GAAK,OAAIA,EAAMwL,WAAW,IACMhM,GAAsBmgB,EAAvEjgB,MAAuEigB,EAAhDlgB,QAAgDkgB,EAAtBngB,UACzD,GAD+EmgB,EAAZhgB,QACvCigB,8BAAiB,oBAAtCxR,EAAM,KAAW,KACRA,EAAOhB,IAAI,WACNmG,kBAAO,GACZA,kBAAO,GAEvBd,qBAAU,WAERxF,EAASkG,KAGX,GAAG,CAAClG,IAyBJ,IAAM4S,EAAavE,mBAAQ,WAc1B,OAbwB,SAAC1N,GAAW,IAAD,WAElB,QAAX,EAAAA,EAAME,aAAK,aAAX,EAAa4E,UAAoB,QAAd,EAAI9E,EAAMG,YAAI,aAAV,EAAY2E,UAAoB,QAAd,EAAI9E,EAAMI,YAAI,aAAV,EAAY0E,UAAwB,QAAlB,EAAI9E,EAAMK,gBAAQ,aAAd,EAAgByE,UAAqB,QAAf,EAAK9E,EAAMM,YAAI,aAAV,EAAYwE,SAA2B,KAAjB9E,EAAMQ,QAAqC,KAAlBR,EAAMZ,SAAoC,OAAlBY,EAAMZ,SAC7KwS,GAAU,GACVD,GAAW,KAGXC,GAAU,GACVD,GAAW,GAIf,CAED,GAAG,IAEG7E,EAAY,SAAC7M,GACjBQ,QAAQC,IAAI,YAAaT,IACnB,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAKb,WACNwS,GAAU,GACVnR,QAAQC,IAAI,WAAYT,GAE5B,EAaMiS,EAA4B,OAAVpf,QAAU,IAAVA,OAAU,EAAVA,EAAYiV,QAAQC,MAAK,SAACC,EAAGC,GAAM,OAAOD,EAAE/P,MAAQgQ,EAAEhQ,KAAK,IAGnF,OACE,uBAAK0J,MAAQuC,EAAWiC,SAAW,CAAE8C,gBAAiB,OAASpC,OAAO,GAAK,CAAE,EAAE,UAMzE4K,GAAW,eAAC,GAAa,IAE3B,sBAAK9P,MAAO,CAAE+E,UAAU,SAAUG,OAAO,QAAQ,SAAC,sBAAIlF,MAAO,CAAC1B,MAAM,MAAOiS,WAAW,SAAUlL,SAAS,UAAU,UAAC,IAAC,kCAAU,6BAC/H,sBAAIrF,MAAO,CAAC1B,MAAM,UAAW+G,SAAS,UAAU,UAAC,IAAC,kCAASyK,EAAU,qBAAuB,6BAE3FvN,EAAWiC,UAAY,eAAC6I,GAAW,CAACpC,SAAWoF,EAAYnF,UAAYA,IAEtEgF,EAAkB,eAAC,GAAM,IAChBD,EAAgB,eAAC,GAAO,CAAChP,QAAQ,SAAQ,SAAEgP,IAE7C,+BACC,eAACrQ,GAAA,EAAS,CAACC,OAAK,WACd,gBAACC,GAAA,EAAG,YACDyC,EAAWe,WAAaf,EAAWgB,iBAAmB,eAACxD,GAAA,EAAG,UACvD,sBAAKC,MAAO,CAAEM,OAAO,sBAAuBkQ,cAAc,OAAQC,YAAY,QAAQ,SACpF,eAAC,GAAM,CAACxF,SAAWoF,EAAYnF,UAAWA,QAIhD,eAACnL,GAAA,EAAG,CAAC2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,UAC1B,OAARvX,QAAQ,IAARA,OAAQ,EAARA,EAAUkT,QAAS,IAAa,OAARlT,QAAQ,IAARA,OAAQ,EAARA,EAAUkT,QAAS,IAuB7CX,EAAWiC,SAET,eAAC1E,GAAA,EAAG,UACO,OAAR9P,QAAQ,IAARA,OAAQ,EAARA,EAAUuW,KAAI,SAAA7U,GAAO,OACtB,eAACqO,GAAA,EAAG,CAAmB2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAGrG,UAAU,SAAQ,SACxE,eAAC,GAAO,CAACxP,QAASA,KADZA,EAAQ8U,IAEZ,OA5BVjE,EAAWiC,SAEZ,eAAC1E,GAAA,EAAG,UACa,OAAfwQ,QAAe,IAAfA,OAAe,EAAfA,EAAiB/J,KAAI,SAAA9H,GAAQ,OAC9B,eAACsB,GAAA,EAAG,CAAqB2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAGrG,UAAU,kBAAiB,SACnF,eAAC,GAAU,CAACzC,SAAUA,KADfA,EAAS+H,IAEd,MAMN,eAAC1G,GAAA,EAAG,CAAEoB,UAAW,OAAO,SACR,OAAfoP,QAAe,IAAfA,OAAe,EAAfA,EAAiB/J,KAAI,SAAA9H,GAAQ,OAC9B,eAACsB,GAAA,EAAG,CAAoB2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAGrG,UAAU,UAAS,SAC3E,eAAC,GAAU,CAACzC,SAAUA,KADhBA,EAAS+H,IAEb,iBAsChC,E,+BCzGeoK,OAxEf,WAA2B,IAAD,UAElBnT,EAAW6B,cACX6Q,EAAO1N,aAAY,SAAAjS,GAAK,OAAIA,EAAMwL,WAAW,IAC3C9L,EAA6BigB,EAA7BjgB,MAAOD,EAAsBkgB,EAAtBlgB,QAASD,EAAamgB,EAAbngB,SAClBgU,EAAMvB,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IACOyT,GAAgB7M,EAAlE9T,MAAkE8T,EAAjD/T,QAAiD+T,EAA5B9S,YAC9C,EAA4Bkf,6BAAiB,oBACrCrd,GADK,KAAW,KACT+d,eAAP/d,IAEFwP,EAAaC,OAEnBS,qBAAU,WACR8N,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,WAEZ1T,EAASH,GAAavK,GAEzB,GAAG,CAAC0K,EAAU1K,IAEd,IAAMqe,EAAa,CAACC,OAAQC,KAAUC,SAAoB,OAAXV,QAAW,IAAXA,GAAqD,QAA1C,EAAXA,EAAahe,MAAM,SAAAmR,GAAG,aAAW,QAAP,EAAAA,EAAIwC,WAAG,aAAP,EAASgL,cAAeze,CAAE,WAAC,WAA1C,EAAX,EAAuD0e,cAEhGC,EAAgB,CAAC,8EACA,8EACA,8EACA,8EACA,8EACA,8EACA,+EAEtB,OACE,kCACM,EACF,gBAACC,GAAA,EAAU,CAAC3R,MAAO,CAAE2H,WAAW,UAAU,UACxC,eAACgK,GAAA,EAAWlL,KAAI,CAACiB,KAAK,IAAG,SAAC,oBAAGxG,UAAU,aAAalB,MAAO,CAAC1B,MAAM,aAClE,eAACqT,GAAA,EAAWlL,KAAI,CAAEmL,QAAM,WACT,OAAXf,QAAW,IAAXA,GAAqD,QAA1C,EAAXA,EAAahe,MAAM,SAAAmR,GAAG,aAAW,QAAP,EAAAA,EAAIwC,WAAG,aAAP,EAASgL,cAAeze,CAAE,WAAC,WAA1C,EAAX,EAAuDjD,UAK7D,eAAC,QAAI,CAAC4U,IAAK,EAAGxD,UAAU,wBAAuB,SAAC,WAChD,qBAAIlB,MAAO,CAAC1B,MAAM,WAAW,SAAc,OAAXuS,QAAW,IAAXA,GAAqD,QAA1C,EAAXA,EAAahe,MAAM,SAAAmR,GAAG,aAAW,QAAP,EAAAA,EAAIwC,WAAG,aAAP,EAASgL,cAAeze,CAAE,WAAC,WAA1C,EAAX,EAAuDjD,OAGvF,oBAAG+hB,wBAAyBT,IAC5B,+BACE,sBAAKvM,IAAI,UAAU7E,MAAOuC,EAAWiC,SAAW,CAACsN,SAAS,MAAO5M,OAAO,SAAW,CAAEA,OAAO,SAAWd,IAAKsN,EAAeK,KAAKC,SAAWN,EAAcxO,OAAU,OAGnKjT,EAAU,eAAC,GAAM,IACRC,EAAQ,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAAE/Q,IAErC,+BACG,eAAC4P,GAAA,EAAG,UACmG,KAA7F,OAAR9P,QAAQ,IAARA,GAAwF,QAAhF,EAARA,EAAUqD,QAAO,SAAA3B,GAAO,eAAW,OAAPA,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAAS+M,gBAAQ,OAA4B,QAA5B,EAAjB,EAAmB8H,KAAI,SAAAzT,GAAC,OAAIA,EAAE0T,IAAIgL,UAAU,WAAC,WAAtC,EAAP,EAA+CS,SAASlf,EAAG,WAAC,WAAhF,EAAR,EAA0FmQ,QAAe,+BAAK,yDAAqE,OAARlT,QAAQ,IAARA,GAAwF,QAAhF,EAARA,EAAUqD,QAAO,SAAA3B,GAAO,eAAW,OAAPA,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAAS+M,gBAAQ,OAA4B,QAA5B,EAAjB,EAAmB8H,KAAI,SAAAzT,GAAC,OAAIA,EAAE0T,IAAIgL,UAAU,WAAC,WAAtC,EAAP,EAA+CS,SAASlf,EAAG,WAAC,WAAhF,EAAR,EAA0FwT,KAAI,SAAA7U,GAAO,OACjR,eAACqO,GAAA,EAAG,CAAmB2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAGrG,UAAU,SAAQ,SACzE,eAAC,GAAO,CAACxP,QAASA,EAAS8W,MAAOzV,KAD5BrB,EAAQ8U,IAEZ,UAU3B,E,yCCvFO,I,mDCmiBQ0L,OA1gBf,SAAuB,GAAM,EAALC,MAAS,IAAD,cAE9B,EAAsBrB,eAAd/d,EAAE,EAAFA,GAAIyV,EAAK,EAALA,MAGZ,GADiBnJ,eACKF,mBAAS,IAAE,oBAA1BlM,EAAG,KAAEmf,EAAM,KAEZ3U,EAAW6B,cACXiD,EAAaC,OAGZzO,EADW0O,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC/CnI,SAEDse,EAAa5P,aAAY,SAAAjS,GAAK,OAAIA,EAAMkB,OAAO,IAC9CzB,EAA2BoiB,EAA3BpiB,QAASC,EAAkBmiB,EAAlBniB,MAAOwB,EAAW2gB,EAAX3gB,QAEvB,EAA4ByN,mBAAS,MAAK,oBAAnC+I,EAAM,KAAEoK,EAAS,KAExBrP,qBAAU,WAOL,OANCiE,KAAQC,KAAK,CACbC,OAAQ,CACNC,SAAU,CAAC,aAAc,eAGvB5J,EAASS,GAAenL,IACtB,WAAO,CAEnB,GAAG,CAAC0K,EAAU1K,IAgBdkQ,qBAAU,WACR,GAAU,OAAPvR,QAAO,IAAPA,OAAO,EAAPA,EAASwW,OAAO,CAAC,IAAD,IACTqK,EAAaC,MAAMC,KAAY,OAAP/gB,QAAO,IAAPA,OAAO,EAAPA,EAASwW,QAAQY,UAAS,SAAAhW,GAAC,OAAgB,IAAZA,EAAEwD,KAAW,IAEpEoc,EAAmD,QAAlC,EAAEF,MAAMC,KAAK,aAAW,OAAP/gB,QAAO,IAAPA,OAAO,EAAPA,EAASwW,gBAAQ,aAAhC,EAAkC9B,MAAK,SAACtT,EAAG6f,GAAC,OAAK7f,EAAEwD,MAAQqc,EAAErc,KAAK,IAAEiQ,KAAI,SAAA1C,GAC7F,MAAO,CACHA,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOA,MACd9Q,GAAS,OAAL8Q,QAAK,IAALA,OAAK,EAALA,EAAO9Q,GAEnB,IAEM6f,EAAgD,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrf,QAAO,SAAAP,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,OAAgB,OAATwf,QAAS,IAATA,OAAS,EAATA,EAAWxf,GAAE,IACxFwf,GACCK,EAA6BC,QAAQ,CAAChP,MAAgB,OAAT0O,QAAS,IAATA,OAAS,EAATA,EAAW1O,MAAO9Q,GAAa,OAATwf,QAAS,IAATA,OAAS,EAATA,EAAWxf,KAGlF,IAAM+f,EAAgD,QAA5C,eAAO,IAAIC,IAAIH,WAA6B,aAAzC,EAA4CrM,KAAI,SAAA1C,GACzD,MAAO,CACHmP,SAAUnP,EAAMA,MAChBoP,UAAWpP,EAAMA,MAEzB,IACAyO,EAAUQ,EACd,CACA/B,OAAOC,SAAS,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEd,GAAG,CAAQ,OAAPzf,QAAO,IAAPA,OAAO,EAAPA,EAASwW,SAEhB,IAAMkJ,EAAa,CAACC,OAAQC,KAAUC,SAAgB,OAAP7f,QAAO,IAAPA,OAAO,EAAPA,EAAS+f,cAEjDyB,EAAkB,SAACxT,GAEnB0S,GAAO,SAAA1S,GAAC,OAAIA,EAAI,CAAC,GACvB,EAEMyT,EAAkB,SAACzT,GAChBzM,EAAM,GAELmf,GAAO,SAAA1S,GAAC,OAAIA,EAAI,CAAC,GAG3B,EACA,OACE,uBAAKM,MAAO,CAACqB,OAAO,QAAQ,UACxB,gBAACsQ,GAAA,EAAU,CAAC3R,MAAO,CAAE2H,WAAW,SAAUG,eAAgB,QAAQ,UAChE,eAAC6J,GAAA,EAAWlL,KAAI,CAACiB,KAAK,MAAK,SAAC,oBAAGxG,UAAU,aAAalB,MAAO,CAAC1B,MAAM,aACpE,eAACqT,GAAA,EAAWlL,KAAI,CAAEzG,MAAO,CAAE8H,eAAe,kBAAmBsL,mBAAoB,mBAAoB1L,KAAI,uBAAkBc,GAAQ,SAEjI,uBAAMxI,MAAO,CAAC1B,MAAM,QAAUwJ,eAAgB,OAAQsL,mBAAoB,QAAQ,SAAS,OAAP1hB,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAAS+M,gBAAQ,OAAuC,QAAvC,EAAjB,EAAmB5L,MAAK,SAAAC,GAAC,OAAIA,EAAE0T,IAAIgL,aAAehJ,CAAK,WAAC,WAAjD,EAAP,EAA0D1Y,SAEhJ,eAAC6hB,GAAA,EAAWlL,KAAI,CAACmL,QAAM,WACb,OAAPlgB,QAAO,IAAPA,OAAO,EAAPA,EAAS5B,UAGd,eAAC,QAAI,CAAC4U,IAAK,EAAGxD,UAAU,uBAAsB,SAAC,WAC9CnN,GAAY,eAAC,QAAI,CAAC2Q,GAAE,yBAAoB3R,EAAE,SAASmO,UAAU,uBAAuBlB,MAAO,CAAEqT,WAAW,QAAQ,SAAC,iBAEjHpjB,EACQ,eAAC,GAAM,IACNC,EACA,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAAE/Q,IAEzB,iCACI,gBAAC4P,GAAA,EAAG,WACI,eAACC,GAAA,EAAG,CAAE2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,SACtC,eAACzH,GAAA,EAAG,UAKFoI,GAAU,eAAC,KAAY,CAACgG,MAAOhG,EAEhCoL,UAAU,QAcf,gBAACvT,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,UACrC,gBAACgM,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACtB,eAACsS,GAAA,EAAU9M,KAAI,UACX,gCAAI,yBAAQzG,MAAO,CAAE1B,MAAM,UAAW+G,SAAS,SAAUuC,WAAY,sBAAsB,SAAS,OAAPlW,QAAO,IAAPA,OAAO,EAAPA,EAAS5B,OAAc,IAAC,oBAAGkQ,MAAO,CAACqF,SAAS,SAAW/G,MAAM,WAAW,SAAS,OAAP5M,QAAO,IAAPA,OAAO,EAAPA,EAAS2X,uBAEpL,eAACkK,GAAA,EAAU9M,KAAI,UACX,0BAAQzG,MAAO,CAAE1B,MAAM,UAAW+G,SAAS,IAAK,UAAS,OAAP3T,QAAO,IAAPA,OAAO,EAAPA,EAASyW,MAAM,YAGrE,gBAACoL,GAAA,EAAU9M,KAAI,WACX,kCAAQ,gBAAoB,IAAS,OAAP/U,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAAS+M,gBAAQ,WAAV,EAAP,EAAmB8H,KAAI,SAAAzT,GAAC,OAAIA,EAAEhD,IAAI,IAAE0jB,KAAK,UAGnE,OAAP9hB,QAAO,IAAPA,OAAO,EAAPA,EAAS4M,QAAS,gBAACiV,GAAA,EAAU9M,KAAI,WAC9B,kCAAQ,UAAc,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAAS4M,UAM7B,OAAP5M,QAAO,IAAPA,GAAqB,QAAd,EAAPA,EAASgb,oBAAY,WAAd,EAAP,EAAuBxJ,QAAS,GAAK,gBAACqQ,GAAA,EAAU9M,KAAI,WACjD,kCAAQ,kBAAiB,IAAE+L,MAAMiB,QAAe,OAAP/hB,QAAO,IAAPA,OAAO,EAAPA,EAASgb,cAAuB,OAAPhb,QAAO,IAAPA,GAAqB,QAAd,EAAPA,EAASgb,oBAAY,WAAd,EAAP,EAAuB8G,KAAK,MAAe,OAAP9hB,QAAO,IAAPA,OAAO,EAAPA,EAASgb,iBAG3G,OAAPhb,QAAO,IAAPA,OAAO,EAAPA,EAASgiB,oBAAqB,gBAACH,GAAA,EAAU9M,KAAI,WAC1C,kCAAQ,kBAAsB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASgiB,sBAGrC,OAAPhiB,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASiiB,eAAO,WAAT,EAAP,EAAkBzQ,QAAS,GAAK,gBAACqQ,GAAA,EAAU9M,KAAI,WAC5C,kCAAQ,oBAAwB,IAAE+L,MAAMiB,QAAe,OAAP/hB,QAAO,IAAPA,OAAO,EAAPA,EAASiiB,SAAkB,OAAPjiB,QAAO,IAAPA,GAAgB,QAAT,EAAPA,EAASiiB,eAAO,WAAT,EAAP,EAAkBH,KAAK,MAAe,OAAP9hB,QAAO,IAAPA,OAAO,EAAPA,EAASiiB,YAGxG,OAAPjiB,QAAO,IAAPA,OAAO,EAAPA,EAASkiB,aAAc,gBAACL,GAAA,EAAU9M,KAAI,WACnC,kCAAQ,gBAAoB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASkiB,eAGnC,OAAPliB,QAAO,IAAPA,OAAO,EAAPA,EAAS6M,OAAQ,gBAACgV,GAAA,EAAU9M,KAAI,WAC7B,kCAAQ,mBAAuB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAAS6M,SAEtC,OAAP7M,QAAO,IAAPA,OAAO,EAAPA,EAAS+a,gBAAiB,gBAAC8G,GAAA,EAAU9M,KAAI,WACtC,kCAAQ,gBAAoB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAAS+a,kBAEnC,OAAP/a,QAAO,IAAPA,OAAO,EAAPA,EAASmiB,mBAAoB,gBAACN,GAAA,EAAU9M,KAAI,WACzC,kCAAQ,gBAAoB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASmiB,qBAEnC,OAAPniB,QAAO,IAAPA,OAAO,EAAPA,EAASoiB,eAAgB,gBAACP,GAAA,EAAU9M,KAAI,WACrC,kCAAQ,mBAAuB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASoiB,iBAEtC,OAAPpiB,QAAO,IAAPA,OAAO,EAAPA,EAASqiB,cAAe,gBAACR,GAAA,EAAU9M,KAAI,WACpC,kCAAQ,kBAAsB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASqiB,gBAErC,OAAPriB,QAAO,IAAPA,OAAO,EAAPA,EAASsiB,gBAAiB,gBAACT,GAAA,EAAU9M,KAAI,WACtC,kCAAQ,kBAAiB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASsiB,kBAEhC,OAAPtiB,QAAO,IAAPA,OAAO,EAAPA,EAASuiB,kBAAmB,gBAACV,GAAA,EAAU9M,KAAI,WACxC,kCAAQ,eAAmB,IAAS,OAAP/U,QAAO,IAAPA,OAAO,EAAPA,EAASuiB,mBAE1C,eAACV,GAAA,EAAU9M,KAAI,CAACzG,MAAO,CAACwQ,cAAc,QAAQ,SACrC,gBAACzQ,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,UACtC,wBACA,gBAACqB,GAAA,EAAI,WACL,eAACA,GAAA,EAAKI,MAAK,CAAChJ,MAAO,CAAE+E,UAAU,SAAUzG,MAAM,SAAS,SAAC,aACrD,gBAACiV,GAAA,EAAS,CAACtS,QAAQ,QAAO,WAkDd,OAAPvP,QAAO,IAAPA,OAAO,EAAPA,EAAS0W,cAAe,GACrB,eAACmL,GAAA,EAAU9M,KAAI,UACVlE,EAAWiC,SAAW,gBAAC1E,GAAA,EAAG,WACvB,eAACC,GAAA,EAAG,CAACwH,GAAI,EAAE,SAAC,mBACZ,eAACxH,GAAA,EAAG,CAACwH,GAAI,EAAGrG,UAAU,2BAA0B,SAC5C,gBAACpB,GAAA,EAAG,CAAEyH,GAAI,GAAG,UACT,eAACxH,GAAA,EAAG,CAACwH,GAAI,EAAE,SACP,eAACvG,GAAA,EAAM,CAACC,QAAQ,QACRuC,QAAS2P,EAAgB,SAC7B,eAAC,KAAI,CAAC7U,MAAM,MAAM4V,KAAM,SAGhC,eAACnU,GAAA,EAAG,CAACwH,GAAI,EAAE,SACP,eAAC4M,GAAA,EAAU,CAACnU,MAAO,CAACO,MAAM,QAAQ,SAC9B,eAACf,GAAA,EAAKU,QAAO,CACTE,SAAU,SAACV,GAAC,OAAK0S,EAAO7I,OAAO7J,EAAEW,OAAOjC,OAAO,EAC/CA,MAAOnL,EACPyd,GAAI,QAOhB,eAAC3Q,GAAA,EAAG,CAACwH,GAAI,EAAE,SACP,eAACvG,GAAA,EAAM,CAACC,QAAQ,QACRuC,QAAS0P,EAAgB,SAC7B,eAAC,KAAI,CAAC5U,MAAM,QAAQ4V,KAAM,iBAO9C,gBAACpU,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,mBACL,eAACA,GAAA,EAAG,CAACmB,UAAU,2BAA0B,SACrC,gBAACpB,GAAA,EAAG,CAAE4Q,GAAI,GAAG,UACT,eAAC3Q,GAAA,EAAG,CAAC2Q,GAAI,EAAE,SACP,eAAC1P,GAAA,EAAM,CAACC,QAAQ,QACRuC,QAAS2P,EAAgB,SAC7B,eAAC,KAAI,CAAC7U,MAAM,MAAM4V,KAAM,SAGhC,eAACnU,GAAA,EAAG,CAAC2Q,GAAI,EAAE,SACP,eAACyD,GAAA,EAAU,CAACnU,MAAO,CAACO,MAAM,UAAU,SAChC,eAACf,GAAA,EAAKU,QAAO,CACTE,SAAU,SAACV,GAAC,OAAK0S,EAAO7I,OAAO7J,EAAEW,OAAOjC,OAAO,EAC/CA,MAAOnL,EACPyd,GAAI,QAOhB,eAAC3Q,GAAA,EAAG,CAAC2Q,GAAI,EAAE,SACP,eAAC1P,GAAA,EAAM,CAACC,QAAQ,QACRuC,QAAS0P,EAAgB,SAC7B,eAAC,KAAI,CAAC5U,MAAM,QAAQ4V,KAAM,mBAStD,eAACX,GAAA,EAAU9M,KAAI,UACX,eAACzF,GAAA,EAAM,CAEHhB,MAAO,CAAEmB,WAAY,UAAWb,OAAO,qBACvCY,UAAU,gBACVoI,UAAiB,OAAP5X,QAAO,IAAPA,OAAO,EAAPA,EAAS0W,cAAe,EAClC5J,KAAK,SACLgF,QAjSzC,WACrB/F,EAASuK,GAAUuB,OAAOxW,GAAKwW,OAAOtW,KAGtC8d,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEhB,EAwR6F,SAAC,kCAuB5D,wBACA,wBACA,uBAAKnR,MAAO,CAACkF,OAAO,UAAU,UAAC,SAE3B,oBAAGwC,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,OAAM,SACjD,oBAAGhF,UAAU,wBAAwBlB,MAAO,CAAC1B,MAAM,aAE3D,oBAAGoJ,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,UAAS,SACpD,oBAAGhF,UAAU,uBAAuBlB,MAAO,CAAC1B,MAAM,aAE1D,oBAAGoJ,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,YAAW,SACtD,oBAAGhF,UAAU,yBAAyBlB,MAAO,CAAC1B,MAAM,aAE5D,oBAAGoJ,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,YAAW,SACtD,oBAAGhF,UAAU,kCAAkClB,MAAO,CAAC1B,MAAM,aAErE,oBAAGoJ,KAAK,WAAW1H,MAAO,CAACkF,OAAO,UAAWgB,MAAM,OAAM,SACjD,oBAAGhF,UAAU,yBAAyBlB,MAAO,CAAC1B,MAAM,sBAyE5E,eAACwB,GAAA,EAAG,UACA,gBAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,GAAIgL,GAAI,GAAItE,GAAI,GAAI9E,GAAI,GAAG,UAC5C,qBAAIvH,MAAO,CAAC1B,MAAM,SAAS,SAAC,mBASxB,oBAAGuT,wBAAyBT,cA6E5D,E,kDC9QegD,OAvPf,WAEE,IAAMxI,EAAWvM,eAEjB,GADiBE,eACW6Q,8BAAiB,oBAAtCxR,EAAM,KACb,GADwB,KACEO,oBAAS,IAAK,oBAAjCb,EAAK,KAAE+V,EAAQ,KAChBthB,EAAK6L,EAAOhB,IAAI,MAKtB,GAJYgB,EAAOhB,IAAI,OAIOuB,mBAAS,UAAQ,oBAAxC3M,EAAO,KAAE8hB,EAAU,KAC1B,EAAgCnV,mBAAS,WAAU,oBAA5C1M,EAAQ,KAAE8hB,EAAW,KAEtB9W,EAAW6B,cACXiD,EAAaC,OAGXjQ,EADKkQ,aAAY,SAACjS,GAAK,OAAKA,EAAMyL,IAAI,IACtC1J,UAgCR,OA7BA0Q,qBAAU,WACJlQ,GACFge,OAAOC,SAAS,CACdC,IAAK,EACLC,KAAM,EACNC,SAAU,UAGhB,GAAG,CAACpe,IAsBF,iCACA,gBAAC+M,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,UACvC,qBAAIvH,MAAO,CAAC1B,MAAM,SAAS,SAAC,UACL,KAAb,OAAT/L,QAAS,IAATA,OAAS,EAATA,EAAW2Q,QACV,gBAAC,GAAO,CAACjC,QAAQ,UAAS,UACxB,kCAAQ,yBAA6B,IAAC,eAAC,QAAI,CAACyD,GAAG,IAAI1E,MAAO,CAAC1B,MAAM,SAAS,SAAC,wBAG7E,eAACiV,GAAA,EAAS,CAACtS,QAAQ,QAAO,SACd,OAAT1O,QAAS,IAATA,OAAS,EAATA,EAAWgU,KAAI,SAACvT,GACf,OACA,eAACugB,GAAA,EAAU9M,KAAI,CAAe+N,OAAQxhB,EAAKC,IAAM,EAAE,SACjD,gBAAC6M,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SACtC,eAAC3C,GAAA,EAAK,CACJR,IAAKpR,EAAK6Q,MACVgB,IAAK7R,EAAKlD,KACV+P,OAAK,EACL2O,SAAO,MAGX,eAACzO,GAAA,EAAG,CAAC2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SACrC,eAAC,QAAI,CAACvH,MAAO,CAAE8H,eAAe,QAASpD,GAAE,oBAAe1R,EAAKD,IAAK,SAAC,kCAAQ,qBAAIiN,MAAO,CAAC1B,MAAM,QAAS+G,SAAS,SAAUyC,eAAe,QAAQ,SAAE9U,EAAKlD,aAEzJ,eAACiQ,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SAAC,0BAAQvH,MAAQuC,EAAWiC,SAAW,CAACa,SAAS,SAAW,CAACA,SAAS,QAAQ,UAAErS,EAAKmV,MAAMsM,QAAQ,GAAG,YAC9I,eAAC1U,GAAA,EAAG,CAAC2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SAkBrC,eAAC/H,GAAA,EAAKU,QAAO,CACXoJ,UAAQ,EACRlL,MAAOpL,EAAKC,IACZmN,SAAU,SAACV,GAAC,OACVjC,EAASuK,GAAUhV,EAAKD,GAAIwW,OAAO7J,EAAEW,OAAOjC,QAAQ,MAmC1D,eAAC2B,GAAA,EAAG,CAAC2Q,GAAI,EAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SACtC,eAACvG,GAAA,EAAM,CACLxC,KAAK,SACLyC,QAAQ,QACRuC,QAAS,kBA3GC,SAACzQ,GAC7B0K,EAAS4K,GAAetV,GAC1B,CAyGmC2hB,CAAsB1hB,EAAKD,GAAG,EAAC,SAE9C,eAAC,KAAe,CAAC0Q,KAAMkR,eA7EV3hB,EAAKD,GAkF5B,SAIN,eAACgN,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,SACvC,gBAACqB,GAAA,EAAI,CAACtI,OAAO,UAASN,MAAO,CAACkF,OAAO,QAAQ,UAC1C,eAAC0D,GAAA,EAAKhF,OAAM,CAACuF,GAAG,KAAI,SAAC,oBACtB,gBAACoK,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACxB,eAACsS,GAAA,EAAU9M,KAAI,UACb,gBAAC3G,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SAAC,kCAAQ,gBACjD,gBAACxH,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAC,IAAC,kCAAQ,mBAK5C,OAAThV,QAAS,IAATA,OAAS,EAATA,EAAWc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,IAAEsT,KAAI,SAACvT,GAAI,OACxC,eAACugB,GAAA,EAAU9M,KAAI,UACb,gBAAC3G,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAEvU,EAAKC,IAAI,gBAAcD,EAAKlD,QACrE,gBAACiQ,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAC,KAAGvU,EAAKC,IAAMD,EAAKmV,OAAOsM,QAAQ,UAHzDzhB,EAAKD,GAMR,IAEtB,eAACwgB,GAAA,EAAU9M,KAAI,UACT,gBAAC3G,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SAAC,kCAAQ,6BAChD,gBAACxH,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAC,IAAEhV,EAAUoQ,QAAO,SAACkS,EAAK7hB,GAAI,OAAM6hB,EAAM7hB,EAAKC,GAAG,GAAE,WAInG,eAACsgB,GAAA,EAAU9M,KAAI,UACT,gBAAC3G,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAC,IAAC,kCAAQ,oBACjD,gBAACxH,GAAA,EAAG,CAAC6U,EAAG,GAAIjP,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UAAC,IAAEhV,EAAUoQ,QAAO,SAACkS,EAAK7hB,GAAI,OAAM6hB,EAAM7hB,EAAKC,IAAMD,EAAKmV,KAAK,GAAE,GAAGsM,QAAQ,GAAG,eAI9H,eAAClB,GAAA,EAAU9M,KAAI,UAEX,gBAACqO,GAAA,EAAW,WACV,eAACC,GAAA,EAAS,CAAChiB,GAAG,sCAAqC,SAAC,qBAAIiN,MAAO,CAAC1B,MAAM,SAAS,SAAC,cAChF,gBAAC0W,GAAA,EAAU,CACT,kBAAgB,sCAChBllB,KAAK,iCACLsO,MAAO5L,EACP4N,SAAU,SAACV,GAAC,OAAK4U,EAAW5U,EAAEW,OAAOjC,MAAM,EAAC,UAE5C,eAAC6W,GAAA,EAAgB,CAAC7W,MAAM,QAAQ8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,sBACzE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,QAAQ8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,gCAKjF,eAAC+G,GAAA,EAAU9M,KAAI,UAEX,gBAACqO,GAAA,EAAW,WACV,eAACC,GAAA,EAAS,CAAChiB,GAAG,sCAAqC,SAAC,qBAAIiN,MAAO,CAAC1B,MAAM,SAAS,SAAC,eAChF,gBAAC0W,GAAA,EAAU,CACT,kBAAgB,sCAChBllB,KAAK,iCACLsO,MAAO3L,EACP2N,SAAU,SAACV,GAAC,OAAK6U,EAAY7U,EAAEW,OAAOjC,MAAM,EAAC,UAE7C,eAAC6W,GAAA,EAAgB,CAAC7W,MAAM,SAAS8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,oBAC1E,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,UAAU8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,iCAKnF,eAAC+G,GAAA,EAAU9M,KAAI,UACb,eAACzF,GAAA,EAAM,CACLxC,KAAK,SACL0C,UAAU,wBACVoI,SAAgC,IAArB/W,EAAU2Q,OACrBM,QA1LU,SAAC9D,GACpBnN,EAAUoQ,QAAO,SAACkS,EAAK7hB,GAAI,OAAM6hB,EAAM7hB,EAAKC,IAAMD,EAAKmV,KAAK,GAAE,GAAK,IACpEkM,GAAS,IAGX5W,EAAS6K,GAA0B9V,EAASC,IAC5CmZ,EAAS,aAEX,EAkLuC,SAAC,wCAQtC,eAAC9L,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,CAACC,MAAO,CAAEC,QAAQ,UAAW0F,GAAI,EAAE,SACnC,eAAC3E,GAAA,EAAM,CAACxC,KAAK,SACP0C,UAAU,wBAEVsC,QA7LM,WAElBoI,EAAS,IACX,EA0LmC,SAAC,iCAKlC,eAAC9L,GAAA,EAAG,UACF,wBAAME,MAAO,CAAEM,OAAQhC,EAAQ,kBAAoB,gBAAkBiC,MAAM,MAAOsJ,SAAS,SAAU5J,QAAS,OAAQ8E,UAAU,SAAUG,OAAQ,OAAQG,SAAS,UAAU,UAAC,6HACrE9S,EAAUoQ,QAAO,SAACkS,EAAK7hB,GAAI,OAAM6hB,EAAM7hB,EAAKC,IAAMD,EAAKmV,KAAK,GAAE,GAAGsM,QAAQ,GAAG,cAI3L,ECpQeW,OAZf,SAAuB,GAAa,IAAZnI,EAAQ,EAARA,SACtB,OACE,eAACrN,GAAA,EAAS,UACR,eAACE,GAAA,EAAG,CAACoB,UAAU,4BAA2B,SACpC,eAACnB,GAAA,EAAG,CAACwH,GAAI,GAAI5B,GAAI,EAAE,SACdsH,OAKjB,ECkFiBoI,OAnFjB,WAEI,MAA2BlW,mBAAS,IAAG,oBAAhCwC,EAAK,KAAG2T,EAAQ,KACvB,EAAiCnW,mBAAS,IAAG,oBAC7C,GADe,KAAc,KACFA,mBAAS,KAAG,oBACvC,GADY,KAAW,KACQA,mBAAS,KAAG,oBAC3C,GADc,KAAa,KACSA,mBAAS,KAAG,oBAChD,GADiB,KAAe,KACEA,mBAAS,KAAG,oBAC9C,GADgB,KAAc,KACIA,mBAAS,KAAG,oBAAvCyC,EAAQ,KAAG2T,EAAW,KAEvB9X,EAAW6B,cAEXsM,EAAWvM,eAEjB,EAA4B+Q,6BAAiB,oBAAtCxR,EAAM,KACP4W,GADkB,KACP5W,EAAOhB,IAAI,aAGtB/I,EAAO4N,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IACzCnI,EAA6Bc,EAA7Bd,SAAU7D,EAAmB2E,EAAnB3E,MAAOD,EAAY4E,EAAZ5E,QAgBzB,OAdAgT,qBAAU,WAEHlP,GAEC6X,EAAS,IAEjB,GAAE,CAACA,EAAU7X,EAAUyhB,IASrB,gBAAC,GAAa,WACZ,8BAAI,YACHtlB,GAAS,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAC1B/Q,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAACuP,GAAA,EAAI,CAACC,SAZY,SAACqH,GACnBA,EAAMnH,iBACNlC,EAASiE,GAAMC,EAAOC,GAE1B,EAQkC,UACtB,gBAACpC,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,iBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,QACL2B,YAAY,mBACZ/B,MAAOuD,EACPvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,OAKrD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,aAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,WACL2B,YAAY,sBACZ/B,MAAOwD,EACPxB,SAAU,SAACV,GAAC,OAAK6V,EAAY7V,EAAEW,OAAOjC,MAAM,OAKxD,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASoX,SAAS,UAAS,SAAC,oBAKjD,eAAC9V,GAAA,EAAG,CAACoB,UAAU,OAAM,SACjB,gBAACnB,GAAA,EAAG,WAAC,kBACU,eAAC,QAAI,CAAC2E,GAAK8Q,EAAQ,6BAAyBA,GAAa,YAAa,SAAC,wBAKhG,E,cC7FF,mmGAAAnY,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMwY,GAAW,SAACC,EAAUnU,EAAOC,EAAUmU,EAAUpX,EAAOqX,EAASC,EAAYC,GACtF,gDAAO,WAAOzY,GAAQ,0EAyBqC,OAtBjDC,EAAS,yCAAG,yFAMb,OAJKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAEtB,SACsBnE,KAAMoB,KAAK,uBAClC,CACI,KAAO+W,EACP,MAASnU,EACT,SAAYoU,EACZ,MAASpX,EACT,QAAWqX,EACX,WAAcC,EACd,UAAaC,EACb,SAAYtU,GACbC,GAAO,OAVE,OAUF,SAVFhE,EAAI,EAAJA,KAAI,kBAWLA,GAAI,2CACd,kBAnBc,4CAsBXJ,EAAS/I,EAAoBH,uBAAsB,SAChCmJ,IAAW,OAAxBG,EAAI,OACVJ,EAAS/I,EAAoBF,oBAAoBqJ,IAEjDJ,EAASrJ,EAAYH,iBAAiB4J,IAEtC3L,aAAa6P,QAAQ,WAAY3P,KAAK4P,UAAUnE,IAAM,kDAItDJ,EACI/I,EAAoBD,iBAClB,KAAMsJ,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,mDA3CD,EA4CJ,EC6JekY,OAjMf,WAEI,MAA6BhX,mBAAS,IAAG,oBAAlC2W,EAAQ,KAAGM,EAAO,KACzB,EAA2BjX,mBAAS,IAAG,oBAAhCwC,EAAK,KAAG2T,EAAQ,KACvB,EAAiCnW,mBAAS,IAAG,oBAAtC4W,EAAQ,KAAGM,EAAW,KAC7B,EAA2BlX,mBAAS,IAAG,oBAAhCR,EAAK,KAAG2X,EAAQ,KACvB,EAA+BnX,mBAAS,IAAG,oBAApC6W,EAAO,KAAGO,EAAU,KAC3B,EAAoCpX,mBAAS,IAAG,oBAAzC8W,EAAU,KAAGO,EAAY,KAChC,EAAkCrX,mBAAS,IAAG,oBAAvC+W,EAAS,KAAGO,EAAW,KAC9B,EAAkCtX,mBAAS,IAAG,oBAAvCyC,EAAQ,KAAG2T,EAAW,KAC7B,EAAgDpW,mBAAS,IAAG,oBAArDuX,EAAe,KAAGC,EAAkB,KAC3C,EAAgCxX,mBAAS,IAAG,oBAArClB,EAAO,KAAG2Y,EAAU,KAGrBnZ,EAAW6B,cAEXsM,EAAWvM,eAEjB,EAA4B+Q,6BAAiB,oBAAtCxR,EAAM,KACP4W,GADkB,KACP5W,EAAOhB,IAAI,aAEtBzB,EAAesG,aAAY,SAAAjS,GAAK,OAAIA,EAAM2L,YAAY,IACpDpI,EAA6BoI,EAA7BpI,SAAU7D,EAAmBiM,EAAnBjM,MAAOD,EAAYkM,EAAZlM,QAsB3B,OApBEgT,qBAAU,WAEHlP,GACC6X,EAAS,sBAAD,OAAuB4J,GAEvC,GAAE,CAAC5J,EAAU7X,EAAUyhB,IAgBvB,gBAAC,GAAa,WACV,8BAAI,iBACHvX,GAAW,eAAC,GAAO,CAACgD,QAAQ,SAAQ,SAC5BhD,IAER/N,GAAS,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAC1B/Q,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAACuP,GAAA,EAAI,CAACC,SAtBY,SAACqH,GACnBA,EAAMnH,iBACHiC,GAAY8U,EAEXE,EAAW,0BAEfnZ,EAASoY,GAASC,EAAUnU,EAAOC,EAAUmU,EAAUpX,EAAOqX,EAASC,EAAYC,GAGvF,EAakC,UACtB,gBAAC1W,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,cAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,uBACZ/B,MAAO0X,EACP1V,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,OAMpD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,iBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,QACL2B,YAAY,mBACZ/B,MAAOuD,EACPvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,OAKrD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,WACL2B,YAAY,gCACZ/B,MAAO2X,EACP3V,SAAU,SAACV,GAAC,OAAK2W,EAAY3W,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,mBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,QACL2B,YAAY,gCACZ/B,MAAOO,EACPyB,SAAU,SAACV,GAAC,OAAK4W,EAAS5W,EAAEW,OAAOjC,MAAM,OAKrD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,WAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,UACL2B,YAAY,yBACZ/B,MAAO4X,EACP5V,SAAU,SAACV,GAAC,OAAK6W,EAAW7W,EAAEW,OAAOjC,MAAM,OAKvD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,aACL2B,YAAY,iCACZ/B,MAAO6X,EACP7V,SAAU,SAACV,GAAC,OAAK8W,EAAa9W,EAAEW,OAAOjC,MAAM,OAKzD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,yBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL1B,KAAK,YACL2B,YAAY,+BACZ/B,MAAO8X,EACP9V,SAAU,SAACV,GAAC,OAAK+W,EAAY/W,EAAEW,OAAOjC,MAAM,OAIxD,wBACA,wBACA,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,aAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,WACL2B,YAAY,mBACZ/B,MAAOwD,EACPxB,SAAU,SAACV,GAAC,OAAK6V,EAAY7V,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,qBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,WACL2B,YAAY,uBACZ/B,MAAOsY,EACPtW,SAAU,SAACV,GAAC,OAAKiX,EAAmBjX,EAAEW,OAAOjC,MAAM,OAK/D,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASoX,SAAS,UAAS,SAAC,oBAMjD,eAAC9V,GAAA,EAAG,CAACoB,UAAU,OAAM,SACjB,gBAACnB,GAAA,EAAG,WAAC,oBACY,eAAC,QAAI,CAAC2E,GAAK8Q,EAAQ,0BAAsBA,GAAa,SAAU,SAAC,iBAK9F,E,cC3MA,mmGAAAnY,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMyZ,GAAiB,SAAC/jB,GAC3B,gDAAO,WAAO0K,EAAUwK,GAAQ,8EAoByB,OApBzB,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMC,IAAI,cAAD,OAAe7K,EAAE,KAAK8O,GAAO,OAAjD,OAAiD,SAArDhE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAASvI,EAAmBJ,sBAAqB,SAC9B4I,IAAW,OAAxBG,EAAI,OAEVJ,EAASvI,EAAmBH,mBAAmB8I,IAAM,kDAKrDJ,EACIvI,EAAmBF,gBACjB,KAAM+I,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,EAEahJ,GAAmB,WAC5B,gDAAO,WAAOwI,GAAQ,kEAElB,IACIA,EAASvI,EAAmBD,mBAWhC,CATE,MAAO/E,GAELuN,EACIvI,EAAmBF,gBACjB9E,EAAM6N,UAAY7N,EAAM6N,SAASF,KAAKG,OACpC9N,EAAM6N,SAASF,KAAKG,OACpB9N,EAAM+N,SAGlB,CAAC,2CACJ,mDAfD,EAgBJ,E,cC5DA,mmGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAM4Z,GAAoB,SAACpiB,GAC9B,gDAAO,WAAO4I,EAAUwK,GAAQ,8EAoBqC,OApBrC,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMuZ,IAAI,6BAA8BriB,EAAMgN,GAAO,OAAhE,OAAgE,SAApEhE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAASjI,EAAyBH,4BAA2B,SAC1CqI,IAAW,OAAxBG,EAAI,OAEVJ,EAASjI,EAAyB2hB,yBAAyBtZ,IAE3DJ,EAASrJ,EAAYH,oBAErB/B,aAAa6P,QAAQ,WAAY3P,KAAK4P,UAAUnE,IAAM,kDAItDJ,EACIjI,EAAyBF,sBACvB,KAAMyI,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,E,cC5CA,mmGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAM+Z,GAAe,WACxB,gDAAO,WAAO3Z,EAAUwK,GAAQ,8EAuBuC,OAvBvC,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAIV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SAEsBrZ,KAAMC,IAAI,uBAAwBiE,GAAO,OAApD,OAAoD,SAAxDhE,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAbc,4CAgBXJ,EAASzF,EAA0BJ,6BAA4B,SAC5C8F,IAAW,OAAxBG,EAAI,OAEVJ,EAASzF,EAA0BH,0BAA0BgG,IAAM,kDAKnEJ,EACIzF,EAA0BF,uBACxB,KAAMiG,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,ECkKeoZ,OA9Lf,WAEI,MAAyBlY,mBAAS,IAAG,oBAA9BrP,EAAI,KAAGsmB,EAAO,KACrB,EAA2BjX,mBAAS,IAAG,oBAAhCwC,EAAK,KAAG2T,EAAQ,KACvB,EAAkCnW,mBAAS,IAAG,oBAAvCyC,EAAQ,KAAG2T,EAAW,KAC7B,EAAgDpW,mBAAS,IAAG,oBAArDuX,EAAe,KAAGC,EAAkB,KAC3C,EAAgCxX,mBAAS,IAAG,oBAArClB,EAAO,KAAG2Y,EAAU,KAErBnZ,EAAW6B,cAEXsM,EAAWvM,eAEXjD,EAAcqG,aAAY,SAAAjS,GAAK,OAAIA,EAAM4L,WAAW,IAClDvH,EAAyBuH,EAAzBvH,KAAM3E,EAAmBkM,EAAnBlM,MAAOD,EAAYmM,EAAZnM,QAGb8D,EADU0O,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC9CnI,SAGA5D,EADkBsS,aAAY,SAAAjS,GAAK,OAAIA,EAAM6L,iBAAiB,IAC9DlM,QAEFuM,EAAqB+F,aAAY,SAAAjS,GAAK,OAAIA,EAAMkM,kBAAkB,IAChE/E,EAAuD+E,EAAvD/E,OAAiB2f,EAAsC5a,EAA/CzM,QAA+BsnB,EAAgB7a,EAAvBxM,MAsC1C,OAnCE+S,qBAAU,WAEFlP,EAGgC,IAA7ByjB,OAAOC,KAAK5iB,GAAMqO,QAAgB/S,GACjCsN,EAASjI,EAAyBD,0BAClCkI,EAASqZ,GAAe,YACxBrZ,EAAS2Z,QAEThB,EAAQvhB,EAAK/E,MACbwlB,EAASzgB,EAAK8M,QARlBiK,EAAS,SAWjB,GAAE,CAACA,EAAU7X,EAAU0J,EAAU5I,EAAM1E,IAsBvC,gBAAC2P,GAAA,EAAG,WAEA,gBAACC,GAAA,EAAG,CAAC4F,GAAI,EAAE,UACP,8BAAI,iBACH1H,GAAW,eAAC,GAAO,CAACgD,QAAQ,SAAQ,SAChChD,IAER/N,GAAS,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAC1B/Q,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAACuP,GAAA,EAAI,CAACC,SA9BY,SAACqH,GACnBA,EAAMnH,iBACHiC,GAAY8U,EAEXE,EAAW,2BAEPnZ,EAASwZ,GAAkB,CACvB,GAAMpiB,EAAK2R,IACX,KAAO1W,EACP,MAAQ6R,EAER,SAAWC,KAEfgV,EAAW,IAGvB,EAckC,UACtB,gBAACpX,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,SAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,gBACZ/B,MAAOtO,EACPsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,OAMpD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,iBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,QACL2B,YAAY,kBACZ/B,MAAOuD,EACPvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,OAKrD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,aAGZ,eAACnW,GAAA,EAAKU,QAAO,CAEL1B,KAAK,WACL2B,YAAY,qBACZ/B,MAAOwD,EACPxB,SAAU,SAACV,GAAC,OAAK6V,EAAY7V,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,qBAGZ,eAACnW,GAAA,EAAKU,QAAO,CAEL1B,KAAK,WACL2B,YAAY,uBACZ/B,MAAOsY,EACPtW,SAAU,SAACV,GAAC,OAAKiX,EAAmBjX,EAAEW,OAAOjC,MAAM,OAK/D,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASoX,SAAS,UAAS,SAAC,iBAMjD,gBAAC7V,GAAA,EAAG,CAAC4F,GAAI,EAAE,UACP,8BAAI,oBAEH2R,EACG,eAAC,GAAM,IAGPC,EACA,eAAC,GAAO,CAACtW,QAAU,SAAQ,SAClBsW,IAIT,gBAACG,GAAA,EAAK,CAACC,SAAO,EAACnQ,YAAU,EAACtG,UAAU,WAAU,UAC1C,iCACI,gCACI,8BAAI,OACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,SACJ,8BAAI,cACJ,6BAIR,iCAEKvJ,EAAO4O,KAAI,SAAAjQ,GAAK,OACb,gCACI,8BAAKA,EAAMkQ,MACX,8BAAKlQ,EAAMshB,UAAUC,UAAU,EAAG,MAClC,gCAAKvhB,EAAMwhB,WAAW,UACtB,8BAAKxhB,EAAMyhB,OAASzhB,EAAM0hB,OAAOH,UAAU,EAAG,IAC1C,oBAAG3W,UAAU,eAAelB,MAAO,CAAE1B,MAAO,WAEhD,8BAAKhI,EAAMkQ,MACX,8BACI,eAAC,iBAAa,CAAC9B,GAAE,iBAAYpO,EAAMkQ,KAAM,SACrC,eAACxF,GAAA,EAAM,CAACE,UAAU,SAAQ,SAAC,kBAV9B5K,EAAMkQ,IAeV,cASjC,ECzMayR,GAAsB,SAACpa,GAChC,OAAQ,SAACJ,GAEDA,EAAS3H,EAAgBD,mBAAmBgI,IAE5C3L,aAAa6P,QAAQ,kBAAmB3P,KAAK4P,UAAUnE,GAE/D,CACJ,EC6Ceqa,OArDf,SAAuB,GAAwB,IAAvBC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAK,EAALA,MACpC,OACE,gBAACrT,GAAA,EAAG,CAAC9D,UAAU,8BAA6B,UACxC,eAAC8D,GAAA,EAAIyB,KAAI,UACJ0R,EACO,eAAC,iBAAa,CAACzT,GAAG,SAAQ,SACtB,eAACM,GAAA,EAAIC,KAAI,UACL,yBAAQjF,MAAO,CAAC1B,MAAM,SAAS,SAAC,cAI5C,eAAC0G,GAAA,EAAIC,KAAI,CAACqE,UAAQ,WAAC,YAO3B,eAACtE,GAAA,EAAIyB,KAAI,UACJ2R,EACO,eAAC,iBAAa,CAAC1T,GAAG,YAAW,SACzB,eAACM,GAAA,EAAIC,KAAI,UACT,yBAAQjF,MAAO,CAAC1B,MAAM,SAAS,SAAC,eAIxC,eAAC0G,GAAA,EAAIC,KAAI,CAACqE,UAAQ,WAAC,aAO3B,eAACtE,GAAA,EAAIyB,KAAI,UACJ4R,EACO,eAAC,iBAAa,CAAC3T,GAAG,cAAa,SAC3B,eAACM,GAAA,EAAIC,KAAI,UACT,yBAAQjF,MAAO,CAAC1B,MAAM,SAAS,SAAC,iBAIxC,eAAC0G,GAAA,EAAIC,KAAI,CAACqE,UAAQ,WAAC,iBAUnC,E,4DC0NegP,OAjQf,WAA2B,IAAD,UAGd1iB,EADS6M,aAAY,SAAAjS,GAAK,OAAIA,EAAM8L,QAAQ,IAC5C1G,gBAER,EAA2BuJ,mBAAS,KAAI,oBAAjCf,EAAK,KAAGma,EAAQ,KACvB,EAAyBpZ,mBAASvJ,EAAgB9F,MAAK,oBAAhDA,EAAI,KAAGsmB,EAAO,KACrB,EAA2BjX,mBAASvJ,EAAgB+L,OAAM,oBAAnDA,EAAK,KAAG2T,EAAQ,KACvB,EAAiCnW,mBAASvJ,EAAgBgM,UAAS,oBAA5DA,EAAQ,KACf,GAD6B,KACJzC,mBAASvJ,EAAgBmJ,OAAK,oBAAhDA,EAAI,KAAGyZ,EAAO,KACrB,EAA+BrZ,mBAASvJ,EAAgBogB,SAAQ,oBAAzDA,EAAO,KAAGO,EAAU,KAC3B,EAAkCpX,mBAASvJ,EAAgBsgB,WAAU,oBAA9DA,EAAS,KAAGO,EAAW,KAC9B,EAAoCtX,mBAASvJ,EAAgBqgB,YAAW,oBAAjEA,EAAU,KAAGO,EAAY,KAChC,EAAgCrX,mBAASvJ,EAAgB6iB,SAAQ,oBAA1DA,EAAO,KAAGC,EAAU,KAErBjb,EAAW6B,cAEXsM,EAAWvM,eACjB,EAAiEsZ,aAAQ,CAAEC,KAAK,aAAxE/C,EAAQ,EAARA,SAAUgD,EAAY,EAAZA,aAAkCC,GAAf,EAALC,MAA0B,EAAnBC,UAAaF,QAGpD,EAA4B1I,6BAAiB,oBAAtCxR,EAAM,KAwBf,OAxB0B,KACPA,EAAOhB,IAAI,YAwB5B,iCACE,eAAC,GAAa,CAACua,OAAK,EAACC,OAAK,IAC1B,gBAACa,GAAA,EAAU,CAAC7a,MAAOA,EAAM,UACzB,eAAC8a,GAAA,EAAG,CAACC,GAAI,CAAEC,aAAa,EAAGC,YAAa,UAAWC,oBAAoB,SAAU,SAC/E,gBAACC,GAAA,EAAO,CAACnZ,SA1BK,SAACV,EAAGtB,GAAK,OAAKma,EAASna,EAAO,EA0Bd,aAAW,uBAAsB,UAC7D,eAACob,GAAA,EAAG,CAACxZ,MAAO,CAAC1B,MAAM,SAAUkO,MAAM,eAAepO,MAAM,MACxD,eAACob,GAAA,EAAG,CAAChN,MAAM,kBAAkBpO,MAAM,IAAIkL,UAAQ,SAInD,eAACmQ,GAAA,EAAQ,CAACrb,MAAM,IAAG,SACf,gBAAC,GAAa,WAEZ,qBAAI4B,MAAO,CAAC1B,MAAM,SAAS,SAAC,iBAC5B,gBAACkB,GAAA,EAAI,CAACC,SAAUoZ,GAlCD,SAAChb,EAAMiJ,GAC1BA,EAAMnH,iBACNlC,EAASwa,GAAoB,CACzBnoB,OAAM6R,QAAOC,WAAU7C,OACvBiX,UAASE,YAAWD,aAAYwC,aAEpC7M,EAAS,cACb,IA2BqD,UAEzC,gBAACpM,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,uBAGZ,eAACnW,GAAA,EAAKU,QAAO,6BACD2V,EAAS,WAAY,CACrBgB,SAAU,iCACV6C,UAAW,CACPtb,MAAO,EACPH,QAAS,iCAEb0b,QAAS,CACLvb,MAAO,gBACPH,QAAQ,+CAGd,IACF,eAAc6a,EAAOc,SAAW,OAAS,QACzCpb,KAAK,OACL2B,YAAY,gCACZ/B,MAAOtO,GAAc,GACrBsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,KAG/C0a,EAAOc,UAAY,uBAAM5Z,MAAO,CAAE1B,MAAO,OAAQyO,KAAK,QAAO,SAAiB,QAAjB,EAAE+L,EAAOc,gBAAQ,aAAf,EAAiB3b,aAGrF,gBAACuB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,UAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,QAAQ,CAC3BgB,SAAU,6BACV8C,QAAS,CACLvb,MAAO,0JACPH,QAAS,sBAEbA,QAAQ,uCACV,IACE,eAAc6a,EAAOnX,MAAQ,OAAS,QAEtCxB,YAAY,mBACZ/B,MAAOuD,GAAgB,GACvBvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,KAGhD0a,EAAOnX,OAAS,uBAAM3B,MAAO,CAAE1B,MAAO,OAAQyO,KAAK,QAAO,SAAc,QAAd,EAAE+L,EAAOnX,aAAK,aAAZ,EAAc1D,aAG/E,gBAACuB,GAAA,EAAKiW,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,2BAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,OAAO,CAC1BgB,SAAS,4CACP,IAEFrY,KAAK,OACL2B,YAAY,oCACZ/B,MAAOW,GAAc,GACrBqB,SAAU,SAACV,GAAC,OAAK8Y,EAAQ9Y,EAAEW,OAAOjC,MAAM,KAG/C0a,EAAO/Z,MAAQ,uBAAMiB,MAAO,CAAE1B,MAAO,OAAQyO,KAAK,QAAO,SAAa,QAAb,EAAE+L,EAAO/Z,YAAI,aAAX,EAAad,aAG5E,gBAACuB,GAAA,EAAKiW,MAAK,CAACC,UAAU,UAAS,UAC5B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,WAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,SAAS,CAC5BgB,SAAS,sCACP,IAEFrY,KAAK,OACL2B,YAAY,mBACZ/B,MAAO4X,GAAoB,GAC3B5V,SAAU,SAACV,GAAC,OAAK6W,EAAW7W,EAAEW,OAAOjC,MAAM,KAGlD0a,EAAOe,QAAU,uBAAM7Z,MAAO,CAAE1B,MAAO,OAAQyO,KAAK,QAAO,SAAe,QAAf,EAAE+L,EAAOe,cAAM,aAAb,EAAe5b,aAGjF,gBAACuB,GAAA,EAAKiW,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kBAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,YAAY,CAEvBiE,cAAe,CACX1b,OAAO,EACPH,QAAS,qCACf,IAENO,KAAK,SACL2B,YAAY,gCACZ/B,MAAO8X,GAAwB,GAC/B9V,SAAU,SAACV,GAAC,OAAK+W,EAAY/W,EAAEW,OAAOjC,MAAM,KAGnD0a,EAAO5C,WAAa,uBAAMlW,MAAO,CAAE1B,MAAO,OAAQyO,KAAK,QAAO,SAAkB,QAAlB,EAAE+L,EAAO5C,iBAAS,aAAhB,EAAkBjY,aAIvF,gBAACuB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,oBAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,aAAa,CAC5BgB,SAAS,uCACTiD,cAAe,CACX1b,OAAO,EACPH,QAAS,2CACbA,QAAQ,yCACV,IAEFO,KAAK,SACL2B,YAAY,4BACZ/B,MAAO6X,GAA0B,GACjC7V,SAAU,SAACV,GAAC,OAAK8W,EAAa9W,EAAEW,OAAOjC,MAAM,QAKzD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,yBAGZ,eAACnW,GAAA,EAAKU,QAAO,6BAAK2V,EAAS,YAAU,IAE7BrX,KAAK,OACL2B,YAAY,kCACZ/B,MAAOqa,GAAoB,GAC3BrY,SAAU,SAACV,GAAC,OAAKgZ,EAAWhZ,EAAEW,OAAOjC,MAAM,KAInD,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASyC,QAAQ,UAAUC,UAAU,uBAAsB,SAAC,sCASvF,eAACuY,GAAA,EAAQ,CAACrb,MAAM,IAAIkL,UAAU,EAAK,SACjC,gBAAC,GAAa,WAEV,qBAAItJ,MAAO,CAAC1B,MAAM,SAAS,SAAC,iBAC5B,gBAACkB,GAAA,EAAI,CAACC,SAjLS,SAACC,GAEpBA,EAAEC,iBACFlC,EAASwa,GAAoB,CACzBnoB,OAAM6R,QAAOC,WAAU7C,OACvBiX,UAASE,YAAWD,aAAYwC,aAEpC7M,EAAS,cACb,EAyKuC,UAE3B,gBAACpM,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,uBAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,gCACZ/B,MAAOtO,GAAc,GACrBsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,OAKpD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,UAGZ,eAACnW,GAAA,EAAKU,QAAO,CACL2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,mBACZ/B,MAAOuD,GAAgB,GACvBvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,IAIjD,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASyC,QAAQ,UAAS,SAAC,8BAczD,E,cC9QH,mmGAAA5D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMnH,GAAoB,SAAC2H,GAC9B,gDAAO,WAAOJ,GAAQ,kEAGdA,EAAStH,EAAeD,kBAAkB2H,IAE1C3L,aAAa6P,QAAQ,gBAAiB3P,KAAK4P,UAAUnE,IAAM,2CAGlE,mDARD,EASJ,EC6Dekc,OA9Df,WAEI,IACQnkB,EADS6M,aAAY,SAAAjS,GAAK,OAAIA,EAAM8L,QAAQ,IAC5C1G,gBAEF6H,EAAW6B,cAEXsM,EAAWvM,eAEjB,EAA0CF,mBAAS,UAAS,oBAArDlJ,EAAa,KAAE+jB,EAAgB,KAWxC,OATMpkB,EAAgBogB,SACZpK,EAAS,aAUjB,gBAAC,GAAa,WACV,eAAC,GAAa,CAACuM,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAAC7Y,GAAA,EAAI,CAACC,SAVY,SAACqH,GACnBA,EAAMnH,iBACNlC,EAASvH,GAAkBD,IAC3B2V,EAAS,cACb,EAMkC,UAE1B,gBAACpM,GAAA,EAAKiW,MAAK,WAEP,eAACjW,GAAA,EAAKmW,MAAK,CAACxM,GAAG,SAAQ,SAAC,oBAGxB,gBAACpJ,GAAA,EAAG,WACA,eAACP,GAAA,EAAKya,MAAK,CACHzb,KAAK,QACLgO,MAAM,wBACNzZ,GAAG,SACHjD,KAAK,gBACLoqB,SAAO,EACP9Z,SAAU,SAACV,GAAC,OAAIsa,EAAiBta,EAAEW,OAAOjC,MAAM,IAGxD,eAACoB,GAAA,EAAKya,MAAK,CACHzb,KAAK,QACLgO,MAAM,WACNzZ,GAAG,UACHjD,KAAK,gBAELsQ,SAAU,SAACV,GAAC,OAAIsa,EAAiBta,EAAEW,OAAOjC,MAAM,UAMhE,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASyC,QAAQ,UAAS,SAAC,mBAMpD,E,cCvEA,mmGAAA5D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAM8c,GAAc,SAAC7jB,GACxB,gDAAO,WAAOmH,EAAUwK,GAAQ,0EAoBmB,OAdzCvK,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAItB,SACsBnE,KAAMoB,KAAK,mBAAoBzI,EAAOuL,GAAO,OAAxD,OAAwD,SAA5DhE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAAS9G,EAAaJ,sBAAqB,SACxBmH,IAAW,OAAxBG,EAAI,OAEVJ,EAAS9G,EAAaH,mBAAmBqH,IACzCJ,EAAS9J,EAAYL,kBAErBpB,aAAagQ,WAAW,aAAY,kDAIpCzE,EACI9G,EAAaF,gBACX,KAAMsH,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAtCD,EAuCJ,EAEamc,GAAa,WACtB,gDAAO,WAAO3c,GAAQ,kEAGlBA,EAAS9G,EAAaD,oBAAmB,2CAG5C,mDAND,EAOJ,E,qBCsKe2jB,OA7Mf,SAA0BvZ,GAAQ,IAAD,QAEvBrD,EAAY6B,cAGlB,GAFiBD,eAESF,mBAAS,IAAE,oBAAvBmb,GAAF,KAAU,MACtB,EAA+Bnb,mBAAS,GAAE,oBAAzBob,GAAF,KAAY,MAC3B,EAA6Bpb,mBAAS,CAAC,GAAE,oBAAzBqb,GAAF,KAAW,MAEnBC,EAAchY,aAAY,SAAAjS,GAAK,OAAIA,EAAM8F,KAAK,IAC5CA,EAAmCmkB,EAAnCnkB,MAAQpG,EAA2BuqB,EAA3BvqB,MAAOC,EAAoBsqB,EAApBtqB,QAGfyF,GAHmC6kB,EAAXxqB,QAEbwS,aAAY,SAAAjS,GAAK,OAAIA,EAAM8L,QAAQ,IAC9C1G,iBAKFqG,EAAOwG,aAAY,SAAAjS,GAAK,OAAIA,EAAMyL,IAAI,IACrCxJ,EAAsBwJ,EAAtBxJ,SAAUD,EAAYyJ,EAAZzJ,QAEXkoB,EAAaze,EAAK1J,UAAUoQ,QAAO,SAACkS,EAAI7hB,GAAI,OAAK6hB,EAAM7hB,EAAKmV,MAAQnV,EAAKC,GAAG,GAAE,GAAGwhB,QAAQ,GAGzFqD,GAAcvO,OAAOmR,GAAcnR,OAFlB,GAE0CA,OADhD,IACkEkL,QAAQ,GA0C7F,OAvCExR,qBAAU,WAEF9S,IACAmqB,EAAShkB,EAAMwhB,YACfyC,EAAWjkB,EAAMkQ,KACjBgU,EAAUlkB,EAAMqkB,YAGhB7Z,EAAM8Z,YAAY,CAACC,MAAOvkB,EAAMwhB,WACbgD,QAASxkB,EAAMkQ,IACfuU,OAAQzkB,EAAMqkB,aACjCld,EAAS2c,MAIjB,GAAG,CAACjqB,IAyBJ,iCACI,eAAC,GAAa,CAACgoB,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gBAACvY,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,SAErC,gBAACgM,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACtB,gBAACsS,GAAA,EAAU9M,KAAI,WAEX,qBAAIzG,MAAO,CAAC1B,MAAM,SAAS,SAAC,WAC5B,iCAEI,iCACI,kCAAQ,UAAc,IAAG1I,EAAgB9F,QAE7C,iCACI,kCAAQ,YAAgB,IAAG8F,EAAgBogB,WAE/C,iCACI,kCAAQ,WAAe,IAAC,wBAAOxX,KAAK,QAAO,SAAG5I,EAAgB+L,QAC9D,6BAAG,oEAEP,iCACI,kCAAQ,UAAc,IAAG/L,EAAgBmJ,QAE7C,iCACI,kCAAQ,mBAAuB,IAAGnJ,EAAgBsgB,aAEtD,iCACI,kCAAQ,qBAAyB,IAAGtgB,EAAgBqgB,cAExD,iCACI,kCAAQ,qBAAyB,IAAGrgB,EAAgB6iB,iBAK/D,gBAAClF,GAAA,EAAU9M,KAAI,WAEZ,qBAAIzG,MAAO,CAAC1B,MAAM,SAAS,SAAC,mBAC5B,+BACI,kCAAQ,YAAgB,IAAC,eAAC,KAAS,CAAC0c,OAAQvoB,UAKnD,gBAAC8gB,GAAA,EAAU9M,KAAI,WAEZ,qBAAIzG,MAAO,CAAC1B,MAAM,SAAS,SAAC,oBACE,KAAxB,OAAJrC,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAM1J,iBAAS,WAAX,EAAJ,EAAiB2Q,QACb,iCACE,eAAC,GAAO,CAACjC,QAAS,OAAM,SAAC,0BACzB,eAACD,GAAA,EAAM,CAAC0D,GAAG,IAEFlG,KAAK,SACL0C,UAAU,wBACVwG,KAAK,IAAG,SACP,2BAIV,eAAC6L,GAAA,EAAS,CAACtS,QAAQ,QAAO,SAEJ,QAFI,EAElBhF,EAAK1J,iBAAS,OAAwB,QAAxB,EAAd,EAAgBc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,WAAC,WAAxB,EAAd,EAAwCsT,KAAK,SAACvT,EAAKioB,GAAK,OAChD,eAAC1H,GAAA,EAAU9M,KAAI,UAEX,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SACpC,eAAC3C,GAAA,EAAK,CAACR,IAAKpR,EAAK6Q,MAAOgB,IAAK7R,EAAKlD,KAAM+P,OAAK,EAAC2O,SAAO,MAEzD,eAACzO,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SAEpC,eAAC,QAAI,CAAC4B,GAAG,MAAMnJ,MAAO,CAAC1B,MAAM,SAAUoG,GAAE,oBAAe1R,EAAKD,IAAK,SAAEC,EAAKlD,SAE7E,gBAACiQ,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,UACnCvU,EAAKC,IAAI,MAAID,EAAKmV,MAAMsM,QAAQ,GAAG,WAASzhB,EAAKC,IAAKD,EAAKmV,OAAOsM,QAAQ,GAAG,cAXrEwG,EAcJ,cAarD,eAAClb,GAAA,EAAG,CAAC2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAG,SACjC,eAACqB,GAAA,EAAI,CAACtI,OAAO,UAAS,SAClB,gBAACiT,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACtB,eAACsS,GAAA,EAAU9M,KAAI,UACX,qBAAIzG,MAAO,CAAC1B,MAAM,SAAS,SAAC,eAEhC,eAACiV,GAAA,EAAU9M,KAAI,UACZ,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,sBACb,gBAACA,GAAA,EAAG,WAAE2a,EAAW,eAIxB,eAACnH,GAAA,EAAU9M,KAAI,UACZ,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,WACb,eAACA,GAAA,EAAG,UAAC,eAGZ,eAACwT,GAAA,EAAU9M,KAAI,UACZ,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,cACb,gBAACA,GAAA,EAAG,WAAE2a,EAAW,eAGvBxqB,GACG,eAACqjB,GAAA,EAAU9M,KAAI,UACX,eAAC,GAAO,CAACxF,QAAQ,SAAQ,SACpB/Q,MAIb,eAACqjB,GAAA,EAAU9M,KAAI,UACX,eAACzF,GAAA,EAAM,CAEExC,KAAK,SACL0C,UAAU,wBACVoI,SAAsC,KAAxB,OAAJrN,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAM1J,iBAAS,WAAX,EAAJ,EAAiB2Q,QAC3BM,QAtJlB,SAACsD,GAEhBA,EAAMnH,iBACNlC,EAAS0c,GAAY,CACjBQ,WAAW1e,EAAK1J,UAChBzC,KAAM8F,EAAgB9F,KACtB6R,MAAM/L,EAAgB+L,MACtBC,SAAUhM,EAAgBgM,SAC1BoU,QAASpgB,EAAgBogB,QACzB0E,WAAYA,EACZ/b,MAAO/I,EAAgBmJ,KACvBmX,UAAWtgB,EAAgBsgB,UAC3BD,WAAYrgB,EAAgBqgB,WAC5BwC,QAAS7iB,EAAgB6iB,QACzBjmB,QAASA,EACTC,SAASA,EACTyoB,OAAQpD,IAGhB,EAmIyD,SAAC,mCAQ9D,E,cCzNA,mmGAAAza,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAM8d,GAAkB,SAACpoB,GAC5B,gDAAO,WAAO0K,EAAUwK,GAAQ,8EAsB2B,OAtB3B,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SAEsBrZ,KAAMC,IAAI,eAAD,OAAgB7K,GAAM8O,GAAO,OAAjD,OAAiD,SAArDhE,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAbc,4CAgBXJ,EAASxG,EAAoBH,uBAAsB,SAChC4G,IAAW,OAAxBG,EAAI,OAEVJ,EAASxG,EAAoBF,oBAAoB8G,IAAM,kDAKvDJ,EACIxG,EAAoBD,iBAClB,KAAM+G,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAtCD,EAuCJ,E,wBC3CA,mmGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAM+d,GAAW,SAACroB,EAAIsoB,GACzB,gDAAO,WAAO5d,EAAUwK,GAAQ,8EAuBmB,OAvBnB,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAIV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SAEsBrZ,KAAMuZ,IAAI,eAAD,OAAgBnkB,EAAE,QAAQsoB,EAAexZ,GAAO,OAApE,OAAoE,SAAxEhE,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAbc,4CAgBXJ,EAASjG,EAAgBJ,mBAAkB,SACxBsG,IAAW,OAAxBG,EAAI,OAEVJ,EAASjG,EAAgBH,gBAAgBwG,IAAM,kDAK/CJ,EACIjG,EAAgBF,aACd,KAAMyG,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,ECqIeqd,OAvKf,WAAwB,IAAD,UAEbR,EAAWhK,aAAU,MACrBrT,EAAY6B,cACZic,EAAe9Y,aAAY,SAAAjS,GAAK,OAAIA,EAAMgM,WAAW,IAClDlG,EAA0BilB,EAA1BjlB,MAAOpG,EAAmBqrB,EAAnBrrB,MAAOD,EAAYsrB,EAAZtrB,QAEjBwM,EAAWgG,aAAY,SAAAjS,GAAK,OAAIA,EAAMiM,QAAQ,IACnC+e,EAAoC/e,EAA7CxM,QAA8BwrB,EAAehf,EAAxBtM,QAE7B,EAAmCgP,mBAAS,GAAE,oBAA3Buc,GAAF,KAAc,MA4BjC,OA1BMzrB,GAAWC,GACXwrB,EAAaplB,EAAMqkB,WAAWhY,QAAO,SAACkS,EAAI7hB,GAAI,OAAK6hB,EAAM7hB,EAAKmV,MAAQnV,EAAKC,GAAG,GAAE,GAAGwhB,QAAQ,IAG/FxR,qBAAU,WAAO,IAAD,GAEoB,KAAxB,OAAL3M,QAAK,IAALA,GAAiB,QAAZ,EAALA,EAAOqkB,kBAAU,WAAZ,EAAL,EAAmBzX,SAAeuY,GAAcnlB,EAAMkQ,MAAQ+C,OAAOuR,EAAQ/nB,MAC5E0K,EAAS0d,GAAgB5R,OAAOuR,EAAQ/nB,KAGhD,GAAG,CAAE+nB,EAAQtU,IAAK/I,IAiBlBxN,EAAW,eAAC,GAAM,IAEDC,EACT,eAAC,GAAO,CAAC+Q,QAAU,SAAQ,SACtB/Q,IAGZ,iCAEE,gCAAI,aAAWoG,EAAMkQ,OACpB,gBAAC1G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4F,GAAI,EAAE,SAEP,gBAAC4N,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACtB,gBAACsS,GAAA,EAAU9M,KAAI,WAEX,8BAAI,uCACJ,+BACI,kCAAQ,WAAe,IAAa,QAAZ,EAAEnQ,EAAMzB,YAAI,aAAV,EAAYgS,aAE1C,+BACI,kCAAQ,YAAgB,IAAC,oBAAGa,KAAI,iBAAsB,QAAtB,EAAYpR,EAAMzB,YAAI,aAAV,EAAY8M,OAAQ,SAAY,QAAZ,EAAErL,EAAMzB,YAAI,aAAV,EAAY8M,WAElF,wBAEErL,EAAMqlB,YACJ,gBAAC,GAAO,CAAC1a,QAAQ,UAAS,UAAG,oBACJ3K,EAAMslB,eAG/B,eAAC,GAAO,CAAC3a,QAAQ,UAAS,SAAE,uBAMnC,gBAACsS,GAAA,EAAU9M,KAAI,WAEZ,8BAAI,mBACJ,+BACI,kCAAQ,YAAgB,IAA2B,WAAxBnQ,EAAML,cAA6B,oBAAsB,uBAGtFK,EAAMyhB,OACJ,gBAAC,GAAO,CAAC9W,QAAQ,UAAS,UAClB,+BAAK,kBAAmB,MAAI3K,EAAM0hB,UAG1C,eAAC,GAAO,CAAC/W,QAAQ,UAAS,SAAE,oBAMnC,gBAACsS,GAAA,EAAU9M,KAAI,WAEZ,8BAAI,oBAC2B,KAAb,QAAhB,EAAAnQ,EAAMqkB,kBAAU,aAAhB,EAAkBkB,QACd,eAAC,GAAO,CAAC5a,QAAS,OAAM,SAAC,wBAEvB,eAACsS,GAAA,EAAS,CAACtS,QAAQ,QAAO,SAEF,QAFE,EAElB3K,EAAMqkB,kBAAU,aAAhB,EAAkBpU,KAAK,SAACvT,EAAKioB,GAAK,OAC1B,eAAC1H,GAAA,EAAU9M,KAAI,UAEX,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAAC4F,GAAI,EAAE,SACP,eAACf,GAAA,EAAK,CAACR,IAAKpR,EAAK6Q,MAAOgB,IAAK7R,EAAKlD,KAAM+P,OAAK,EAAC2O,SAAO,MAEzD,eAACzO,GAAA,EAAG,UAEA,eAAC,QAAI,CAAC2E,GAAE,oBAAe1R,EAAKD,IAAK,SAAEC,EAAKlD,SAE5C,gBAACiQ,GAAA,EAAG,CAAC4F,GAAI,EAAE,UACN3S,EAAKC,IAAI,OAAKD,EAAKmV,MAAM,QAAMnV,EAAKC,IAAKD,EAAKmV,OAAOsM,QAAQ,UAXrDwG,EAcJ,cAarD,eAAClb,GAAA,EAAG,CAAC4F,GAAI,EAAE,SACH,eAACiD,GAAA,EAAI,UACD,gBAAC2K,GAAA,EAAS,CAACtS,QAAQ,QAAO,UACtB,eAACsS,GAAA,EAAU9M,KAAI,UACX,8BAAI,wBAER,eAAC8M,GAAA,EAAU9M,KAAI,UACZ,gBAAC3G,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,iBACL,gBAACA,GAAA,EAAG,WAAC,OAAKzJ,EAAMwhB,mBAIvB,eAACvE,GAAA,EAAU9M,KAAI,WACTnQ,EAAMyhB,QAAUyD,EACV,eAAC,GAAM,IAIP,eAAC1b,GAAA,EAAG,UACA,eAAC,KAAoB,CAAC6K,QAAS,CAAE,YAAa,oFAAqF,SAC/H,eAAC,KAAa,CACV3K,MAAO,CAAE8b,OAAQ,cACjBC,OAAQzlB,EAAMwhB,WACdkE,UAhIlB,SAACX,GAE3B5d,EAAS2d,GAASN,EAAQtU,IAAK6U,GAEnC,sBAwIJ,E,cC/KA,mmGAAAhe,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM4e,GAAY,WACrB,gDAAO,WAAOxe,EAAUwK,GAAQ,8EAoBmB,OApBnB,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMC,IAAI,cAAeiE,GAAO,OAA3C,OAA2C,SAA/ChE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAASjF,GAAgBJ,mBAAkB,SACxBsF,IAAW,OAAxBG,EAAI,OAEVJ,EAASjF,GAAgBH,gBAAgBwF,IAAM,kDAK/CJ,EACIjF,GAAgBF,aACd,KAAMyF,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,E,cCxCA,mmGAAAZ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM6e,GAAa,SAACnpB,GACvB,gDAAO,WAAO0K,EAAUwK,GAAQ,4EAoBuB,OApBvB,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMwe,OAAO,qBAAD,OAAsBppB,GAAM8O,GAAO,OAA1D,OAA0D,SAA9DhE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAAS1E,GAAkBJ,qBAAoB,SAC5B+E,IAAW,OAApB,OAEVD,EAAS1E,GAAkBH,qBAAoB,kDAK/C6E,EACI1E,GAAkBF,eAChB,KAAMkF,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,EAEame,GAAkB,WAC3B,gDAAO,WAAO3e,GAAQ,kEAElBA,EAAS1E,GAAkBqjB,mBAAkB,2CAChD,mDAHD,EAIJ,EC6DeC,OA/Ff,WAEI,IAAM5e,EAAW6B,cACX3C,EAAW8F,aAAY,SAAAjS,GAAK,OAAIA,EAAMmM,QAAQ,IAC5C1M,EAAyB0M,EAAzB1M,QAASC,EAAgByM,EAAhBzM,MAAOiI,EAASwE,EAATxE,MAGhBpE,EADU0O,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC9CnI,SAEFuoB,EAAU7Z,aAAY,SAAAjS,GAAK,OAAIA,EAAMoM,UAAU,IAG/CgP,GAFyE0Q,EAAvEnsB,QAAuEmsB,EAA/CrsB,QAA+CqsB,EAAvBpsB,MAEvCmP,gBAwBnB,OAtBE4D,qBAAU,WAEHlP,GAAYA,EAASiT,SACpBvJ,EAASwe,MACTxe,EAASxI,OAET2W,EAAS,SAIjB,GAAG,CAACnO,EAAUmO,IAad,iCACI,8BAAI,UACH3b,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAChB/Q,IAIjB,gBAACwnB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAChV,YAAU,EAACtG,UAAU,WAAU,UACrD,iCACI,gCACI,8BAAI,OACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,UACJ,6BAGR,iCACU,OAAL/I,QAAK,IAALA,OAAK,EAALA,EAAOoO,KAAI,SAAA1R,GAAI,OAEZ,gCACI,8BAAKA,EAAK2R,MACV,8BAAK3R,EAAKgS,YACV,8BAAKhS,EAAK8M,QACV,8BAAK9M,EAAKmS,QACN,oBAAG9F,UAAU,eAAelB,MAAO,CAAE1B,MAAO,WAC5C,oBAAG4C,UAAU,eAAelB,MAAO,CAAE1B,MAAO,WAChD,8BAAI,eAAC,iBAAa,CAACoG,GAAE,sBAAiB7P,EAAK2R,IAAG,SAAQ,SAE9C,eAACxF,GAAA,EAAM,CAACC,QAAU,QAAQC,UAAU,MAAK,SACpC,oBAAGA,UAAU,sBAI1B,8BACI,eAACF,GAAA,EAAM,CAAEE,UAAU,MAAMsC,QAAS,SAAC9D,GAAC,OArDrD3M,EAqDwE8B,EAAK2R,SAnD7FuK,OAAO0L,QAAQ,gDAEdhf,EAASye,GAAWnpB,IACpB0K,EAAS2e,MACT3e,EAASwe,QANK,IAAClpB,CAqDiF,EAAC,SAC7D,oBAAGmO,UAAU,uBAhBhBrM,EAAK2R,IAmBT,WAUzC,E,cC1GA,mmGAAAnJ,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMN,GAAgB,SAAChK,GAC1B,gDAAO,WAAO0K,EAAUwK,GAAQ,8EAqB6B,OArB7B,EAKxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,uFAQb,MANc,CACXoE,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMwe,OAAO,wBAAD,OAAyBppB,IAAK,OAArD,OAAqD,SAAzD8K,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXJ,EAASxD,GAAqBJ,wBAAuB,SAC9B6D,IAAW,OAA5BI,EAAQ,OACdL,EAASxD,GAAqBH,qBAAqBgE,IAAU,kDAG7DL,EACIxD,GAAqBF,kBACnB,KAAMgE,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAnCD,EAoCJ,EAEajE,GAAqB,WAC9B,gDAAO,WAAOyD,GAAQ,kEAElBA,EAASxD,GAAqBD,sBAAqB,2CACtD,mDAHD,EAIJ,E,cC9CA,mmGAAAqD,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAML,GAAgB,SAACmT,EAAMjI,EAAQgG,GACxC,gDAAO,WAAOzQ,EAAUwK,GAAQ,sFAyD6B,OAzD7B,EAKxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMoB,KAAK,wBAAwBoR,EAAKtO,GAAO,OAA1D,OAA0D,SAA9DhE,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,mCAcT6e,EAAU,yCAAG,WAAOC,EAAYnN,EAAKoN,GAAI,kFAuBtC,OArBC1O,EAAQ0O,EACRC,EAAQrN,EACRsN,EAAW,IAAIC,SAClB7O,GACC4O,EAASE,OAAO,QAAS5qB,KAAK4P,UAAUkM,IAEzC2O,IAEI,QADGI,EAAMzK,MAAMC,KAAKoK,UACpB,IAAHI,KAAKC,SAAQ,SAAApqB,GAAC,OACVgqB,EAASE,OAAO,SAAUlqB,EAAE,KAKpCgqB,EAASE,OAAO,aAAcL,GAAW,SAG/B9a,EAAS,CACdC,QAAS,CACL,eAAgB,wBAEpB,UAEsBnE,KAAMoB,KAAK,wBAAyB+d,EAAUjb,GAAO,iBAAhE,EAAJhE,KAAI,4GAKnB,gBA9Be,mDAoCZJ,EAASjD,GAAqBJ,wBAAuB,SAC3BsD,IAAW,OAGD,GAH9Byf,EAAW,OACjB1f,EAASjD,GAAqBH,qBAAqB8iB,IAAa,EAG5DlV,IAAU,IADVjL,cAAgBtL,EAAO,EAAPA,SAAgB,EAAPvB,QAElB,CAAC,EAAF,+BACkBusB,EAAWhrB,EAAQ8U,IAAK0B,EAAQgG,GAAM,QAA/C,eAEnBzQ,EAASjD,GAAqBD,sBAAqB,kDAGnDkD,EACIjD,GAAqBF,kBACnB,KAAMyD,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDA9ED,EA+EJ,EASamf,GAAoB,SAACrqB,EAAIqL,GAClC,gDAAO,WAAOX,GAAQ,0EAIa,OAFzBqf,EAAW,IAAIC,UACZC,OAAO,aAAcjqB,GAC9B+pB,EAASE,OAAO,QAAS5e,GAAM,SACRT,KAAMoB,KAAK,6BAA8B+d,GAAS,gBAA7D,EAAJjf,KAAI,2CACf,mDAND,EAOJ,E,cCnGA,mmGAAAR,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAwOeggB,OAvNf,WAA8B,IAAD,EAEnB5f,EAAW6B,cAEXtD,EAAcyG,aAAY,SAAAjS,GAAK,OAAIA,EAAMwL,WAAW,IAClD/L,EAA6B+L,EAA7B/L,QAASC,EAAoB8L,EAApB9L,MAAOF,EAAagM,EAAbhM,SAElBstB,EAAa7a,aAAY,SAAAjS,GAAK,OAAIA,EAAMuM,aAAa,IAC1CwgB,EAA6DD,EAAtErtB,QAA+ButB,EAAuCF,EAA9CptB,MAA6ButB,EAAiBH,EAA1BntB,QAE9CutB,EAAajb,aAAY,SAAAjS,GAAK,OAAIA,EAAMwM,aAAa,IAC1C2gB,EAAsFD,EAA/FztB,QAA+B2tB,EAAgEF,EAAvExtB,MAA6B2tB,EAA0CH,EAAnDvtB,QAG5C4D,GAH+F2pB,EAA3BhsB,QAE1D+Q,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC9CnI,UAEF6X,EAAWvM,eAEjB,EAAsBF,mBAAS,MAAK,oBAA7Bd,EAAG,KAAEyf,EAAM,KACZC,EAAYha,iBAAO,GAGzBd,qBAAU,WAEDlP,EAASiT,SACT4E,EAAS,UAGbmF,OAAOC,SAAS,CACbC,IAAK,EACLC,KAAM,EACNC,SAAU,WAEV0M,GAOApgB,EAASH,KAIhB,GAAG,CAACG,EAAUmO,EAAU7X,EAAU0pB,EAAeI,IAElD5a,qBAAU,WAEN6a,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAEG,IAAMF,EAAEE,GAAG,IAExD,GAAG,CAACxW,IAEJ,IAeMguB,EAAoB,yCAAG,WAAOjrB,EAAIqL,GAAK,kEACzCX,EAAS2f,GAAkBrqB,EAAIqL,IAAO,2CACzC,gBAFyB,wCAIpB8L,EAAiB,OAARla,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAEG,IAAMF,EAAEE,GAAG,IAEtDnT,EAAS,SAAC+S,GAEZ,OAAOA,GACH,IAAK,KAEE2X,EAAU7Z,SACT4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAEG,IAAMF,EAAEE,GAAG,KACpDuX,EAAU7Z,SAAW6Z,EAAU7Z,UAG/B4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQ8X,SAAQ,SAAC5X,EAAEC,GAAC,OAAKD,EAAEG,IAAMF,EAAEE,GAAG,KACvDuX,EAAU7Z,SAAW6Z,EAAU7Z,SAGrC,MACF,IAAK,OACE6Z,EAAU7Z,SACT4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAEvW,KAAOwW,EAAExW,IAAI,KACtDiuB,EAAU7Z,SAAW6Z,EAAU7Z,UAG/B4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQ8X,SAAQ,SAAC5X,EAAEC,GAAC,OAAKD,EAAEvW,KAAOwW,EAAExW,IAAI,KACzDiuB,EAAU7Z,SAAW6Z,EAAU7Z,SAGrC,MACF,IAAK,OACE6Z,EAAU7Z,SACT4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAE8B,MAAQ7B,EAAE6B,KAAK,KACxD4V,EAAU7Z,SAAW6Z,EAAU7Z,UAG/B4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQ8X,SAAQ,SAAC5X,EAAEC,GAAC,OAAKD,EAAE8B,MAAQ7B,EAAE6B,KAAK,KAC3D4V,EAAU7Z,SAAW6Z,EAAU7Z,SAEnC,MACJ,IAAK,SACE6Z,EAAU7Z,SACT4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAE+B,aAAe9B,EAAE8B,YAAY,KACtE2V,EAAU7Z,SAAW6Z,EAAU7Z,UAG/B4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQ8X,SAAQ,SAAC5X,EAAEC,GAAC,OAAKD,EAAE+B,aAAe9B,EAAE8B,YAAY,KACzE2V,EAAU7Z,SAAW6Z,EAAU7Z,SAEnC,MAEJ,QACI4Z,EAAe,OAAR9tB,QAAQ,IAARA,OAAQ,EAARA,EAAUmW,QAAQC,MAAK,SAACC,EAAEC,GAAC,OAAKD,EAAEG,IAAMF,EAAEE,GAAG,KAGhE,EAEF,OACE,iCACI,gBAAC1G,GAAA,EAAG,CAACoB,UAAU,qBAAoB,UAC/B,eAACnB,GAAA,EAAG,UACA,qBAAIC,MAAO,CAAC1B,MAAM,SAAS,SAAC,aAEhC,eAACyB,GAAA,EAAG,CAACmB,UAAU,aAAY,SACvB,eAAC,iBAAa,CAACwD,GAAE,uBAAyB,SACtC,gBAAC1D,GAAA,EAAM,CAACE,UAAU,mBAAkB,UAChC,oBAAGA,UAAU,gBAAkB,8BAO7Cqc,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAACvc,QAAQ,SAAQ,SAAEuc,IAE1CG,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAAC3c,QAAQ,SAAQ,SAAE2c,IAC3C3tB,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAChB/Q,IAIjB,gBAACwnB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAChV,YAAU,EAACtG,UAAU,WAAU,UACrD,iCACI,gCACI,8BAAI,OACJ,qBAAIsC,QAAS,kBAAMnQ,EAAO,KAAK,EAAC,SAAC,OACjC,qBAAImQ,QAAS,kBAAMnQ,EAAO,OAAO,EAAC,SAAC,SACnC,qBAAImQ,QAAS,kBAAMnQ,EAAO,OAAO,EAAC,SAAC,SACnC,8BAAI,eACJ,8BAAI,SACJ,8BAAI,WACJ,8BAAI,SACJ,qBAAImQ,QAAS,kBAAMnQ,EAAO,SAAS,EAAC,SAAC,WACrC,8BAAI,SACJ,8BAAI,gBAGZ,iCACwB,QADxB,EACMgL,GAAY6L,SAAM,aAAnB,EAAsB3D,KAAI,SAAC7U,EAASupB,GAAK,eAEtC,gCACI,qBAAIjb,MAAO,CAACO,MAAM,QAAQ,SAAE0a,EAAQ,IACpC,qBAAIjb,MAAO,CAACO,MAAM,QAAQ,SAAE7O,EAAQ8U,MACpC,qBAAIxG,MAAO,CAACO,MAAM,SAAS,SAAC,kCAAS7O,EAAQ5B,SAC7C,sBAAIkQ,MAAO,CAACO,MAAM,QAAQ,UAAE7O,EAAQyW,MAAM,UAC1C,qBAAInI,MAAO,CAACO,MAAM,SAAS,SAAE7O,EAAQ+M,SAAS8H,KAAI,SAAAzT,GAAC,OAAIA,EAAEhD,IAAI,IAAE0jB,KAAK,QACpE,qBAAIxT,MAAO,CAACO,MAAM,QAAQ,UAAc,QAAZ,EAAA7O,EAAQwsB,YAAI,QAAIxsB,EAAQwsB,MAAO,MAAQ,OACnE,qBAAIle,MAAO,CAACO,MAAM,QAAQ,UAAgB,QAAd,EAAA7O,EAAQysB,cAAM,QAAIzsB,EAAQysB,QAASzsB,EAAQysB,OAAS,OAChF,qBAAIne,MAAO,CAACO,MAAM,SAAS,SAAE7O,EAAQ4M,QACrC,qBAAI0B,MAAO,CAAEO,MAAM,QAAQ,SAEnB,eAAC,KAAQ,CAAExN,GAAG,QAAQyL,KAAK,OAAO4f,aAAc1sB,EAAQ0W,aAAchI,SAAU,SAACV,GAAC,OAAMse,EAAqBtsB,EAAQ8U,IAAK9G,EAAEW,OAAOjC,MAAM,MAGjJ,qBAAI4B,MAAO,CAACO,MAAM,QAAQ,SAAC,eAAC,QAAI,CAACmE,GAAE,yBAAoBhT,EAAQ8U,IAAG,SAAQ,SAElE,eAACxF,GAAA,EAAM,CAACC,QAAU,QAAQC,UAAU,SAAQ,SACvC,oBAAGA,UAAU,sBAG1B,qBAAIlB,MAAO,CAACO,MAAM,QAAQ,SAClB,eAACS,GAAA,EAAM,CAAEE,UAAU,SAASD,QAAQ,SAASuC,QAAS,SAAC9D,GAAC,OAnJ7E3M,EAmJgGrB,EAAQ8U,SAjJxHuK,OAAO0L,QAAQ,mDAEdhf,EAASV,GAAchK,IACvB0K,EAASzD,MACTyD,EAASH,QANK,IAACvK,CAmJ4G,EAAC,SACnF,oBAAGmO,UAAU,uBAtBrBxP,EAAQ8U,IAyBZ,WAUzC,EC3Ne6X,OAVf,WACE,OACI,iCACM,8BAAI,UACJ,6BAAG,oJAIf,ECiBeC,OAzBf,WAEE,IAAM5M,EAAgB,CAAC,8EACD,8EACA,8EACA,8EACA,8EACA,8EACA,+EACtB,OACE,iCACE,8BAAI,WACJ,sBAAK1R,MAAO,CAAEC,QAAQ,OAAQ6R,SAAS,QAAQ,SAC3C,sBAAKjN,IAAI,UAAU7E,MAAO,CAAE8R,SAAS,QAAU1N,IAAKsN,EAAeK,KAAKC,SAAWN,EAAcxO,OAAU,OAE/G,iCAAK,yYAE8J,wBAAS,wBAAS,yBAM3L,E,8CCrBMqb,GAAY,CAChBhe,MAAO,MACPc,OAAQ,OAGGmd,GAAY,oKAsBrB,OAtBqB,oCAErBhuB,MAAQ,CACJiuB,mBAAmB,EACnBC,aAAc,CAAC,EACfC,cAAe,CAAC,GAChB,EAEFC,cAAgB,SAAC9d,EAAO+d,EAAQnf,GAAC,OACnC,EAAKof,SAAS,CACZH,cAAe7d,EACf4d,aAAcG,EACdJ,mBAAmB,GAClB,EAAD,EAEJM,QAAU,SAAAje,GACJ,EAAKtQ,MAAMiuB,mBACb,EAAKK,SAAS,CACZL,mBAAmB,EACnBC,aAAc,MAGpB,EAAC,EA6BA,OA7BA,oCACD,WACE,OACE,gBAAC,OAAG,CACFtX,OAAQ4X,KAAKle,MAAMsG,OACnB6X,KAAM,GACNjf,MAAOue,GACPW,cACE,CACEC,IAAK,mBACLC,IAAK,oBAER,UAEF,eAAC,UAAM,CACJ5b,QAASwb,KAAKJ,cACd9uB,KAAM,iBAER,eAAC,cAAU,CACT+uB,OAAQG,KAAKxuB,MAAMkuB,aACnBW,QAASL,KAAKxuB,MAAMiuB,kBACpBM,QAASC,KAAKD,QAAQ,SAEtB,+BACE,8BAAKC,KAAKxuB,MAAMmuB,cAAc7uB,aAKxC,KAAC,EAnDsB,CAASwvB,aAsDnBC,+BAAiB,CAC9BC,OAAQ,2CADKD,CAEZf,IC1CYiB,OArBf,WAEE,OACE,iCACE,qBAAIzf,MAAO,CAACuF,UAAU,OAAQjH,MAAM,SAAS,SAAC,sBAC9C,iCACE,qBAAI0B,MAAO,CAAE1B,MAAM,QAAS+U,WAAW,QAAQ,SAAC,kBAChD,sBAAKrT,MAAO,CAAE6H,aAAa,OAAQ5H,QAAQ,QAAQ,SACjD,eAACsf,GAAgB,WAW3B,E,cCpBA,mmGAAAliB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAIO,IAAMqiB,GAAa,SAAC7qB,GACvB,gDAAO,WAAO4I,EAAUwK,GAAQ,4EAqBuB,OArBvB,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,yFAQb,OANKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMuZ,IAAI,qBAAD,OAAsBriB,EAAK2R,IAAG,KAC9D3R,EAAMgN,GAAO,OADD,OACC,SADLhE,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAZc,4CAeXJ,EAAS1C,GAAkBJ,qBAAoB,SAC5B+C,IAAW,OAApB,OAEVD,EAAS1C,GAAkBH,qBAC3B6C,EAASwe,MAAY,kDAIrBxe,EACI1C,GAAkBF,eAChB,KAAMkD,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDArCD,EAsCJ,EAGa0hB,GAAkB,WAC3B,gDAAO,WAAOliB,GAAQ,kEAIlB,IACIA,EAAS1C,GAAkBD,kBAW/B,CATE,MAAO5K,GAELuN,EACI1C,GAAkBF,eAChB3K,EAAM6N,UAAY7N,EAAM6N,SAASF,KAAKG,OACpC9N,EAAM6N,SAASF,KAAKG,OACpB9N,EAAM+N,SAGlB,CAAC,2CACJ,mDAjBD,EAkBJ,EC2De2hB,OAhHf,WACE,MAAwBzgB,mBAAS,IAAG,oBAA7BrP,EAAI,KAAEsmB,EAAO,KACpB,EAA0BjX,mBAAS,IAAG,oBAA/BwC,EAAK,KAAE2T,EAAQ,KACtB,EAA8BnW,oBAAS,GAAM,oBAAtC6H,EAAO,KAAE6Y,EAAU,KAEpBpiB,EAAW6B,cAEXsM,EAAWvM,eAETtM,EAAO+d,eAAP/d,GACF+sB,EAAS/sB,EAGTqJ,EAAcqG,aAAY,SAACjS,GAAK,OAAKA,EAAM4L,WAAW,IACpDvH,EAAyBuH,EAAzBvH,KAAM3E,EAAmBkM,EAAnBlM,MAAOD,EAAYmM,EAAZnM,QAEfgN,EAAawF,aAAY,SAACjS,GAAK,OAAKA,EAAMyM,UAAU,IAC3C8iB,EAAgE9iB,EAAvE/M,MAA6B8vB,EAA0C/iB,EAAnDhN,QAAkCgwB,EAAiBhjB,EAA1B9M,QAsCrD,OApCA8S,qBAAU,WAGDgd,GACCxiB,EAASkiB,MACT/T,EAAS,oBAIL/W,EAAK/E,MAAQ+E,EAAK2R,MAAQ+C,OAAOuW,IAKjC1J,EAAQvhB,EAAK/E,MACbwlB,EAASzgB,EAAK8M,OACdke,EAAWhrB,EAAKmS,UALhBvJ,EAASqZ,GAAe/jB,GAYtC,GAAG,CAAC0K,EAAU5I,EAAMirB,EAAQG,EAAerU,IAczC,iCAEI,eAAC,QAAI,CAAClH,GAAG,kBAAiB,SAAC,YAG7B,gBAAC,GAAa,WACZ,8BAAI,cACFsb,GAAiB,eAAC,GAAM,IACxBD,GAAe,eAAC,GAAO,CAAC9e,QAAS,SAAQ,SAAE8e,IAC3C9vB,EAAW,eAAC,GAAM,IACRC,EACC,eAAC,GAAO,CAAC+Q,QAAS,SAAQ,SAAE/Q,IAEjC,gBAACsP,GAAA,EAAI,CAACC,SAzBE,SAACqH,GACrBA,EAAMnH,iBACNlC,EAASiiB,GAAW,CAChBlZ,IAAK3R,EAAK2R,IACV1W,KAAMA,EACN6R,MAAOA,EACPqF,QAASA,IAGf,EAgB4C,UAC1B,gBAACxH,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UAC1B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,QACZ,eAACnW,GAAA,EAAKU,QAAO,CACX1B,KAAK,OACL2B,YAAY,iBACZ/B,MAAOtO,EACPsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,OAI5C,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UAC3B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,iBACZ,eAACnW,GAAA,EAAKU,QAAO,CACX1B,KAAK,QACL2B,YAAY,mBACZ/B,MAAOuD,EACPvB,SAAU,SAACV,GAAC,OAAK4V,EAAS5V,EAAEW,OAAOjC,MAAM,OAI7C,eAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,UAAS,SAC7B,eAAClW,GAAA,EAAKya,MAAK,CACTzb,KAAK,WACLgO,MAAM,UACN0N,QAASlT,EACT5G,SAAU,SAACV,GAAC,OAAKmgB,EAAWngB,EAAEW,OAAO6Z,QAAQ,MAMjD,eAAClZ,GAAA,EAAM,CAACxC,KAAK,SAASoX,SAAS,UAAS,SAAC,mBAS7D,E,cC1HA,mmGAAAvY,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMH,GAAgB,SAACxL,EAASwW,EAAQgG,GAC3C,gDAAO,WAAOzQ,EAAUwK,GAAQ,gFAwE6B,OAxE7B,EAIxBA,IADYlU,EAAQ,EAApBmI,UAAYnI,SAGV2J,EAAS,yCAAG,uFAQb,MANc,CACXoE,QAAQ,CACJ,eAAe,mBACfiV,cAAc,UAAD,OAAYhjB,EAASijB,SAGzC,SACsBrZ,KAAMuZ,IAAI,wBAAD,OAAyBxlB,EAAQ8U,IAAG,KACpE9U,GAAQ,OADI,OACJ,SADAmM,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAZc,mCAcT6e,EAAU,yCAAG,WAAOC,EAAYzU,EAAQ0U,GAAI,kFA0CzC,OAxCCC,EAAQ3U,EACRgG,EAAY,OAAJ0O,QAAI,IAAJA,OAAI,EAAJA,EAAMrW,KAAI,SAACvT,EAAMioB,GAC3B,OAAO,6BAAIjoB,GAAI,IAAEsD,MAAO2kB,GAC5B,IACM6B,EAAW,IAAIC,SAkBrBle,QAAQC,IAAI,QAAQoP,GACpBrP,QAAQC,IAAI,SAAU+d,GAGnBA,IAEI,QADGI,EAAMzK,MAAMC,KAAKoK,UACpB,IAAHI,KAAKC,SAAQ,SAAApqB,GAAC,OACVgqB,EAASE,OAAO,SAAUlqB,EAAE,KAIpCgqB,EAASE,OAAO,aAAcL,GAC9BG,EAASE,OAAO,QAAS5qB,KAAK4P,UAAUkM,IAAO,SAErCrM,EAAS,CACdC,QAAS,CACL,eAAgB,wBAEpB,UAEsBnE,KAAMoB,KAAK,wBAAyB+d,EAAUjb,GAAO,iBAAhE,EAAJhE,KAAI,4GAKnB,gBAjDe,mDAoDZJ,EAASnC,GAAqBJ,wBAAuB,SAC9BwC,IAAW,OAC2B,OADvDI,EAAQ,OACdL,EAASnC,GAAqBH,qBAAqB2C,IAAU,UACrC4e,EAAWhrB,EAAQ8U,IAAK0B,EAAQgG,GAAM,QAA/C,OACfzQ,EAASS,GAAexM,EAAQ8U,MAAK,kDAGrC/I,EACInC,GAAqBF,kBACnB,KAAM2C,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAxFD,EAyFJ,EASaiiB,GAAuB,SAACntB,GACjC,gDAAO,WAAO0K,GAAQ,0EAUuC,OAPnDC,EAAS,yCAAG,uGAESC,KAAMC,IAAI,iBAAD,OAAkB7K,IAAK,OAA3C,OAA2C,SAA/C8K,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXJ,EAASnC,GAAqBJ,wBAAuB,SAC9BwC,IAAW,OAA5BI,EAAQ,OACdL,EAASnC,GAAqBH,qBAAqB2C,IAAU,gDAG7DL,EACInC,GAAqBF,kBACnB,KAAM2C,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDAxBD,EAyBJ,E,uCC/HMkiB,GAAe,CAAEvQ,OAAQ,WA0BhBwQ,GAxBD,SAAH,GAAiE,IAA3DnF,EAAK,EAALA,MAAOzX,EAAO,EAAPA,QAAS6c,EAAK,EAALA,MAAOnb,EAAM,EAANA,OAAQob,EAAS,EAATA,UAAWrP,EAAG,EAAHA,IAAKC,EAAI,EAAJA,KACxDqP,EAAW,CAAErb,OAAQA,GACT,WAAdob,IACFC,EAAS1W,SAAW,WACpB0W,EAASrP,KAAOA,EAChBqP,EAAStP,IAAMA,GAOjB,OAEE,gDACEjR,MAAOwD,EAAO,6BAAQ+c,GAAaJ,IAAiBI,GAChDF,GAAK,IACT7c,QAASA,EATO,SAAAsD,GAClBtD,EAAQsD,EAAO,CAAEuZ,QAAOpF,SAC1B,EAOqC,KACjCuF,cAAe,kBAAK3hB,QAAQC,IAAI,eAAe,EAC/C+F,IAAI,QAGV,E,UCCA4b,KAAMC,YAgwBSC,OA7vBf,WAA+B,IAAD,YAElB5tB,EAAO+d,eAAP/d,GAGR,EAAwBoM,mBAAS,IAAG,oBAA7BrP,EAAI,KAAEsmB,EAAO,KACpB,EAA4BjX,mBAAS,IAAG,oBAAjCyhB,EAAM,KAAEC,EAAS,KACxB,EAA2B1hB,mBAAS,IAAG,oBAAhC+I,EAAM,KAAE4Y,EAAQ,KACvB,EAAsC3hB,mBAAS,IAAG,oBAA3CsS,EAAW,KAAEsP,EAAc,KAClC,EAA0B5hB,mBAAS,GAAE,oBAA9BgJ,EAAK,KAAE6Y,EAAQ,KACtB,EAAwC7hB,mBAAS,GAAE,oBAA5CiJ,EAAY,KAAE6Y,EAAe,KACpC,EAA0B9hB,mBAAS,IAAG,oBAA/Bb,EAAK,KAAE+V,EAAQ,KACtB,EAAuClV,mBAAS,IAAG,oBAA5CuN,EAAY,KAAEwU,EAAc,KACnC,EAA0B/hB,mBAAS,IAAG,oBAA/BR,EAAK,KAAE2X,EAAQ,KACtB,EAAoCnX,mBAAS,IAAG,oBAAzCwU,EAAO,KAAEwN,EAAgB,KAChC,EAAoChiB,mBAAS,IAAG,oBAAzCyU,EAAU,KAAEwN,EAAa,KAChC,EAA+CjiB,mBAAS,IAAG,qBAApD0U,GAAgB,MAAEwN,GAAkB,MAC3C,GAAuCliB,mBAAS,IAAG,sBAA5C2U,GAAY,MAAEwN,GAAc,MACnC,GAAsCniB,mBAAS,IAAG,sBAA3C4U,GAAW,MAAEwN,GAAc,MAClC,GAA6CpiB,mBAAS,IAAG,sBAAlDkK,GAAe,MAAEmY,GAAiB,MACzC,GAAwBriB,mBAAS,IAAG,sBAA7BZ,GAAI,MAAEkjB,GAAO,MACpB,GAA6CtiB,mBAAS,IAAG,sBAAlD8U,GAAe,MAAEyN,GAAiB,MACzC,GAAwBviB,mBAAS,IAAG,sBAA7BX,GAAI,MAAEmjB,GAAO,MACpB,GAAyCxiB,mBAAS,IAAG,sBAA9C6U,GAAa,MAAE4N,GAAe,MACrC,GAAgCziB,mBAAS,IAAG,sBAArCV,GAAQ,MAAEojB,GAAW,MAC5B,GAA0B1iB,mBAAS,IAAG,sBAA/B+O,GAAK,MAAE4T,GAAQ,MACtB,GAA0B3iB,oBAAS,GAAM,sBACzC,IADY,MAAU,MACqBA,oBAAS,IAAM,sBAAnD8J,GAAc,MAAE8Y,GAAgB,MACvC,GAAwB5iB,oBAAS,GAAM,sBAAhC+e,GAAI,MAAE8D,GAAO,MACpB,GAA4B7iB,mBAAS,MAAK,sBAAnCgf,GAAM,MAAE8D,GAAS,MAExB,GAAkC9iB,oBAAS,GAAM,sBAA1C+iB,GAAS,MAEVzkB,IAFwB,MAEb6B,eACXsM,GAAWvM,eAEXjC,GAAeqF,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IAC1BlM,IAAqDkM,GAA/EnN,QAA+EmN,GAArDlM,YAAaC,GAAwCiM,GAAxCjM,cAEzCgxB,IAFiF/kB,GAAzBlN,MAE3CuS,aAAY,SAAAjS,GAAK,OAAIA,EAAM0M,aAAa,KACnDhN,GAAqCiyB,GAArCjyB,MAAOD,GAA8BkyB,GAA9BlyB,QAASE,GAAqBgyB,GAArBhyB,QAASuB,GAAYywB,GAAZzwB,QAE3Bye,GAAO1N,aAAY,SAAAjS,GAAK,OAAIA,EAAMkB,OAAO,IACN0wB,IAAejS,GAAhDze,QAAgDye,GAAzBhgB,SAEzB+qB,GAASnX,iBAAO,IAEhBse,GAAgBC,cAAgB,SAAAtvB,GAAI,OAAI,eAAC,GAAK,gBAAKA,GAAQ,IAC3DuvB,GAAkBC,cAAkB,gBAAGtU,EAAK,EAALA,MAAK,OAC1C,eAAC,KAAO,CAACuU,OAAQvU,EAAOwU,YAAa,SAAA5hB,GAAK,OAAI,eAACuhB,GAAa,gBAAKvhB,GAAS,GAAI,IAkCtFmC,qBAAU,WAENxF,GAASkG,KAEb,GAAG,CAAClG,KAEJwF,qBAAU,WAEN,GAAG9S,GAAQ,CAAC,IAAD,IACDoiB,EAAaC,MAAMC,KAAY,OAAP/gB,SAAO,IAAPA,QAAO,EAAPA,GAASwW,QAAQY,UAAS,SAAAhW,GAAC,OAAgB,IAAZA,EAAEwD,KAAW,IAEpEoc,EAAmD,QAAlC,EAAEF,MAAMC,KAAK,aAAW,OAAP/gB,SAAO,IAAPA,QAAO,EAAPA,GAASwW,gBAAQ,aAAhC,EAAkC9B,MAAK,SAACtT,EAAG6f,GAAC,OAAK7f,EAAEwD,MAAQqc,EAAErc,KAAK,IAAEiQ,KAAI,SAAA1C,GAC7F,MAAO,CACH/T,KAAM+T,EAAM8e,WACZ9e,MAAY,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOA,MACd9Q,GAAS,OAAL8Q,QAAK,IAALA,OAAK,EAALA,EAAO9Q,GAEnB,IAGM6f,EAAgD,OAAjBF,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrf,QAAO,SAAAP,GAAC,OAAK,OAADA,QAAC,IAADA,OAAC,EAADA,EAAGC,OAAgB,OAATwf,QAAS,IAATA,OAAS,EAATA,EAAWxf,GAAE,IACxFwf,GACCK,EAA6BC,QAAQ,CAAChP,MAAgB,OAAT0O,QAAS,IAATA,OAAS,EAATA,EAAW1O,MAAO9Q,GAAa,OAATwf,QAAS,IAATA,OAAS,EAATA,EAAWxf,GAAIjD,KAAe,OAATyiB,QAAS,IAATA,OAAS,EAATA,EAAWoQ,aAGvG,IAAMF,EAAkD,QAA5C,eAAO,IAAI1P,IAAIH,WAA6B,aAAzC,EAA4CrM,KAAI,SAAA1C,GAC3D,MAAO,CACH/T,KAAM+T,EAAM/T,KACZsU,IAAIP,EAAMA,MACV9Q,GAAG8Q,EAAM9Q,GACTwN,MAAM,EACNc,OAAO,EAEf,IAEAyf,EAAS,MACTgB,GAASW,EACb,CACJ,GAAG,CAACtyB,GAAe,OAAPuB,SAAO,IAAPA,QAAO,EAAPA,GAAS5B,KAAa,OAAP4B,SAAO,IAAPA,QAAO,EAAPA,GAASwW,SAEpCjF,qBAAU,WAKM,IAAD,GAHXxF,GAASyiB,GAAqBntB,IAG3B5C,MAICimB,EAAQ1kB,GAAQ5B,MAChB+wB,EAAUnvB,GAAQkvB,QAClBI,EAAStvB,GAAQyW,OACjB2Y,EAASpvB,GAAQwW,QACjBmM,EAAS3iB,GAAQ4M,OACjBgY,EAAS5kB,GAAQgiB,mBACjBwN,EAAexvB,GAAQgb,cACvBmV,GAA4B,QAAjB,EAACnwB,GAAQ+M,gBAAQ,aAAhB,EAAkB8H,KAAI,SAAAzT,GAAC,OAAIA,EAAEhD,IAAI,KAC7CmxB,EAAgBvvB,GAAQ0W,cACxB2Y,EAAervB,GAAQ+f,aACvBgQ,GAAQ/vB,GAAQ6M,MAChBojB,GAAQjwB,GAAQ+a,eAChB0U,EAAiBzvB,GAAQiiB,SACzByN,EAAc1vB,GAAQkiB,YACtByN,GAAmB3vB,GAAQmiB,kBAC3ByN,GAAe5vB,GAAQoiB,cACvByN,GAAe7vB,GAAQqiB,aACvByN,GAAkB9vB,GAAQ2X,iBAC1BqY,GAAkBhwB,GAAQuiB,iBAC1B2N,GAAgBlwB,GAAQsiB,eACxB+N,GAAiBrwB,GAAQuX,gBACzB+Y,GAAQtwB,GAAQwsB,MAChB+D,GAAUvwB,GAAQysB,QAG1B,GAAG,CAAC1gB,GAAUmO,GAAiB,OAAPla,SAAO,IAAPA,QAAO,EAAPA,GAAS5B,KAAMK,GAASiyB,KAEhD,IA+FMvkB,GAAoB,OAAb1M,SAAa,IAAbA,IAAsB,QAAT,EAAbA,GAAewiB,eAAO,WAAT,EAAb,EAAwBpN,KAAI,SAAAzT,GACrC,MAAO,CACHsL,MAAMtL,EACN0Z,MAAM1Z,EAEd,IAEM8vB,GAAiC,OAAbzxB,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAeub,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAzT,GACvD,MAAO,CACHsL,MAAMtL,EACN0Z,MAAM1Z,EAEd,IAEM+vB,GAAkB,OAAV3xB,SAAU,IAAVA,QAAU,EAAVA,GAAYqV,KAAI,SAAAzT,GAC1B,MAAO,CACHsL,MAAMtL,EAAEhD,KACR0c,MAAM1Z,EAAEhD,KAEhB,IAGMgzB,GAAY,SAAH,EAA0BpjB,GAAO,IAA3BqjB,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAE3BlB,GAASmB,aAAmB/U,GAAO6U,EAAUC,GASjD,EAEME,GAAoBpX,mBAAQ,WAC9B,OACI,eAAChM,GAAA,EAAG,UACA,eAACyiB,GAAe,CAACrU,MAAOA,GAAS4U,UAAWA,GAAWK,KAAM,QAGzE,GAAE,CAACjV,KAEH,OACI,uBAAKhN,UAAU,oBAAmB,UAElC,eAAC,QAAI,CAACwD,IAAK,EAAGxD,UAAU,wBAAuB,SAAC,UAIhD,gBAAC,GAAa,WACV,qBAAIlB,MAAO,CAAC1B,MAAM,SAAS,SAAC,kBAC3BrO,IAAW,eAAC,GAAM,IAClBC,IAAS,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAAE/Q,KAEpCD,GAAU,eAAC,GAAM,IAAMC,GAAQ,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAAE/Q,KAEnD,gBAACsP,GAAA,EAAI,CAACC,SAnJA,SAACC,GACnBA,EAAEC,iBAEFlC,GAASP,GAAc,CACnBsJ,IAAIzT,EACJjD,OACAuZ,mBACAuX,SACAjN,UACAC,aACAC,oBACAC,gBACAC,eACAC,iBACAC,mBACA9L,QACAC,eACAqJ,cACAnT,QACAoO,eACA/N,QACAH,QACAD,QACAE,YACAwK,kBACAiV,QACAC,WACDjW,EAAQgG,KACX4T,GAAS5G,GAAOhX,SAShB6M,OAAOC,SAAS,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,WA3CdsP,KAAMtwB,QAAQ,4BACX,CAAC0Z,SAAU4W,KAAM2C,SAASC,UAAWC,UAAU,MA6ClDxC,EAAS,GACb,EAuG8C,UAEtB,gBAACthB,GAAA,EAAKiW,MAAK,CAACC,UAAU,KAAI,UACtB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,SACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAAcrrB,EACduW,UAAQ,OAKhB,gBAAC9J,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAActuB,EACdsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,OAKhD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,sBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAc/U,GACdjJ,SAAU,SAACV,GAAC,OAAK8hB,GAAkB9hB,EAAEW,OAAOjC,MAAM,OAK1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,SAAQ,UAC1B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcwC,EACdxgB,SAAU,SAACV,GAAC,OAAKmhB,EAAUnhB,EAAEW,OAAOjC,MAAM,OAKlD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,yBAEpB,eAACnW,GAAA,EAAKya,MAAK,CACPsJ,SAAO,EACP/kB,KAAK,WACLzL,GAAG,UACHywB,eAAgBva,GAChB7I,SAAU,SAACV,GAAC,OAAKqiB,GAAiBriB,EAAEW,OAAO6Z,QAAQ,OAK3D,gBAAC1a,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WAEpB,eAACnW,GAAA,EAAKya,MAAK,CACPsJ,SAAO,EACP/kB,KAAK,WACLzL,GAAG,OACHywB,eAAgBtF,GAChB9d,SAAU,SAACV,GAAC,OAAKsiB,GAAQtiB,EAAEW,OAAO6Z,QAAQ,OAKlD,eAAC1a,GAAA,EAAKiW,MAAK,CAACC,UAAU,SAAQ,SAG1B,gBAACZ,GAAA,EAAW,WACR,eAACC,GAAA,EAAS,CAAChiB,GAAG,sCAAsCuL,MAAM,UAAS,SAAC,kCAAQ,aAC5E,gBAAC0W,GAAA,EAAU,CACP,kBAAgB,sCAChBllB,KAAK,iCACLsO,MAAO+f,GACP/d,SAAU,SAACV,GAAC,OAAKuiB,GAAUviB,EAAEW,OAAOjC,MAAM,EAC1CqlB,KAAG,YAEH,eAACxO,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,QACtE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,QACtE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,gBAMlF,gBAAChN,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAClBgO,cAAe,SAAChkB,GAEZA,EAAEC,iBACF,IAAMkE,EAAQzR,KAAK4P,UAAUtC,EAAEW,OAAO+D,KAChCuf,EAAWzV,GAAM7a,QAAO,SAAAL,GAAI,OAAIZ,KAAK4P,UAAUhP,EAAKoR,OAASP,CAAK,IAExEie,GAAS6B,EAuBb,EAAE,UACF,eAACnkB,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aAUpB,eAACnW,GAAA,EAAKU,QAAO,CACT0jB,UAAU,aACVplB,KAAK,OACLqlB,SAAS,WAETzjB,SAhZJ,SAAC0jB,GACzB,IAAMC,EAAe,GACfC,EAAcF,EAAKzjB,OAAOwc,MACR,aAAKmH,GACXzd,KAAI,SAAC0d,GACpB,OAAOF,EAAc7wB,KAAK,CAAC+wB,KAAMC,IAAIC,gBAAgBF,GAAOn0B,KAAMm0B,EAAKn0B,MAC1E,IAGAgxB,EAASgD,EAAKzjB,OAAOwc,OACrB,IAAM4F,EAAsB,OAAbsB,QAAa,IAAbA,OAAa,EAAbA,EAAexd,KAAI,SAAA1C,GAC5B,MAAO,CACHO,IAAIP,EAAMogB,KACVn0B,KAAK+T,EAAM/T,KACXyQ,MAAM,EACNc,OAAO,EAEjB,IACMsiB,EAAgB,OAALzV,SAAK,IAALA,QAAK,EAALA,GAAO3H,KAAI,SAAA1C,GACxB,MAAO,CACHO,IAAIP,EAAMO,IACVtU,KAAM+T,EAAM/T,KACZyQ,MAAM,EACNc,OAAO,EAEf,IAEAygB,GAAS,GAAD,oBAAK6B,GAAQ,aAAKlB,IAC9B,EAqXgCziB,MAAO,CAAE6H,aAAa,WAKzBqb,GACAhB,IAAa,eAAC,GAAM,OAIzB,gBAAC1iB,GAAA,EAAKiW,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,eAACnW,GAAA,EAAKU,QAAO,CAETiJ,GAAG,WAAWib,KAAM,EACpB5lB,KAAK,WACL2B,YAAY,GACZie,aAAc3M,EACdrR,SAAU,SAACV,GAAC,OAAKqhB,EAAerhB,EAAEW,OAAOjC,MAAM,OAKvD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAAcjW,EACd/H,SAAU,SAACV,GAAC,OAAKshB,EAASthB,EAAEW,OAAOjC,MAAM,OAKjD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAAchW,EACdhI,SAAU,SAACV,GAAC,OAAKuhB,EAAgBvhB,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WACpB,eAACnW,GAAA,EAAKU,QAAO,CAEA1B,KAAK,OACL2B,YAAY,GACZie,aAAc9f,EACd8B,SAAU,SAACV,GAAC,OAAK2U,EAAS3U,EAAEW,OAAOjC,MAAM,OAmB1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,mBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EAEPF,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ4K,mBAAmB,EACnBsZ,cAAe,EACfC,iBAAiB,EACjBlmB,MAAwB,OAAjBwkB,SAAiB,IAAjBA,QAAiB,EAAjBA,GAAmBvvB,QAAO,SAAAG,GAAG,OAAgB,OAAZkZ,QAAY,IAAZA,OAAY,EAAZA,EAAcuF,SAASze,EAAI4K,MAAM,IACzEuM,QAASiY,GACTxiB,SAxSP,SAACV,GAE/BwhB,EAAe1O,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GAC5D,OA4TwB,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnG,aAAc5f,GACd4B,SAAU,SAACV,GAAC,OAAKiiB,GAAQjiB,EAAEW,OAAOjC,MAAM,EAAC,UAClD,kCAAiBI,IAAJ,GACC,OAAbrN,SAAa,IAAbA,IAA4B,QAAf,EAAbA,GAAesb,qBAAa,WAAf,EAAb,EAA8BlG,KAAI,SAAAvC,GAAG,OAClC,yBAAkB5F,MAAO4F,EAAI,SAAEA,GAAlBA,EAA+B,UAMxD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,qBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EAEPF,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ4K,mBAAmB,EACnBsZ,cAAe,EACfC,iBAAiB,EACjBlmB,MAAW,OAAJP,SAAI,IAAJA,QAAI,EAAJA,GAAMxK,QAAO,SAAAG,GAAG,OAAW,OAAPmgB,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,SAASze,EAAI4K,MAAM,IACvDuM,QAAS9M,GACTuC,SA9VpB,SAACV,GAElByhB,EAAiB3O,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GAC9D,OAmXwB,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnG,aAAcxK,EACdxT,SAAU,SAACV,GAAC,OAAK0hB,EAAc1hB,EAAEW,OAAOjC,MAAM,EAAC,UACxD,kCAAiBwV,GAAJ,GACC,OAAbziB,SAAa,IAAbA,IAAyB,QAAZ,EAAbA,GAAeyiB,kBAAU,WAAZ,EAAb,EAA2BrN,KAAI,SAAAvC,GAAG,OAC/B,yBAAkB5F,MAAO4F,EAAI,SAAEA,GAAlBA,EAA+B,UAmBxD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,mBAAkB,UACpC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnG,aAAcvK,GACdzT,SAAU,SAACV,GAAC,OAAK2hB,GAAmB3hB,EAAEW,OAAOjC,MAAM,EAAC,UAC7D,kCAAiByV,IAAJ,GACC,OAAb1iB,SAAa,IAAbA,IAA+B,QAAlB,EAAbA,GAAe0iB,wBAAgB,WAAlB,EAAb,EAAiCtN,KAAI,SAAAvC,GAAG,OACrC,yBAAkB5F,MAAO4F,EAAI,SAAEA,GAAlBA,EAA+B,UAmBxD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,mBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnG,aAActK,GACd1T,SAAU,SAACV,GAAC,OAAK4hB,GAAe5hB,EAAEW,OAAOjC,MAAM,EAAC,UACzD,kCAAiB0V,IAAJ,GACC,OAAb3iB,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAe2iB,oBAAY,WAAd,EAAb,EAA6BvN,KAAI,SAAAvC,GAAG,OACjC,yBAAkB5F,MAAO4F,EAAI,SAAEA,GAAlBA,EAA+B,UAMxD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcrK,GACd3T,SAAU,SAACV,GAAC,OAAK6hB,GAAe7hB,EAAEW,OAAOjC,MAAM,OAKvD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,cACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAc7f,GACd6B,SAAU,SAACV,GAAC,OAAK+hB,GAAQ/hB,EAAEW,OAAOjC,MAAM,OAKhD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,gBAAe,UACjC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,cACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcpK,GACd5T,SAAU,SAACV,GAAC,OAAKkiB,GAAgBliB,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,gBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcnK,GACd7T,SAAU,SAACV,GAAC,OAAKgiB,GAAkBhiB,EAAEW,OAAOjC,MAAM,OAQ1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EACPqM,UAAQ,EACRvM,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ/B,MAAY,OAALykB,SAAK,IAALA,QAAK,EAALA,GAAOxvB,QAAO,SAAAG,GAAG,OAAY,OAARiL,SAAQ,IAARA,QAAQ,EAARA,GAAUwT,SAASze,EAAI4K,MAAM,IACzD2M,mBAAmB,EACnBsZ,cAAe,EACfC,iBAAiB,EACjB3Z,QAASkY,GACTziB,SA7enB,SAACV,GAEnBmiB,GAAYrP,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GACzD,OAofwB,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASyC,QAAQ,UAAWC,UAAU,OAAM,SAAC,0BAWtF,EC3vBAuf,KAAMC,YAEN,IAAM2B,GAAgBC,cAAgB,SAAAtvB,GAAI,OAAI,eAAC,GAAK,gBAAKA,GAAQ,IAC3DuvB,GAAkBC,cAAkB,gBAAGtU,EAAK,EAALA,MAAK,OAC1C,eAAC,KAAO,CAACuU,OAAQvU,EAAOwU,YAAa,SAAA5hB,GAAK,OAAI,eAAC,GAAa,gBAAKA,GAAS,GAAI,IAknBvE0jB,OA9mBf,WAAiC,IAAD,YAE5B,EAAwBrlB,mBAAS,IAAG,oBAA7BrP,EAAI,KAAEsmB,EAAO,KACpB,EAA4BjX,mBAAS,IAAG,oBAAjCyhB,EAAM,KAAEC,EAAS,KACxB,EAA2B1hB,mBAAS,IAAG,oBAAhC+I,EAAM,KAAE4Y,EAAQ,KACvB,EAAsC3hB,mBAAS,IAAG,oBAA3CsS,EAAW,KAAEsP,EAAc,KAClC,EAA0B5hB,mBAAS,GAAE,oBAA9BgJ,EAAK,KAAE6Y,EAAQ,KACtB,EAAwC7hB,mBAAS,GAAE,oBAA5CiJ,EAAY,KAAE6Y,EAAe,KACpC,EAA0B9hB,mBAAS,IAAG,oBAA/Bb,EAAK,KAAE+V,EAAQ,KACtB,EAAuClV,mBAAS,IAAG,oBAA5CuN,EAAY,KAAEwU,EAAc,KACnC,EAA0B/hB,mBAAS,IAAG,oBAA/BR,EAAK,KACZ,GADsB,KACcQ,mBAAS,KAAG,oBAAzCwU,EAAO,KAAEwN,EAAgB,KAChC,EAAoChiB,mBAAS,IAAG,oBAAzCyU,EAAU,KAAEwN,EAAa,KAChC,EAA+CjiB,mBAAS,IAAG,oBAApD0U,EAAgB,KAAEwN,GAAkB,KAC3C,GAAuCliB,mBAAS,IAAG,sBAA5C2U,GAAY,MAAEwN,GAAc,MACnC,GAAsCniB,mBAAS,IAAG,sBAA3C4U,GAAW,MAAEwN,GAAc,MAClC,GAA6CpiB,mBAAS,IAAG,sBAAlDkK,GAAe,MAAEmY,GAAiB,MACzC,GAAwBriB,mBAAS,IAAG,sBAA7BZ,GAAI,MAAEkjB,GAAO,MACpB,GAA6CtiB,mBAAS,IAAG,sBAAlD8U,GAAe,MAAEyN,GAAiB,MACzC,GAAwBviB,mBAAS,IAAG,sBAA7BX,GAAI,MAAEmjB,GAAO,MACpB,GAAyCxiB,mBAAS,IAAG,sBAA9C6U,GAAa,MAAE4N,GAAe,MACrC,GAAgCziB,mBAAS,iBAAW,sBAA7CV,GAAQ,MAAEojB,GAAW,MAC5B,GAA0B1iB,mBAAS,IAAG,sBAA/B+O,GAAK,MAAE4T,GAAQ,MACtB,GAA2C3iB,oBAAS,GAAM,sBAAnD8J,GAAc,MAAE8Y,GAAgB,MACvC,GAAwB5iB,oBAAS,GAAM,sBAAhC+e,GAAI,MAAE8D,GAAO,MACpB,GAA4B7iB,mBAAS,MAAK,sBAAnCgf,GAAM,MAAE8D,GAAS,MAExB,GAAkC9iB,oBAAS,GAAM,sBAA1C+iB,GAAS,MAEVzkB,IAFwB,MAEb6B,eACXsM,GAAWvM,eAEXjC,GAAeqF,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IAC3C8S,GAAsE9S,GAA/EnN,QAA0BiB,GAAqDkM,GAArDlM,WAAaC,GAAwCiM,GAAxCjM,cAAsB8e,GAAkB7S,GAAzBlN,MAGxDu0B,GAAY1gB,mBACZ2gB,GAAY3gB,mBAgClBd,qBAAU,WAENxF,GAASkG,KAEb,GAAG,CAAClG,KAEJ,IA8BMknB,GAAS,WAEXlE,KAAMtwB,QAAQ,2BACX,CAAC0Z,SAAU4W,KAAM2C,SAASC,UAAWC,UAAU,KACtD,EAkDMzlB,GAAoB,OAAb1M,SAAa,IAAbA,IAAsB,QAAT,EAAbA,GAAewiB,eAAO,WAAT,EAAb,EAAwBpN,KAAI,SAAAzT,GACrC,MAAO,CACHsL,MAAMtL,EACN0Z,MAAM1Z,EAEd,IAEM+vB,GAAkB,OAAV3xB,SAAU,IAAVA,QAAU,EAAVA,GAAYqV,KAAI,SAAAzT,GAC1B,MAAO,CACHsL,MAAMtL,EAAEhD,KACR0c,MAAM1Z,EAAEhD,KAEhB,IAEM80B,GAA4B,OAAbzzB,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAeub,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAzT,GAClD,MAAO,CACHsL,MAAMtL,EACN0Z,MAAM1Z,EAEd,IAmBA,OACI,iCACI,eAAC,QAAI,CAAC4R,GAAG,qBAAqBxD,UAAU,uBAAsB,SAAC,UAI/D,gBAAC,GAAa,WACV,qBAAIlB,MAAO,CAAC1B,MAAM,SAAS,SAAC,qBAC3B4R,IAAmB,eAAC,GAAM,IAC1BD,IAAiB,eAAC,GAAO,CAAChP,QAAQ,SAAQ,SAAEgP,KAE5CC,GAAkB,eAAC,GAAM,IAAMD,GAAgB,eAAC,GAAO,CAAChP,QAAQ,SAAQ,SAAEgP,KAEnE,gBAACzQ,GAAA,EAAI,CAACC,SAvIJ,SAACC,GACnBA,EAAEC,iBACFlC,GAAST,GAAc,CACnBlN,OACAuZ,mBACAuX,SACAjN,UACAC,aACAC,mBACAC,gBACAC,eACAC,iBACAC,mBACA9L,QACAC,eACAqJ,cACAnT,QACAoO,eACA/N,QACAH,QACAD,QACAE,YACAwK,kBACAiV,QACAC,WACDjW,EAAQgG,KACXtC,GAAS,sBACT+Y,IACJ,EA2GkD,UAE1B,gBAACnlB,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,CAAC5iB,GAAG,aAAY,SAAC,kCAAQ,WACpC,eAACyM,GAAA,EAAKU,QAAO,CAET2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAActuB,EACdsQ,SAAU,SAACV,GAAC,OAAK0W,EAAQ1W,EAAEW,OAAOjC,MAAM,EACxCymB,WAAY,SAACnlB,GAAC,OAhK9C,SAAoBA,GAEH,UAAVA,EAAEolB,KAEDJ,GAAUxgB,QAAQ6gB,OAE1B,CA0JmDC,CAAWtlB,EAAE,EAChC8J,IAAKib,QAKb,gBAACjlB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,sBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAc/U,GACdjJ,SAAU,SAACV,GAAC,OAAK8hB,GAAkB9hB,EAAEW,OAAOjC,MAAM,OAK1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,SAAQ,UAC1B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcwC,EACdxgB,SAAU,SAACV,GAAC,OAAKmhB,EAAUnhB,EAAEW,OAAOjC,MAAM,EAC1CoL,IAAKkb,QAKb,gBAACllB,GAAA,EAAKiW,MAAK,CAACC,UAAU,iBAAiBxU,UAAU,OAAM,UACnD,eAAC1B,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,yBAEpB,eAACnW,GAAA,EAAKya,MAAK,CACPsJ,SAAO,EACP/kB,KAAK,WAEL4B,SAAU,SAACV,GAAC,OAAKqiB,GAAiBriB,EAAEW,OAAO6Z,QAAQ,OAK3D,gBAAC1a,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAOxU,UAAU,OAAM,UACzC,eAAC1B,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WAEpB,eAACnW,GAAA,EAAKya,MAAK,CACPsJ,SAAO,EACP/kB,KAAK,WAEL4B,SAAU,SAACV,GAAC,OAAKsiB,GAAQtiB,EAAEW,OAAO6Z,QAAQ,OAKlD,eAAC1a,GAAA,EAAKiW,MAAK,CAACC,UAAU,SAASxU,UAAU,OAAM,SAG3C,gBAAC4T,GAAA,EAAW,WACR,eAACC,GAAA,EAAS,CAAChiB,GAAG,sCAAsCuL,MAAM,UAAS,SAAC,kCAAQ,aAC5E,gBAAC0W,GAAA,EAAU,CACP,kBAAgB,sCAChBllB,KAAK,iCACLsO,MAAO+f,GACP/d,SAAU,SAACV,GAAC,OAAKuiB,GAAUviB,EAAEW,OAAOjC,MAAM,EAC1CqlB,KAAG,EACHnlB,MAAM,UAAS,UAEf,eAAC2W,GAAA,EAAgB,CAAC7W,MAAM,IAAI8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,OACrE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,QACtE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,QACtE,eAACyI,GAAA,EAAgB,CAAC7W,MAAM,KAAK8W,QAAS,eAACC,GAAA,EAAK,CAAC7W,MAAM,YAAakO,MAAM,gBAwClF,gBAAChN,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aAUpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACLqlB,SAAS,WAETzjB,SArTJ,SAAC0jB,GAEzB,IAAMC,EAAe,GACfC,EAAcF,EAAKzjB,OAAOwc,MACR,aAAKmH,GACXzd,KAAI,SAAC0d,GACpB,OAAOF,EAAc7wB,KAAK,CAAC+wB,KAAMC,IAAIC,gBAAgBF,GAAOn0B,KAAMm0B,EAAKn0B,MAC1E,IAEAgxB,EAASgD,EAAKzjB,OAAOwc,OACrB,IAAM4F,EAAsB,OAAbsB,QAAa,IAAbA,OAAa,EAAbA,EAAexd,KAAI,SAAA1C,GAC5B,MAAO,CACHO,IAAIP,EAAMogB,KACVn0B,KAAK+T,EAAM/T,KACXyQ,MAAM,EACNc,OAAO,EAEjB,IAEAygB,GAASW,EACb,EAkSgCziB,MAAO,CAAE6H,aAAa,WAM1B,eAAC/H,GAAA,EAAG,UACA,eAAC,GAAe,CAACoO,MAAOA,GAAO4U,UArK7C,SAAH,GAAgC,IAA1BC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAE3BlB,GAASmB,aAAmB/U,GAAO6U,EAAUC,IAC7ClC,EAASmC,aAAmB/a,EAAQ6a,EAAUC,GACpD,EAiKuFG,KAAM,SAE9DjB,IAAa,eAAC,GAAM,OAIzB,gBAAC1iB,GAAA,EAAKiW,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,eAACnW,GAAA,EAAKU,QAAO,CACTiJ,GAAG,WAAWib,KAAM,EACpB5lB,KAAK,WACL2B,YAAY,GACZie,aAAc3M,EACdrR,SAAU,SAACV,GAAC,OAAKqhB,EAAerhB,EAAEW,OAAOjC,MAAM,OAKvD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAAa,GACbhe,SAAU,SAACV,GAAC,OAAKshB,EAASthB,EAAEW,OAAOjC,MAAM,OAKjD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,aACpB,eAACnW,GAAA,EAAKU,QAAO,CACT2W,UAAQ,EACRrY,KAAK,OACL2B,YAAY,GACZie,aAAa,GACbhe,SAAU,SAACV,GAAC,OAAKuhB,EAAgBvhB,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,QAAO,UACzB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,WACpB,eAACnW,GAAA,EAAKU,QAAO,CAEA1B,KAAK,OACL2B,YAAY,GACZie,aAAa,GACbhe,SAAU,SAACV,GAAC,OAAK2U,EAAS3U,EAAEW,OAAOjC,MAAM,OAkB1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,mBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EAEPF,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ/B,MAAmB,OAAZwmB,SAAY,IAAZA,QAAY,EAAZA,GAAcvxB,QAAO,SAAAG,GAAG,OAAgB,OAAZkZ,QAAY,IAAZA,OAAY,EAAZA,EAAcuF,SAASze,EAAI4K,MAAM,IACpE2M,mBAAmB,EACnBJ,QAASia,GACTxkB,SA7Rd,SAACV,GAExBwhB,EAAe1O,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GAC5D,OAoSwB,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnkB,SAAU,SAACV,GAAC,OAAKiiB,GAAQjiB,EAAEW,OAAOjC,MAAM,EAAC,UAClD,yBAAQrL,GAAG,MACG,OAAb5B,SAAa,IAAbA,IAA4B,QAAf,EAAbA,GAAesb,qBAAa,WAAf,EAAb,EAA8BlG,KAAI,SAAAvC,GAAG,OAClC,yBAAQjR,GAAIiR,EAAK5F,MAAO4F,EAAI,SAAEA,GAAa,UAkBvD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,qBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EAEPF,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ/B,MAAW,OAAJP,SAAI,IAAJA,QAAI,EAAJA,GAAMxK,QAAO,SAAAG,GAAG,OAAW,OAAPmgB,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,SAASze,EAAI4K,MAAM,IACvD2M,mBAAmB,EACnBJ,QAAS9M,GACTuC,SA/UpB,SAACV,GAElByhB,EAAiB3O,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GAC9D,OAsVwB,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnkB,SAAU,SAACV,GAAC,OAAK0hB,EAAc1hB,EAAEW,OAAOjC,MAAM,EAAC,UACxD,yBAAQrL,GAAG,MACG,OAAb5B,SAAa,IAAbA,IAAyB,QAAZ,EAAbA,GAAeyiB,kBAAU,WAAZ,EAAb,EAA2BrN,KAAI,SAAAvC,GAAG,OAC/B,yBAASjR,GAAIiR,EAAK5F,MAAO4F,EAAI,SAAEA,GAAa,UAMxD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,mBAAkB,UACpC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnkB,SAAU,SAACV,GAAC,OAAK2hB,GAAmB3hB,EAAEW,OAAOjC,MAAM,EAAC,UAC7D,yBAAQrL,GAAG,MACG,OAAb5B,SAAa,IAAbA,IAA+B,QAAlB,EAAbA,GAAe0iB,wBAAgB,WAAlB,EAAb,EAAiCtN,KAAI,SAAAvC,GAAG,OACrC,yBAAQjR,GAAIiR,EAAK5F,MAAO4F,EAAI,SAAEA,GAAa,UAMvD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,eAAc,UAChC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,mBACpB,gBAACnW,GAAA,EAAK+kB,OAAM,CAAC,aAAW,yBACXnkB,SAAU,SAACV,GAAC,OAAK4hB,GAAe5hB,EAAEW,OAAOjC,MAAM,EAAC,UACzD,yBAAQrL,GAAG,MACG,OAAb5B,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAe2iB,oBAAY,WAAd,EAAb,EAA6BvN,KAAI,SAAAvC,GAAG,OACjC,yBAAQjR,GAAIiR,EAAK5F,MAAO4F,EAAI,SAAEA,GAAa,UAMvD,gBAACxE,GAAA,EAAKiW,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,kBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcrK,GACd3T,SAAU,SAACV,GAAC,OAAK6hB,GAAe7hB,EAAEW,OAAOjC,MAAM,OAiBvD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,OAAM,UACxB,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,cACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAc7f,GACd6B,SAAU,SAACV,GAAC,OAAK+hB,GAAQ/hB,EAAEW,OAAOjC,MAAM,OAKhD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,gBAAe,UACjC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,cACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcpK,GACd5T,SAAU,SAACV,GAAC,OAAKkiB,GAAgBliB,EAAEW,OAAOjC,MAAM,OAKxD,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,gBACpB,eAACnW,GAAA,EAAKU,QAAO,CAET1B,KAAK,OACL2B,YAAY,GACZie,aAAcnK,GACd7T,SAAU,SAACV,GAAC,OAAKgiB,GAAkBhiB,EAAEW,OAAOjC,MAAM,OAQ1D,gBAACoB,GAAA,EAAKiW,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAClW,GAAA,EAAKmW,MAAK,UAAC,kCAAQ,iBACpB,eAAC,KAAM,CAAC,aAAW,yBACNnL,SAAO,EACPqM,UAAQ,EACRvM,aAAW,EACXpJ,UAAU,WACVf,YAAY,gBACZ/B,MAAY,OAALykB,SAAK,IAALA,QAAK,EAALA,GAAOxvB,QAAO,SAAAG,GAAG,OAAY,OAARiL,SAAQ,IAARA,QAAQ,EAARA,GAAUwT,SAASze,EAAI4K,MAAM,IACzD2M,mBAAmB,EACnBJ,QAASkY,GACTziB,SA7bnB,SAACV,GAEnBmiB,GAAYrP,MAAMiB,QAAQ/T,GAAKA,EAAE6G,KAAI,SAAAzT,GAAC,OAAIA,EAAEsL,KAAK,IAAI,GACzD,OAocwB,eAAC4C,GAAA,EAAM,CAACxC,KAAK,SAASyC,QAAQ,UAAUC,UAAU,OAAM,SAAC,2BAWrF,E,cCjpBA,mmGAAA7D,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM4nB,GAAa,WACtB,gDAAO,WAAOxnB,EAAUwK,GAAQ,8EAoBqB,OApBrB,EAEIA,IAAblU,EAAQ,EAApBmI,UAAYnI,SAEb2J,EAAS,yCAAG,yFAOb,OALKmE,EAAS,CACXC,QAAQ,CACJ,eAAe,oBACfiV,cAAc,UAAD,OAAWhjB,EAASijB,SAExC,SAGsBrZ,KAAMC,IAAI,eAAgBiE,GAAO,OAA5C,OAA4C,SAAhDhE,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAbc,4CAgBXJ,EAAS7B,GAAiBH,oBAAmB,SACtBiC,IAAW,OAA5BI,EAAQ,OACdL,EAAS7B,GAAiBF,iBAAiBoC,IAAU,kDAGrDL,EACI7B,GAAiBD,cACf,KAAMoC,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAlCD,EAmCJ,ECyEeinB,OAlGf,WAEI,IAAMznB,EAAW6B,cACX6lB,EAAW1iB,aAAY,SAAAjS,GAAK,OAAIA,EAAM2M,SAAS,IAC7ClN,EAA0Bk1B,EAA1Bl1B,QAASC,EAAiBi1B,EAAjBj1B,MAAOyH,EAAUwtB,EAAVxtB,OAGhB5D,EADU0O,aAAY,SAAAjS,GAAK,OAAIA,EAAM0L,SAAS,IAC9CnI,SAEF6X,EAAWvM,eAgBnB,OAdE4D,qBAAU,WAEHlP,GAAYA,EAASiT,QACpBvJ,EAASwnB,MAGTrZ,EAAS,SAIjB,GAAG,CAACnO,EAAUmO,EAAU7X,IAKxB,iCACI,8BAAI,WACH9D,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAChB/Q,IAIjB,gBAACwnB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAChV,YAAU,EAACtG,UAAU,WAAU,UACrD,iCACI,gCACI,8BAAI,OACJ,8BAAI,SACJ,8BAAI,SACJ,8BAAI,UACJ,8BAAI,SACJ,8BAAI,cACJ,6BAGR,iCACW,OAANvJ,QAAM,IAANA,OAAM,EAANA,EAAQ4O,KAAI,SAAAjQ,GAAK,eAEd,gCACI,8BAAKA,EAAMkQ,MACX,8BAAKlQ,EAAMzB,MAAQyB,EAAMzB,KAAKgS,YAC9B,8BAAoB,QAApB,EAAKvQ,EAAMshB,iBAAS,aAAf,EAAiBC,UAAU,EAAE,MAClC,gCAAI,MAAIvhB,EAAMwhB,cACd,8BAAKxhB,EAAMyhB,OACPzhB,EAAMyhB,OAGN,oBAAG7W,UAAU,eAAelB,MAAO,CAAE1B,MAAO,WAKhD,8BAAKhI,EAAMqlB,YACS,QADE,EAClBrlB,EAAM8uB,kBAAU,aAAhB,EAAkBvN,UAAU,EAAE,IAG9B,oBAAG3W,UAAU,eAAelB,MAAO,CAAE1B,MAAO,WAKhD,8BAAI,eAAC,iBAAa,CAACoG,GAAE,iBAAYpO,EAAMkQ,IAAG,KAAI,SAEtC,eAACxF,GAAA,EAAM,CAACC,QAAU,QAAQC,UAAU,MAAK,SAAC,kBAzB7C5K,EAAMkQ,IA+BV,WAUzC,ECtCe6e,OAvDf,WAEE,IAAM5nB,EAAW6B,cACX6Q,EAAO1N,aAAY,SAAAjS,GAAK,OAAIA,EAAMwL,WAAW,IAC3C9L,EAA6BigB,EAA7BjgB,MAAOD,EAAsBkgB,EAAtBlgB,QAASD,EAAamgB,EAAbngB,SAClBgU,EAAMvB,aAAY,SAAAjS,GAAK,OAAIA,EAAM4M,YAAY,IAEnD,GAD0E4G,EAAlE9T,MAAkE8T,EAAjD/T,QAAiD+T,EAA5B9S,WAClBkf,8BAAiB,oBAGvCkV,GAHO,KAAW,KACTxU,eAAP/d,GAESwM,gBAYjB,OAVE0D,qBAAU,WAENxF,EAASU,GAAmBmnB,EAAS90B,OAEzC,GAAG,CAACiN,EAAU6nB,EAAS90B,QAOvB,kCACM,EAEF,8BAAI,0BACFP,EAAU,eAAC,GAAM,IACRC,EAAQ,eAAC,GAAO,CAAC+Q,QAAQ,SAAQ,SAAE/Q,IAErC,+BACG,eAAC0P,GAAA,EAAS,CAACC,OAAK,WAChB,gBAACC,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAAC2Q,GAAI,EAAG/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,EAAE,SACrC,eAACzH,GAAA,EAAG,UACO,OAAR9P,QAAQ,IAARA,OAAQ,EAARA,EAAUuW,KAAI,SAAA7U,GAAO,OACtB,eAACqO,GAAA,EAAG,CAAmB2Q,GAAI,GAAI/K,GAAI,EAAGgL,GAAI,EAAGtE,GAAI,EAAG9E,GAAI,GAAIrG,UAAU,SAAQ,SAC1E,eAAC,GAAO,CAACxP,QAASA,KADZA,EAAQ8U,IAEZ,QAKV,eAACzG,GAAA,EAAG,UACA,eAAC,GAAM,CAACkL,SA1BP,SAAC7M,GAErB,eAiCP,E,8DClEMmnB,GAAW,SAAAzkB,GAEb,OAAO,sBAAKI,UAAW4B,KAAQ0iB,SAAUhiB,QAAS1C,EAAMie,SAC5D,EACM0G,GAAe,SAAA3kB,GACjB,OAAO,sBAAKI,UAAW4B,KAAQ4iB,MAAM,SACjC,sBAAKxkB,UAAW4B,KAAQ6iB,QAAQ,SAAE7kB,EAAMmM,YAEhD,EAEM2Y,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAACjlB,GAEX,OAAO,gBAAC,WAAQ,WACXklB,KAASC,aAAa,eAAC,GAAQ,CAAClH,QAASje,EAAMie,UAAqB6G,IACpEI,KAASC,aAAa,eAAC,GAAY,UAAEnlB,EAAMmM,WAA0B2Y,MAI9E,E,qBCDeM,GArBE,SAACplB,GAChB,IAAMqH,EAAK,cAAUrH,EAAMqH,OAE3B,OACE,sBAAIjH,UAAW4B,KAAQ,aAAa,UAClC,iCACE,8BAAKhC,EAAMhR,OACX,uBAAKoR,UAAW4B,KAAQqjB,QAAQ,UAC9B,uBAAMjlB,UAAW4B,KAAQqF,MAAM,SAAEA,IACjC,wBAAMjH,UAAW4B,KAAQiZ,OAAO,UAAC,KAAGjb,EAAM7N,aAG9C,uBAAKiO,UAAW4B,KAAQhS,QAAQ,UAC9B,yBAAQ0S,QAAS1C,EAAMslB,SAAU9c,SAAwB,IAAdxI,EAAM7N,IAAU,SAAC,WAC5D,yBAAQuQ,QAAS1C,EAAMulB,MAAM,SAAC,MAC9B,yBAAQ7iB,QAAS1C,EAAMoB,WAAW,SAAC,WAI3C,ECqDeokB,GAlEF,SAACxlB,GAEV,IAAM7E,EAAOwG,aAAY,SAACjS,GAAK,OAAKA,EAAMyL,IAAI,IACxC2P,EAAWvM,eAET9M,EAAc0J,EAAd1J,UAEFkL,EAAW6B,cAGXinB,GAFa/jB,OAEU,OAATjQ,QAAS,IAATA,OAAS,EAATA,EAAWoQ,QAAO,SAAC6jB,EAAOxzB,GAEtC,OAAOwzB,EAAQxzB,EAAKC,IAAMD,EAAKmV,KACnC,GAAG,IAEDse,GAAoB,OAATl0B,QAAS,IAATA,OAAS,EAATA,EAAW2Q,QAAQ,EAE9BwjB,EAAuB,SAAA3zB,GAEzB0K,ExD+BkB,SAAC1K,GACvB,OAAQ,SAAC0K,EAAUwK,GAEXxK,EAAS9J,EAAYF,oBAAoBV,IAEzCb,aAAa6P,QAAQ,YAAa3P,KAAK4P,UAAUiG,IAAWhM,KAAK1J,WAEzE,CACJ,CwDvCiB2P,CAAWnP,GACxB,EAEM4zB,EAAqB,SAAA5zB,GAEvB0K,ExDoCe,SAAC1K,GACpB,OAAQ,SAAC0K,EAAUwK,GAEXxK,EAAS9J,EAAYD,iBAAiBX,IAEtCb,aAAa6P,QAAQ,YAAa3P,KAAK4P,UAAUiG,IAAWhM,KAAK1J,WAEzE,CACJ,CwD5CiBq0B,CAAQ7zB,GACrB,EAUM8zB,EACN,qBAAI3lB,UAAW4B,KAAQ,cAAc,SACvB,OAATvQ,QAAS,IAATA,OAAS,EAATA,EAAWc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,IAAEsT,KAAI,SAAAjQ,GAAK,OACvC,eAAC,GAAQ,CACCxG,KAAMwG,EAAMxG,KACZmD,IAAKqD,EAAMrD,IACXkV,MAAO7R,EAAM6R,MAAMsM,QAAQ,GAC3B2R,SAAU,kBAAMM,EAAsBpwB,EAAMvD,GAAG,EAC/CszB,MAAO,kBAAMM,EAAmBrwB,EAAMvD,GAAG,EACzCmP,WAAY,kBAjBJnP,EAiB6BuD,EAAMvD,QAhB1D0K,EAAS4K,GAAetV,IADD,IAAAA,CAiBsC,GANzCuD,EAAMvD,GAQX,MAMnB,OAAO,gBAAC+zB,GAAS,CAAC/H,QAASje,EAAMie,QAAQ,UACpC8H,EACD,uBAAK3lB,UAAW4B,KAAQ0jB,MAAM,UAC1B,gCAAM,iBACN,kCAAM,OAAKD,EAAY9R,QAAQ,SAEnC,uBAAKvT,UAAW4B,KAAQhS,QAAQ,UAC5B,yBAAQoQ,UAAW4B,KAAQ,eAAgBU,QAAS,WAAQoI,GAAU,GAAI9K,EAAMie,SAAW,EAAE,SAAC,uBAC9F,yBAAQ7d,UAAW4B,KAAQ,eAAgBU,QAAS1C,EAAMie,QAAQ,SAAC,UAClE0H,GAAY,yBAAQvlB,UAAW4B,KAAQC,OAAQS,QA9BrC,WACfoI,EAAS,SACT9K,EAAMie,SACV,EA2B4E,SAAC,iCAGjF,E,oBCpEMwG,GAAW,SAAAzkB,GAEb,OAAO,sBAAKI,UAAW4B,KAAQ0iB,SAAUhiB,QAAS1C,EAAMie,SAC5D,EACM0G,GAAe,SAAA3kB,GACjB,OAAO,sBAAKI,UAAW4B,KAAQ4iB,MAAM,SACjC,sBAAKxkB,UAAW4B,KAAQ6iB,QAAQ,SAAE7kB,EAAMmM,YAEhD,EAEM2Y,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAACjlB,GAEX,OAAO,gBAAC,WAAQ,WACXklB,KAASC,aAAa,eAAC,GAAQ,CAAClH,QAASje,EAAMie,UAAqB6G,IACpEI,KAASC,aAAa,eAAC,GAAY,UAAEnlB,EAAMmM,WAA0B2Y,MAI9E,EC4CemB,GA/DD,SAACjmB,GAES2B,aAAY,SAACjS,GAAK,OAAKA,EAAM8F,KAAK,IAC9CA,MAASqkB,WAELlY,aAAY,SAACjS,GAAK,OAAKA,EAAM8F,KAAK,IACtCA,MANc,IAAD,IAQfiwB,EAAgC,QAArB,EAAGzlB,EAAM1C,MAAM2c,cAAM,aAAlB,EAAoBpY,QAAO,SAAC6jB,EAAOxzB,GAE/C,OAAOwzB,EAAQxzB,EAAKC,IAAMD,EAAKmV,KACnC,GAAG,GAIDue,EAAuB,SAAA3zB,GAEzB,EAGE4zB,EAAqB,SAAA3zB,GAEvB,EAIW8P,KAAQ,cAED,QAFe,EAEjChC,EAAM1C,MAAM2c,cAAM,OAAlB,EAAoBxU,KAAI,SAAAjQ,GAAK,OACxB,eAAC,GAAQ,CACCxG,KAAMwG,EAAMxG,KACZmD,IAAKqD,EAAMrD,IACXkV,MAAO7R,EAAM6R,MACbie,SAAUM,EAAsBM,KAAK,KAAM1wB,EAAMkQ,KACjD6f,MAAOM,EAAmBK,KAAK,KAAM1wB,IAL3B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOkQ,IAOZ,IAOnB,OAAO,gBAACygB,GAAU,CAAClI,QAASje,EAAMie,QAAQ,UAEtC,uBAAK7d,UAAW4B,KAAQ0jB,MAAM,UAC1B,gCAAM,mCACN,gCAAM,oCAAQ,OAAgB,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAa9R,QAAQ,WAE5C,uBAAKvT,UAAW4B,KAAQ0jB,MAAM,UAC1B,gCAAM,sBACN,gCAAM,kCAAS1lB,EAAM1C,MAAM0c,eAE/B,+BACI,6BAAG,6HAEP,sBAAK5Z,UAAW4B,KAAQhS,QAAQ,SAC5B,yBAAQoQ,UAAW4B,KAAQ,eAAgBU,QAAS1C,EAAMie,QAAQ,SAAC,cAI/E,ECjCemI,OA/Bf,WAOE,OALFnW,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,IACNC,SAAU,WAGV,iCACE,qBAAInR,MAAO,CAACuF,UAAU,OAAQjH,MAAM,SAAS,SAAC,yBAC5C,iCAAK,02BAMiF,wBAAS,wBAC/F,kCAAQ,sBAA0B,8GAGlC,qBAAI0B,MAAO,CAAE1B,MAAM,SAAS,SAAC,6BAAmB,spBASxD,ECNmB6oB,OAzBnB,WAOM,OALFpW,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,IACNC,SAAU,WAGV,iCACE,qBAAInR,MAAO,CAACuF,UAAU,QAAQ,SAAC,qBAC7B,iCACI,6BAAG,mEACH,6BAAG,mEACH,kCAAQ,2BAA0B,4PAClC,+BAAG,kCAAQ,uBAA2B,kPACtC,+BAAG,kCAAQ,6CAAuC,iNAClD,+BAAG,kCAAQ,kBAAsB,iEAA+C,oBAAGmC,KAAO,gCAA+B,SAAC,0BAAyB,QACnJ,+BAAG,kCAAQ,wBAA4B,qjBAA4e,wBACnhB,kCAAQ,sBAA0B,wHAK9C,EC0Be0f,OAhDnB,WAOM,OALFrW,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,IACNC,SAAU,WAGV,iCACE,qBAAInR,MAAO,CAAEuF,UAAU,QAAQ,SAAC,oCAC9B,iCACA,kCAAQ,iDAAqD,wBAAS,IAAC,wBAAS,6ZAIN,wBAAS,wBAInF,kCAAQ,2DAAqD,IAAC,wBAAS,IAAC,wBAAS,iYAI9D,wBAAS,IAAC,wBAE7B,kCAAQ,6BAAiC,wBAAS,IAAC,wBAAS,2TAG+E,wBAAS,IAAC,wBAIrJ,kCAAQ,kEAAiE,wBAAS,IAAC,wBAAS,4QAGD,wBAAS,IAAC,wBAErG,kCAAQ,kEAAiE,wBAAS,IAAC,wBAAS,qfASpG,EChBe8hB,OA7BnB,WAOM,OALFtW,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,IACNC,SAAU,WAGV,iCACE,qBAAInR,MAAO,CAAEuF,UAAU,QAAQ,SAAC,gBAC9B,iCAAK,6NAEkC,wBAAS,wBAEhD,kCAAQ,yEAAwE,wBAAS,wBAAS,8TAGQ,wBAAS,wBAAS,uXAIjF,wBAAS,wBAAS,8JAMrE,ECDe+hB,OA1BnB,WAOM,OALFvW,OAAOC,SAAS,CACZC,IAAK,IACLC,KAAM,IACNC,SAAU,WAGV,iCACE,qBAAInR,MAAO,CAAEuF,UAAU,QAAQ,SAAC,yBAC9B,iCAAK,yXAGiE,wBAAS,wBAAS,kUAGwB,wBAAS,wBAAS,0HAExE,wBAAS,wBAAS,0SAMpF,ECkFWgiB,OAzEf,WAEE,MAAsCpoB,oBAAS,GAAM,oBAA9CqoB,EAAW,KAAEC,EAAc,KAClC,EAAwCtoB,oBAAS,GAAM,oBAAhDuoB,EAAY,KAAEC,EAAe,KAEpC,EAA0BxoB,mBAAS,CAAC,GAAE,oBAA/Bf,EAAK,KAAEma,EAAQ,KAChBhW,EAAaC,OAmBnB,OACE,gBAAC,cAAM,WACHglB,GAAgB,eAAC,GAAI,CAACzI,QAfJ,WACtB0I,GAAe,EACjB,IAcMC,GAAiB,eAAC,GAAK,CAAC3I,QAPL,SAACjY,GACxB6gB,GAAgB,EAClB,EAKyDvpB,MAAOA,IAC3D,eAAC,GAAM,CAACgH,WArBW,WACtBqiB,GAAe,EACjB,IAoBI,gCAEE,sBAAKvmB,UAAU,kBAAkBlB,MAAQuC,EAAWiC,SAAW,CAAE8C,gBAAiB,OAAS/G,MAAM,OAAQ2E,OAAO,GAAK,CAAEoC,gBAAiB,OAAS/G,MAAM,OAAO,SAC5J,gBAAC,KAAM,WACL,eAAC,KAAK,CAACqnB,KAAK,IAAIC,QAAS,eAAC,GAAU,IAAKC,OAAK,IAC9C,eAAC,KAAK,CAACF,KAAK,uBAAuBC,QAAS,eAAC,GAAa,MAC1D,eAAC,KAAK,CAACD,KAAK,kBAAkBC,QAAS,eAAC,GAAc,MACtD,eAAC,KAAK,CAACD,KAAK,UAAUC,QAAS,eAAC,GAAY,MAC5C,gBAAC,KAAK,CAACD,KAAK,QAAO,UACjB,eAAC,KAAK,CAACA,KAAK,OAAOC,QAAS,eAAC,GAAU,MACvC,eAAC,KAAK,CAACD,KAAK,MAAMC,QAAS,eAAC,GAAU,MACtC,eAAC,KAAK,CAACD,KAAK,GAAGC,QAAS,eAAC,GAAU,SAErC,eAAC,KAAK,CAACD,KAAK,SAASC,QAAS,eAAC,GAAW,MAC1C,eAAC,KAAK,CAACD,KAAK,YAAYC,QAAS,eAAC,GAAc,MAChD,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,YAAYC,QAAS,eAAC,GAAc,MAChD,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,cAAcC,QAAS,eAAC,GAAgB,CAACjN,YAhCrC,SAAC9T,GACzByR,EAASzR,GACT6gB,GAAgB,EAClB,MA8BU,eAAC,KAAK,CAACC,KAAK,aAAaC,QAAS,eAAC,GAAW,MAC9C,eAAC,KAAK,CAACD,KAAK,kBAAkBC,QAAS,eAAC,GAAc,MACtD,eAAC,KAAK,CAACD,KAAK,qBAAqBC,QAAS,eAAC,GAAiB,MAC5D,eAAC,KAAK,CAACD,KAAK,uBAAuBC,QAAS,eAAC,GAAmB,MAChE,eAAC,KAAK,CAACD,KAAK,QAAQC,QAAS,eAAC,GAAU,MACxC,eAAC,KAAK,CAACD,KAAK,SAASC,QAAS,eAAC,GAAW,MAC1C,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,uBAAuBC,QAAS,eAAC,GAAc,MAC3D,eAAC,KAAK,CAACD,KAAK,0BAA0BC,QAAS,eAAC,GAAiB,MACjE,eAAC,KAAK,CAACD,KAAK,mBAAmBC,QAAS,eAAC,GAAe,MACxD,eAAC,KAAK,CAACD,KAAK,YAAYC,QAAS,eAAC,GAAmB,MACrD,eAAC,KAAK,CAACD,KAAK,eAAeC,QAAS,eAAC,GAAsB,MAC3D,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAkB,MACnD,eAAC,KAAK,CAACD,KAAK,eAAeC,QAAS,eAAC,GAAsB,MAC3D,eAAC,KAAK,CAACD,KAAK,cAAcC,QAAS,eAAC,GAAqB,aAK/D,eAAC,GAAM,MAGb,EC9FeE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECEaQ,IAASC,WAAW5C,SAASC,eAAe,SACpD4C,OACH,eAAC,IAAQ,CAAC5sB,MAASA,GAAM,SAErB,eAAC,GAAG,OAQVisB,I,qBCvBAr4B,EAAOC,QAAU,CAAC,SAAW,6BAA6B,MAAQ,0BAA0B,aAAa,+B","file":"static/js/main.98737d35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        success:false,\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: null,\r\n            loading: false,\r\n            success: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        productDetailsReset(state) {\r\n            \r\n           \r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n               \r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (pk=null, keyword = '', page='') => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            // const { data } = await axios.get(`/api/products/?pk=${pk}&keyword=${keyword}&page=${page}`)\r\n            // return data;\r\n            if(pk === null){\r\n                const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n                return data;\r\n            }else{\r\n                const { data } = await axios.get(`/api/products/categoryProducts/${pk}`)\r\n                return data;\r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        console.log('Fetch filtra:', val)\r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterGornjeProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {search: value}\r\n            \r\n        console.log('Fetch filtra gornje:', val)\r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filterGornja/`, val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { listFilterProducts, listFilterGornjeProducts } from '../store/product-actions'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ArrowRight } from 'react-bootstrap-icons';\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Keyword:', keyword)\r\n        dispatch(listFilterGornjeProducts(keyword))\r\n            //localStorage.setItem('keyword', keyword)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem('keyword', keyword)\r\n    // },[keyword])\r\n\r\n\r\n    const btnStyle = {\r\n        background: 'rgb(131, 183, 53)',\r\n        border:'2px solid rgb(131, 183, 53)'\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid >\r\n            <Row>\r\n                <Col style={{ padding:0}}>\r\n                    <Form.Control \r\n                        placeholder='Unesi pojam...'\r\n                        type='search'\r\n                        name='keyword'\r\n                        \r\n                       \r\n                        onChange={(e) => setKeyword(e.target.value) }\r\n                        style={{ border:'2px solid rgb(131, 183, 53)', width:'20rem'}}>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col style={{ padding:0}}>\r\n                    <OverlayTrigger\r\n                        placement=\"right\"\r\n                        delay={{ show: 250, hide: 400 }}\r\n                        overlay={renderTooltip}\r\n                        >\r\n                            <Button \r\n                                type='submit'\r\n                                variant='outline-success'\r\n                                className='p-1.8'\r\n                                style={btnStyle}>\r\n                                {/* <ArrowRight size={16}/> */}\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                                    <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                                </svg>\r\n                            </Button>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        //dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n    const screenType = useScreenType();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 400)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button  style={ screenType.isDesktop || screenType.isLargeDesktop ? { width:'16rem', height:'4rem'} : {width:'8rem', height:'4rem'}}  className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image'\r\nimport '../compontents/Header.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n  //const image = 'https://policplantblob.blob.core.windows.net/policplant-banner/veliki logo verzija 1.0-350x350.png'\r\n  const listKagetorija= useRef([])\r\n\r\n  const [cat, setCat] = useState(categories)\r\n\r\n  const dispatch = useDispatch();\r\n  const screenType = useScreenType();\r\n\r\n  useEffect(() => {\r\n \r\n    \r\n    //dispatch(listCategories())\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    localStorage.setItem('categories', JSON.stringify(categories))\r\n    listKagetorija.current = JSON.parse(localStorage.getItem('categories'))\r\n    setCat(listKagetorija.current)\r\n    \r\n  }, [categories]);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const info = [\r\n    // {\r\n    //   id:0,\r\n    //   value: 'Informacije',\r\n    //   src: 'a'\r\n    // },\r\n    { \r\n      id:1,\r\n      value: 'Poručivanje',\r\n      src: 'porucivanje'},\r\n    {\r\n      id:2,\r\n      value: 'Način plaćanja i isporuke ',\r\n      src: 'isporuke'\r\n    },\r\n    {\r\n      id:3,\r\n      value:'Najčešća pitanja ',\r\n      src: 'pitanja'\r\n    },\r\n    {\r\n      id:4,\r\n      value:'Reklamacije',\r\n      src: 'reklamacije'\r\n    },\r\n    {\r\n      id:5,\r\n      value:'Politika privatnosti',\r\n      src: 'privatnost'\r\n    }]\r\n\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      \r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        { screenType.isMobile ? \r\n              <Container  style={{ overflow:'hidden'}}>\r\n                  <Row>\r\n                    <Col>\r\n                      <LinkContainer to=\"/\">\r\n                        <Navbar.Brand >\r\n                          {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                          <Image fluid  src={image} loading=\"eager\" style={{ width:'16rem', height:'14rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                        </Navbar.Brand>\r\n                      </LinkContainer>\r\n                    </Col>\r\n                    {/* <Navbar.Text style={{ textAlign: 'center'}}>\r\n                        {<div>                     \r\n                          <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                            \r\n                          <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                        </div>}\r\n\r\n                    </Navbar.Text> */}\r\n                    \r\n                      {/* <SearchBox ></SearchBox> */}\r\n                    <Col>\r\n                      <Navbar.Text style={{ textAlign: 'center'}}>\r\n                      <LinkContainer to=\"/cart\" >\r\n                            <Nav.Link style={{ margin:'1rem'}}>\r\n                              <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                            </Nav.Link>\r\n                          </LinkContainer>\r\n                      </Navbar.Text>\r\n                      <Navbar.Text style={{ textAlign: 'center'}}>\r\n                        {<div>                     \r\n                          <div style={{fontSize: '1.2rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                            \r\n                          <div style={{color:'black',fontSize: '1.2rem'}}>0652077257</div>\r\n                        </div>}\r\n\r\n                    </Navbar.Text>\r\n                    </Col>\r\n                  </Row>\r\n              </Container> \r\n              :\r\n              <Container  style={{ overflow:'hidden'}}>\r\n              \r\n                <LinkContainer to=\"/\">\r\n                  <Navbar.Brand >\r\n                    {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                    <Image fluid  src={image} loading=\"eager\" style={{ width:'22rem', height:'22rem',marginTop: '+2rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                  </Navbar.Brand>\r\n                </LinkContainer>\r\n                \r\n                <Navbar.Text style={{ textAlign: 'center'}}>\r\n                    {<div>                     \r\n                      <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                        \r\n                      <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                    </div>}\r\n\r\n                </Navbar.Text>\r\n                \r\n                  <SearchBox ></SearchBox>\r\n\r\n                <Navbar.Text style={{ textAlign: 'center'}}>\r\n                <LinkContainer to=\"/cart\" >\r\n                      <Nav.Link style={{ margin:'1rem'}}>\r\n                        <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                </Navbar.Text>\r\n              </Container>}\r\n      </Navbar>\r\n      \r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row style={{width:'auto', display: 'flex'}}>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{width:'100%'}}>\r\n              \r\n              <Col md={{ span: 12, offset: 14 }}>\r\n                <Nav style={{width:'100%'}}>\r\n                    \r\n                    <div style={{fontSize: '1.4rem', paddingRight:'2rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {cat?.slice().sort((a, b) =>{return a.order - b.order}).map( (category) => (\r\n                              <LinkContainer to={`/categories/${category._id}`} key={category._id}>\r\n                                  <NavDropdown.Item  key={category._id}>\r\n                                      { category.name }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                    \r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block', paddingRight:'1rem'}}><FontAwesomeIcon icon={faInfo}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Info\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          \r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {info?.map( (i) => (\r\n                              <LinkContainer to={`/${i.src}/`} key={i.id}>\r\n                                  <NavDropdown.Item className='click'  key={i.id}>\r\n                                      { i.value }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                      <div style={{fontSize: '1.4rem',display: 'inline-block',paddingRight:'1rem'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem', paddingRight:'1rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    \r\n                    <LinkContainer to=\"/login\" style={{fontSize: '1.3rem', paddingRight:'1rem'}}>\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} style={{paddingRight:'.5rem'}} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                    \r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar> \r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport  {useEffect} from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\nimport Image from 'react-bootstrap/Image'\r\nimport WebFont from 'webfontloader';\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../compontents/Footer.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n\r\n  const screenType = useScreenType();\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Poppins', 'Chilanka']\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <hr></hr>\r\n            {/* <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                <GoogleMap location={location} zoomLevel={17} />  \r\n\r\n            </Row> */}\r\n            <Row>\r\n              <Col    style={{ }}>\r\n                <Image xs={6} src={image}\r\n                       \r\n                       fluid\r\n                       responsive='true'\r\n                       style={{width:'50%', height:'auto', objectFit:'fill'}}  >\r\n                       \r\n                </Image>\r\n                <div>\r\n                  Adresa: Prnjavorska 114, Budisava\r\n                </div>\r\n                <div>\r\n                  Telefon: 0652077257\r\n                </div>\r\n                <div>\r\n                  Email: <a href=\"mailto:rasadnikema@mail.com\">rasadnikema@gmail.com</a> \r\n                </div>\r\n                <div style={{padding:'.5rem'}}>\r\n                    \r\n                    <a href='https://www.facebook.com/rasadnikema ' style={{margin:'0.5rem' }} title=\"Face\">\r\n                            <i className=\"fa-brands fa-facebook fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Twitter\">\r\n                            <i class=\"fa-brands fa-twitter\"></i>\r\n                    </a> */}\r\n                    <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                            <i className=\"fa-brands fa-instagram fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Messenger\">\r\n                            <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                    </a>\r\n                    <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Mail\">\r\n                            <i class=\"fa-regular fa-envelope\"></i>\r\n                    </a> */}\r\n                </div>\r\n              </Col>\r\n              <Col    style={{margin:'3rem', paddingTop:'2rem' }}>\r\n                <h4 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif', marginBottom:'1.2rem'}}><strong>Korisni linkovi</strong></h4>\r\n                <Link to=\"/porucivanje\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Kako poručiti putem sajta</h5>\r\n                </Link>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Izrada plana sadnje</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Najčešća pitanja</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Način plaćanja</h5>\r\n                <Link to=\"/isporuka\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Isporuka</h5>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            \r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import {useEffect, useState, useRef} from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { useParams } from 'react-router';\r\nimport WebFont from 'webfontloader';\r\nimport '../compontents/Product.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport { IKImage, IKVideo, IKContext, IKUpload } from 'imagekitio-react'\r\nimport Overlay from 'react-bootstrap/Overlay';\r\n\r\nfunction Product({product, catId}) {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const screenType = useScreenType();\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const target = useRef(null);\r\n\r\n    const addToCartHandler = () => {\r\n        \r\n        dispatch(addToCart(Number(product._id), Number(1)));\r\n        setShow(!show)\r\n        setLoading(true)\r\n       // navigate(`/cart/?id=${product._id}&qty=${1}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n          google: {\r\n            families: ['Poppins', 'Chilanka']\r\n          }\r\n        });\r\n    }, [])\r\n\r\n  return (\r\n    <Card className={`my-1 p-1 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"success\" style={ screenType.isMobile ? {  height: '23.8rem' } : { width: '90%', height: '30rem' }}>\r\n        <Link to={`/products/${product._id}/${catId}`}> \r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} loading='lazy' style={screenType.isMobile ? { width: '100%', height: '24vh', objectFit: 'cover' } : { width: '100%', height: '32vh', objectFit: 'cover' }}></Card.Img>\r\n            <Card.ImgOverlay style={{width: '100%', height: '10rem' }}>\r\n                {product?.countInStock < 1 && <Card.Title><div style={ screenType.isMobile ? { backgroundColor:\"red\",fontSize:'.8rem', color:\"white\", width:'50%', display: 'inline-flex', padding: '4px', marginBottom: '1em'} : { backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '4px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n            <Card.ImgOverlay className=\"card-img-overlay d-flex align-items-end flex-column bd-highlight mb-3\" style={ screenType.isMobile ? {width: '100%', height: '12rem' } : {width: '100%', height: '14rem' }}>\r\n                {product?.prodajno_mesto && \r\n                    <Card.Img src='https://policplantblob.blob.core.windows.net/policplant-banner/samo_na_projadnom_mestu1.png' \r\n                              loading='lazy'\r\n                              style={{width: '40%', height: '50%' }}>\r\n                    </Card.Img>}\r\n            </Card.ImgOverlay> \r\n        </Link> \r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link style={{ textDecoration: 'none' }} to={`/products/${product._id}`}> \r\n             <Card.Title as=\"h3\" >\r\n                 <div className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>{product?.name}</div>\r\n                 <div className='click' style={{ fontSize: '.9rem', fontStyle: 'italic', color:'#333333', fontFamily: 'Poppins'}}>{product?.botanicki_naziv}</div>\r\n             </Card.Title>\r\n             </Link> \r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h5\" style={{ color:'#83b735', fontSize: '1rem'}}>\r\n                    {product.price} RSD\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h6\"> */}\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            {/* </Card.Text> */}\r\n            <Button     variant=\"primary\" \r\n                        disabled={product.countInStock < 1} \r\n                        type='button'\r\n                        style={screenType.isMobile ? {background:'#83b735', width:'80%', height:'35%', border:'1px solid #83b735'} : {background:'#83b735', width:'70%', height:'36%', border:'1px solid #83b735'}}\r\n                        onClick= {addToCartHandler}\r\n                        ref={target}>\r\n                               { !isLoading ? 'Dodaj u Korpu' : 'Dodato u korpu'}\r\n            </Button>\r\n            <Overlay target={target.current} show={show} placement=\"right\">\r\n                {({\r\n                placement: _placement,\r\n                arrowProps: _arrowProps,\r\n                show: _show,\r\n                popper: _popper,\r\n                hasDoneInitialMeasure: _hasDoneInitialMeasure,\r\n                ...props\r\n                }) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                    position: 'absolute',\r\n                    backgroundColor: 'green',\r\n                    padding: '2px 10px',\r\n                    color: 'white',\r\n                    borderRadius: 3,\r\n                    ...props.style,\r\n                    }}\r\n                >\r\n                    Biljka dodata u korpu...\r\n                </div>\r\n                )}\r\n            </Overlay>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction Kategorija({category}) {\r\n\r\n  const screenType = useScreenType();\r\n  return (\r\n    <Card className={`my-1 p-1   ${classes[\"img/-hover-zoom\"]} h-110 `} border=\"success\"  style={ screenType.isMobile ? { width: '100%', height: '19rem' } : { width: '100%', height: '22rem' }}>\r\n        <Card.Header as=\"h6\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image} loading='lazy' style={screenType.isMobile ? { width: '100%', height: '24vh', objectFit: 'cover' } : { width: '100%', height: '26vh', objectFit: 'cover' }}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\", textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block', textAlign: \"center\", fontSize: '1.2rem', color:'#333333'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        placeholder='Izaberi...'\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch, forToogle}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories, categories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    \r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        \r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n        \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 500);\r\n    const initialRender = useRef(true)\r\n\r\n    useEffect(()=>{\r\n       \r\n        if(!initialRender.current || (boja.length > 0 || high.length > 0 || tip.length > 0 || kategorija.length > 0 || pozicija.length > 0 || pretraga || keyword)){\r\n            dispatch(listFilterProducts(debouncedSearchTerm))\r\n            \r\n            forToogle(memoizedValue)\r\n        }\r\n        initialRender.current =false\r\n        onSearch(debouncedSearchTerm)\r\n        \r\n         \r\n    }, [dispatch, debouncedSearchTerm]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid style={{display: 'flex', padding: '0.2rem'}}>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex', textAlign:'left' , justifyContent:'left' , width:'100%' }}>\r\n                \r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <h6><strong style={{color:'#333333'}}>Kategorija biljke</strong></h6>\r\n                        <CustomSelect  values={ categories?.slice().sort((a, b) =>{return a.order - b.order}).map(col => (\r\n                            { value: col.name, label: col.name}\r\n                            ))} onAction={setKategorija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n\r\n                    <h6><strong style={{color:'#333333'}}>Tip biljke</strong></h6>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setTip}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                \r\n                    <h6><strong style={{color:'#333333'}}>Pozicija za sadnju</strong></h6>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setPozicija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{}}>\r\n                    \r\n                    \r\n                    <h6><strong style={{color:'#333333'}}>Boja cveta</strong></h6>\r\n                        <Form.Control \r\n                            type='search'\r\n                            name='boja'\r\n                            inline ='true'\r\n                            placeholder='Unesite boju...'\r\n                            onChange={(e) => setBoja(e.target.value) }>\r\n                        </Form.Control>\r\n                   \r\n                </Row>\r\n                {/* style={{ display: 'flex', padding:'0.5rem', width: '100%'}} */}\r\n                {/* <Row md={12} xl={12} style={{ }}> \r\n                        \r\n                        <h6><strong style={{color:'#333333'}}>Pretraga Proizvoda:</strong></h6>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Trazeni proizvod...'\r\n                                onChange={(e) => setPretraga(e.target.value) }>\r\n                            </Form.Control>     \r\n                </Row> */}\r\n\r\n                {/* <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row> */}\r\n            \r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     variant=\"success\"\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch, forToogle}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn style={{background:'green', border:'1px solid green'}} onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle style={{color:'green'}}>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch} forToogle={ forToogle }></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import Carousel from 'react-bootstrap/Carousel';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CarouselFadeExample() {\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n  return (\r\n    <Carousel fade>\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselFadeExample;","import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport ImageButton from 'react-image-button';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 2 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n  };\r\n\r\nfunction MultiCaroseul(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const image1 = <Image\r\n            className='img-fluid shadow-5'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/biljke za senku baner_800x600.jpg\"\r\n            alt=\"First slide\"\r\n            rounded\r\n            onClick={() => { navigate('/categories/37')}}\r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image2 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/trajnice baner_800x600.jpg\"\r\n            alt=\"Second slide\"\r\n            rounded\r\n            onClick={() => { navigate('/categories/28')}}\r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image3 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/ukrasno zbunje baner_800x600.jpg\"\r\n            alt=\"Third slide\"\r\n            rounded\r\n            onClick={() => { navigate('/categories/31')}}\r\n            style={{ height:'50%'}}\r\n            />\r\n    return (\r\n        <Carousel\r\n            swipeable={false}\r\n            draggable={false}\r\n            showDots={true}\r\n            responsive={responsive}\r\n            ssr={true} // means to render carousel on server-side.\r\n            infinite={true}\r\n            //autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\r\n            autoPlaySpeed={1000}\r\n            keyBoardControl={true}\r\n            customTransition=\"all .5\"\r\n            transitionDuration={500}\r\n            containerClass=\"carousel-container\"\r\n            removeArrowOnDeviceType={[\"tablet\"]} //, \"mobile\"]}\r\n            //deviceType={this.props.deviceType}\r\n            dotListClass=\"custom-dot-list-style\"\r\n            itemClass=\"carousel-item-padding-40-px\"\r\n            >\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image1}\r\n                             //zoomOnHover={0}\r\n                             buttonPosition=\"bottom\"\r\n                             alwaysShowButton={true} >\r\n                    <button onClick={() => { navigate('/categories/37')}} primary=\"true\"  className=\"btn success\" style={{ border: '2px solid black',cursor:'pointer', backgroundColor:'white'}} > Za vaš kutak u senci </button>\r\n                </ImageButton>\r\n            </div>\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image2}\r\n                             //zoomOnHover={0}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button onClick={() => { navigate('/categories/28')}} primary=\"true\" className=\"btn success\" style={{ border: '2px solid black',cursor:'pointer', backgroundColor:'white'}} > Veliki izbor trajnica </button>\r\n                </ImageButton>\r\n            </div> \r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image3}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button onClick={() => { navigate('/categories/31')}} primary=\"true\" className=\"btn success\" style={{ border: '2px solid black',cursor:'pointer', backgroundColor:'white'}} >  Neizostavni deo vrta </button>\r\n                </ImageButton>\r\n            </div> \r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default MultiCaroseul\r\n","import React, { useEffect , useState, useRef, useMemo} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport CarouselFadeExample from '../compontents/StaticCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sliderClasses } from '@mui/material'\r\nimport { SimpleCarouselSlider } from 'react-simple-carousel-image-slider'\r\nimport Carousel from 'flat-carousel';\r\nimport MultiCaroseul from '../compontents/MultiCaroseul'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error:  categoryError, loading: categoryLoading, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error:  productError , loading: productLoading , products, success } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(true);\r\n  const isFirst = useRef(true);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch]);\r\n\r\n  // useEffect(()=>{\r\n  //   // console.log('Ulazka:')\r\n  //   // if(!customerLogo.current || products?.length < 60 ){\r\n  //   //   console.log('Unutra:', products)\r\n  //   //   if(products?.length < 60){\r\n  //   //     console.log('Toggle:', toggle)\r\n  //   //     setToggle(false)\r\n  //   //     if(screenType.isMobile){\r\n  //   //       if(products?.length === 0){\r\n           \r\n  //   //         setToggle(true)\r\n  //   //       }\r\n  //   //     }\r\n  //   //   }else{\r\n  //   //     setToggle(true)\r\n  //   //   }\r\n      \r\n      \r\n  //   //   customerLogo.current = false \r\n  //   // }    \r\n  //   console.log('Prazno')\r\n  // }, []);\r\n  \r\n  const searchFunc = useMemo(() => {\r\n    const setSearchValue = (value) => {\r\n     \r\n      if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== '' || !(value.keyword === '' || value.keyword === null)){\r\n       setToggle(false)\r\n       setCarucel(false)\r\n       \r\n     } else{\r\n       setToggle(true)\r\n       setCarucel(true)\r\n      \r\n     }\r\n     \r\n   }\r\n   return setSearchValue\r\n  }, [])\r\n\r\n  const forToogle = (val) => {\r\n    console.log('Mozda ovo', val)\r\n    if(val?.keyword){\r\n      setToggle(true)\r\n      console.log('Rerender', val)\r\n    }\r\n  }\r\n//  const setSearchValue = (value) => {\r\n//     //setVal(value)\r\n//     if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== '' || value.keyword !== ''){\r\n//      setToggle(false)\r\n//      setCarucel(false)\r\n//    } else{\r\n//      setToggle(true)\r\n//      setCarucel(true)\r\n//    }\r\n//    console.log('Mozda ovo', value)\r\n//  }\r\n \r\n  const orderCategories = categories?.slice().sort((a, b) =>{return a.order - b.order})\r\n  \r\n\r\n  return (\r\n    <div style={ screenType.isMobile ? { backgroundColor: '#FFF' , margin:0} : { }}>\r\n        {/* { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}   */}\r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        {/* { carucel && <CarouselFadeExample></CarouselFadeExample>}  */}\r\n        {/* { carucel && <SimpleCarouselSlider images={slike} autoplay={false} width= \"100%\" height=\"450px\"/>} */}\r\n        {/* {  carucel && <DragCoruseal></DragCoruseal>} */}\r\n        { carucel && <MultiCaroseul></MultiCaroseul>}\r\n\r\n        <div style={{ textAlign:'center', margin:'1rem'}}><h1 style={{color:'red', alignItems:'center', fontSize:'2.5rem'}}> <strong>{ 'Sajt je u Pripremi!'}</strong></h1></div>\r\n        <h1 style={{color:'#333333', fontSize:'1.2rem'}}> <strong>{carucel ? 'Detaljna pretraga:' : 'Filtrirani Proizvodi:'}</strong></h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ searchFunc} forToogle={ forToogle}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid > \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <div style={{ border:'.2rem solid #83B735', paddingBottom:'1rem', paddingLeft:'1rem'}}>\r\n                            <Search onSearch={ searchFunc} forToogle={forToogle}></Search> \r\n                          </div>\r\n                      </Col> }\r\n\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { !(products?.length > 0 && products?.length < 60)  ? ( \r\n                          screenType.isMobile ? \r\n                          \r\n                        (<Row  >\r\n                          {orderCategories?.map(category => (\r\n                          <Col  key={category._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex my-1 p-1\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)\r\n                        : \r\n                        (\r\n                          <Row  className={'gy-2'}>\r\n                          {orderCategories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex \">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                        )) \r\n                        :\r\n                        ( screenType.isMobile ? \r\n                        \r\n                            <Row>\r\n                              {products?.map(product => (\r\n                              <Col key={product._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                  <Product product={product} />\r\n                              </Col>\r\n                                ))} \r\n                                {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                            </Row> \r\n                          :\r\n                            <Row>\r\n                            {products?.map(product => (\r\n                            <Col key={product._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                <Product product={product} />\r\n                            </Col>\r\n                              ))} \r\n                              {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                            </Row>) \r\n                        }\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from 'dompurify';\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n  const screenType = useScreenType();\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n      })\r\n    dispatch(listProducts(id))\r\n        \r\n }, [dispatch, id]);\r\n\r\n const htmlString = {__html: DOMPurify.sanitize(catProducts?.find( cat => cat._id?.toString() === id)?.description)}\r\n \r\n const bordureImages = ['https://policplantblob.blob.core.windows.net/policplant-banner/Bordura1.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura2.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura3.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura4.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura5.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura6.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura7.png']\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb style={{ paddingTop:'1.7rem'}}>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success  my-3'> Nazad</Link>\r\n        <h1 style={{color:'#333333'}}>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        \r\n        {/* <p>{ catProducts?.find( cat => cat._id?.toString() === id)?.description}</p> */}\r\n        <p dangerouslySetInnerHTML={htmlString}></p>\r\n        <div >\r\n          <img alt='Bordura' style={screenType.isMobile ? {maxWidth:'95%', margin:'.5rem'} : { margin:'.5rem'}}  src={bordureImages[(Math.random() * bordureImages.length) | 0]} ></img>\r\n          \r\n        </div>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} catId={id} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container, ListGroupItem, InputGroup} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\nimport XMLToReact from 'xml-to-react';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Ikonice from '../compontents/UI/Ikonice';\r\nimport {  Plus, Dash } from 'react-bootstrap-icons';\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id, catId } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n  const screenType = useScreenType();\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const [images, setImages] = useState(null)\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n            dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      \r\n      //navigate(`/cart/?id=${id}&qty=${qty}`)\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n  }\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if(product?.images){\r\n        const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n        const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n            return {\r\n                image: image?.image,\r\n                id: image?.id\r\n            }\r\n        })\r\n\r\n        const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n        if(prvaSlika){\r\n            targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id})\r\n        }\r\n\r\n        const imgs = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n            return {\r\n                original: image.image,\r\n                thumbnail: image.image\r\n            }\r\n        })\r\n        setImages(imgs)\r\n    }\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [product?.images])  \r\n\r\n const htmlString = {__html: DOMPurify.sanitize(product?.description)}\r\n\r\n  const incrementHandle = (e) => {\r\n    \r\n        setQty(e => e + 1)\r\n  }\r\n\r\n  const decrementHandle = (e) => {\r\n        if(qty > 1){\r\n            \r\n            setQty(e => e - 1)\r\n        }\r\n        \r\n  }\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb style={{ paddingTop:'1.8rem', textDecoration: 'none'}}>\r\n          <Breadcrumb.Item href=\"/#/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  style={{ textDecoration:'none !important', textDecorationLine: 'none !important'}} href={`#/categories/${catId}`}>\r\n                \r\n            <font style={{color:'green' , textDecoration: 'none', textDecorationLine: 'none'}}>{product?.category?.find(x => x._id.toString() === catId)?.name}</font> \r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            {product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success my-3'> Nazad</Link>\r\n        {userInfo && <Link to={`/admin/product/${id}/edit`} className='btn btn-success my-3' style={{ marginLeft:'3rem'}}> Edit Biljke</Link>}\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={12} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={12}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ color:'#333333', fontSize:'2.6rem', fontFamily: 'Oswald, sans-serif'}}>{product?.name}</strong> <i style={{fontSize:'1.4rem' , color:'#333333'}}>{product?.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product?.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product?.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product?.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product?.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {/* {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>} */}\r\n                                        {product?.mesto_sadnje?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {Array.isArray(product?.mesto_sadnje) ? product?.mesto_sadnje?.join(', ') : product?.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product?.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product?.vre_cve) ? product?.vre_cve?.join(', ') : product?.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product?.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product?.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.type_of_plant && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product?.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.privlaci_insekte && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product?.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.brzina_rasta && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product?.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.prezimljava && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product?.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.sirina_biljke && <ListGroup.Item>\r\n                                            <strong> Širina:</strong> {product?.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.velicina_slanja && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product?.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item style={{paddingBottom:'2rem'}}>\r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <br />\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {/* {product?.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product?.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )} */}\r\n\r\n                                                            {product?.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                   { screenType.isMobile ? <Row>\r\n                                                                        <Col xs={4}>Količina:</Col>\r\n                                                                        <Col xs={8} className=\"justify-content-md-right\">\r\n                                                                            <Row  xs={12}>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <Button variant=\"light\" \r\n                                                                                            onClick={decrementHandle}> \r\n                                                                                        <Dash color=\"red\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <InputGroup style={{width:'3rem'}}>\r\n                                                                                        <Form.Control \r\n                                                                                            onChange={(e) => setQty(Number(e.target.value))}\r\n                                                                                            value={qty} \r\n                                                                                            sm={2}\r\n                                                                                        >\r\n                                                                                                \r\n\r\n                                                                                        </Form.Control>\r\n                                                                                    </InputGroup>\r\n                                                                                </Col>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <Button variant=\"light\"\r\n                                                                                            onClick={incrementHandle}> \r\n                                                                                        <Plus color=\"green\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row> \r\n                                                                    :\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col className=\"justify-content-md-right\">\r\n                                                                            <Row  sm={12}>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <Button variant=\"light\" \r\n                                                                                            onClick={decrementHandle}> \r\n                                                                                        <Dash color=\"red\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <InputGroup style={{width:'3.8rem'}}>\r\n                                                                                        <Form.Control \r\n                                                                                            onChange={(e) => setQty(Number(e.target.value))}\r\n                                                                                            value={qty} \r\n                                                                                            sm={2}\r\n                                                                                        >\r\n                                                                                                \r\n\r\n                                                                                        </Form.Control>\r\n                                                                                    </InputGroup>\r\n                                                                                </Col>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <Button variant=\"light\"\r\n                                                                                            onClick={incrementHandle}> \r\n                                                                                        <Plus color=\"green\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row>}  \r\n                                                                </ListGroup.Item>\r\n                                                            )} \r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                   \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1}\r\n                                                                    onClick={() => window.open('#/cart',\"_self\")}>\r\n                                                                        Poruči\r\n                                                                </Button>\r\n                                                            </ListGroup.Item> */}\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                        {/* <ListGroupItem xs={12} style={{paddingTop:'2rem'}}>\r\n                                            {product && <Ikonice product={product}></Ikonice>}\r\n                                        </ListGroupItem> */}\r\n                                    </ListGroup>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <div style={{margin:'0.5rem'}}>\r\n                                        Share:\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Face\">\r\n                                                <i className=\"fa-brands fa-facebook\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Twitter\">\r\n                                                <i className=\"fa-brands fa-twitter\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                                                <i className=\"fa-brands fa-instagram\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Messenger\">\r\n                                                <i className=\"fa-brands fa-facebook-messenger\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Mail\">\r\n                                                <i className=\"fa-regular fa-envelope\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    \r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                {/* <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup> */}\r\n                                {/* {product?.description && description} */}\r\n                                {/* <Container child={ doc}/> \r\n                                {doc} */}\r\n                                <p dangerouslySetInnerHTML={htmlString}></p>\r\n                                \r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport {  Plus, Dash } from 'react-bootstrap-icons';\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n  //const [qty, setQty] = useState(1);\r\n\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const screenType = useScreenType();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  \r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={8} xs={12}>\r\n        <h1 style={{color:'green'}}>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"success\">\r\n            <strong>Vasa korpa je prazna</strong> <Link to=\"/\" style={{color:'green'}}>Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={1} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={4} md={3} lg={4} xl={4} xs={3}>\r\n                    <Link style={{ textDecoration:'none'}} to={`/products/${item.id}`}><strong><h4 style={{color:'green', fontSize:'1.2rem', textDecoration:'none'}}>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={3}><strong style={ screenType.isMobile ? {fontSize:'.8rem'} : {fontSize:'1rem'}}>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={4} md={6} lg={4} xl={1} xs={2}>\r\n                    {/* <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control> */}\r\n                    <Form.Control\r\n                      disabled\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                     \r\n                      \r\n                    </Form.Control>\r\n                    {/* <Col className=\"justify-content-md-right\">\r\n                      <Row  sm={12}>\r\n                          <Col sm={4}>\r\n                              <Button variant=\"light\" \r\n                                      onClick={decrementHandle}> \r\n                                  <Dash color=\"red\" size={16} />\r\n                              </Button>\r\n                          </Col>\r\n                          <Col sm={4}>\r\n                              <InputGroup >\r\n                                  <Form.Control \r\n                                      onChange={(e) => setQty(Number(e.target.value))}\r\n                                      value={qty} \r\n                                      sm={2}\r\n                                  >\r\n                                          \r\n\r\n                                  </Form.Control>\r\n                              </InputGroup>\r\n                          </Col>\r\n                          <Col sm={4}>\r\n                              <Button variant=\"light\"\r\n                                      onClick={incrementHandle}> \r\n                                  <Plus color=\"green\" size={16} />\r\n                              </Button>\r\n                          </Col>\r\n                      </Row>\r\n                    </Col> */}\r\n                  </Col>\r\n                  <Col sm={4}  md={1} lg={2} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n        <Card border=\"success\"style={{margin:'1rem'}}>\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio color=\"success\"/>} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio color=\"success\"/>} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio color=\"success\"/>} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio color=\"success\"/>} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block btn-success'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block btn-success'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link >\r\n                            <strong style={{color:'green'}}>Login</strong>  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                        <strong style={{color:'green'}}>Adresa</strong>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        <strong style={{color:'green'}}>Narudzba</strong>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider', textDocorationColor:'green' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab style={{color:'green'}} label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: \"Potebno je uneti Vas email\",  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"Mail koji ste uneli nije validan.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            \r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\",{\r\n                                required:\"Unesite broj Vaseg mobilnog telefona\",\r\n                                valueAsNumber: {\r\n                                    value: true,\r\n                                    message: \"Unesite ispravan broj mobilnog telefona\"},\r\n                                message:\"Unesite Vas broj mobilnog telefona.\"\r\n                            })}\r\n                            \r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary' className='m-2 py-2 btn-success'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n           \r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link as='div' style={{color:'green'}} to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"success\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2 style={{color:'green'}}>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n           \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.user_name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img, itms) => {\r\n\r\n            const items = itms\r\n            const files = img //e.target.files\r\n            const formData = new FormData()\r\n            if(items){\r\n                formData.append('items', JSON.stringify(items))\r\n            }\r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n           \r\n            \r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images, items)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\nexport const changeStanjeValue = (id, value) => {\r\n    return async (dispatch) => {\r\n\r\n        const formData = new FormData()\r\n        formData.append('product_id', id)\r\n        formData.append('value', value)\r\n        const { data } = await axios.post('/api/products/changestate/', formData)\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState,useRef,  useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct,changeStanjeValue, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBInput } from 'mdb-react-ui-kit'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [val, setVal] = useState(null)\r\n    const order_set = useRef(0)\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n    useEffect(() => {\r\n\r\n        setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n\r\n    }, [products])\r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this product?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const changingValueHandler = async (id, value) => {\r\n        dispatch(changeStanjeValue(id, value))\r\n    }\r\n\r\n    const values = products?.slice().sort((a,b) => a._id - b._id)\r\n\r\n    const filter = (sort) => {\r\n        \r\n        switch(sort) {\r\n            case 'id':\r\n                \r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a._id - b._id))\r\n                    order_set.current = !order_set.current\r\n                }\r\n              \r\n              break;\r\n            case 'name':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.name - b.name))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.name - b.name))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                \r\n              break;\r\n            case 'cena':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.price - b.price))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.price - b.price))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                break;\r\n            case 'stanje':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.countInStock - b.countInStock))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.countInStock - b.countInStock))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                break;\r\n                \r\n            default:\r\n                setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n          }\r\n\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col >\r\n                <h1 style={{color:'green'}}>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='btn-success my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>RB</th>\r\n                                    <th onClick={() => filter('id')}>ID</th>\r\n                                    <th onClick={() => filter('name')}>Name</th>\r\n                                    <th onClick={() => filter('cena')}>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Novo</th>\r\n                                    <th>Popust</th>\r\n                                    <th>Boja</th>\r\n                                    <th onClick={() => filter('stanje')}>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {(val ? val : values)?.map((product, index) => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td style={{width:'4rem'}}>{index + 1}</td>\r\n                                        <td style={{width:'4rem'}}>{product._id}</td>\r\n                                        <td style={{width:'15rem'}}><strong>{product.name}</strong></td>\r\n                                        <td style={{width:'5rem'}}>{product.price} din</td>\r\n                                        <td style={{width:'20rem'}}>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td style={{width:'4rem'}}>{product.novo ?? product.novo ? 'Yes' : 'No'}</td>\r\n                                        <td style={{width:'4rem'}}>{product.popust ?? product.popust ? product.popust : 'No'}</td>\r\n                                        <td style={{width:'20rem'}}>{product.color}</td>\r\n                                        <td style={{ width:'6rem'}}>\r\n                                            {\r\n                                                <MDBInput  id='form1' type='text' defaultValue={product.countInStock} onChange={(e ) => changingValueHandler(product._id, e.target.value)} />\r\n                                                \r\n                                            }</td>\r\n                                        <td style={{width:'5rem'}}><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td style={{width:'5rem'}}>\r\n                                                <Button  className='btn-sm' variant=\"danger\" onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n\r\n  const bordureImages = ['https://policplantblob.blob.core.windows.net/policplant-banner/Bordura1.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura2.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura3.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura4.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura5.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura6.png',\r\n                        'https://policplantblob.blob.core.windows.net/policplant-banner/Bordura7.png']\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div style={{ padding:'1rem', maxWidth:'100%'}}>\r\n          <img alt='Bordura' style={{ maxWidth:'100%'}}  src={bordureImages[(Math.random() * bordureImages.length) | 0]}></img>\r\n      </div>\r\n      <div>\r\n      Rasadnik Ema je registrovano poljoprivredno gazdinstvo koje se bavi proizvodnjom i prodajom ukrasnih baštenskih sadnica. U ponudi imamo sadnice perena, \r\n      ukrasnog žbunja, trava, seduma, čuvarkuća, bobičastog voća, četinara i lišćara. Verujemo da ćete u našoj ponudi naći biljke koje će se savršeno uklopiti u Vaš vrt.<br></br><br></br> \r\n\r\n      Dobro došli! \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","\r\nimport { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, InfoWindow, Marker  } from 'google-maps-react';\r\n\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '75%'\r\n};\r\n\r\nexport class MapContainer extends Component {\r\n\r\n    state = {\r\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n        activeMarker: {},          // Shows the active marker upon click\r\n        selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n      };\r\n\r\n      onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true\r\n    });\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Map\r\n        google={this.props.google}\r\n        zoom={15}\r\n        style={mapStyles}\r\n        initialCenter={\r\n          {\r\n            lat: 45.275650414755965, \r\n            lng: 19.994068562233736\r\n          }\r\n        }\r\n      >\r\n       <Marker\r\n          onClick={this.onMarkerClick}\r\n          name={'Rasadnik Ema'}\r\n        />\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div>\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n          </div>\r\n        </InfoWindow>\r\n      </Map>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAC95KmBynfBYg_TjE61h1r7ELRN2V6mgA'\r\n})(MapContainer);","import  GoogleApiWrapper from '../compontents/UI/GoogleApiWrapper';\r\n\r\nfunction KontakScreen() {\r\n  \r\n  return (\r\n    <div>\r\n      <h3 style={{marginTop:'1rem', color:'green'}}>Kontaktirajte nas</h3>\r\n      <div>\r\n        <h4 style={{ color:'green', marginLeft:'1rem'}}>Nasa lokacija</h4>\r\n        <div style={{ marginBottom:'2rem', padding:'1rem'}}>\r\n          <GoogleApiWrapper></GoogleApiWrapper>\r\n        </div>\r\n        {/* <div>\r\n          Rasadnk Ema Budisava, Vojvodina, Srbija\r\n          Prnjavorska 114\r\n          21242 Budisava, Novi Sad, Vojvodina, Srbija\r\n        </div> */}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    \r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                \r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                \r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images, itms) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const items = itms?.map((item, index) => {\r\n                return {...item, order: index}\r\n            })\r\n            const formData = new FormData()\r\n            \r\n            // if(images[0] instanceof File ){\r\n                \r\n            //     const arr = Array.from(files)\r\n            //     arr?.forEach(x => \r\n            //         formData.append('images', x)\r\n            //     )\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }else{\r\n                \r\n            //     const arr = Array.from(files?.map(x => x.id))\r\n                \r\n            //     formData.append('images', arr)\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }\r\n            console.log('Items',items)\r\n            console.log('Images', files)\r\n            \r\n            \r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n            \r\n            formData.append('product_id', product_id)\r\n            formData.append('items', JSON.stringify(items))\r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images, items)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    \r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      onDoubleClick={()=> console.log('Double click')}\r\n      alt=\"img\"/>\r\n   \r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef, useMemo  } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\ntoast.configure()\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n    const [items, setItems] = useState([]);\r\n    const [flick, setFlick] = useState(false);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    const prod = useSelector(state => state.product)\r\n    const { product: prodProduct,  success : prodSuccess} = prod\r\n\r\n    const ukupno = useRef([])\r\n\r\n    const SortablePhoto = SortableElement(item => <Photo {...item} />);\r\n    const SortableGallery = SortableContainer(({ items }) => (\r\n            <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n        \r\n        ));\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        const newItems = items?.map(image => {\r\n            return {\r\n                src:image.src,\r\n                name: image.name,\r\n                width:1,\r\n                height:1\r\n            }\r\n        })\r\n        \r\n        setItems([...newItems, ...photos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(success){\r\n            const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n            const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n                return {\r\n                    name: image.image_name,\r\n                    image: image?.image,\r\n                    id: image?.id\r\n                }\r\n            })\r\n\r\n            \r\n            const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n            if(prvaSlika){\r\n                targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id, name: prvaSlika?.image_name})\r\n            }\r\n\r\n            const photos = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n                return {\r\n                    name: image.name,\r\n                    src:image.image,\r\n                    id:image.id,\r\n                    width:1,\r\n                    height:1\r\n                }\r\n            })\r\n            \r\n            setImage(null)\r\n            setItems(photos) \r\n        }   \r\n    }, [success,product?.name, product?.images])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n\r\n        \r\n        if(success){\r\n            \r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n            setProdajnoMesto(product.prodajno_mesto)\r\n            setNovo(product.novo)\r\n            setPopust(product.popust)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, product?.name, success, prodSuccess])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust\r\n        }, images, items))\r\n        setItems(ukupno.current)\r\n        // setImage(ukupno.current.map((index,item) => {\r\n        //     return {\r\n        //         id:item.id,\r\n        //         image:item.src,\r\n        //         order: index,\r\n        //         product:id\r\n        //     }\r\n        // }))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n        notify()\r\n        setImage([])\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_mesto_sadnje = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data_mesto_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n  \r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex},e) => {\r\n\r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        // setImage(arrayMoveImmutable(Array.from(items?.map((item, index) => {\r\n        //     return {\r\n        //         id: item.id,\r\n        //         image: item.src,\r\n        //         order:index,\r\n        //         product: id\r\n        //     }\r\n        // })), oldIndex, newIndex));\r\n    };\r\n\r\n    const memoizedImageCard = useMemo(() => {\r\n        return (\r\n            <Row>\r\n                <SortableGallery items={items}   onSortEnd={onSortEnd} axis={\"xy\"} />\r\n            </Row>\r\n        )\r\n    },[items]);\r\n\r\n    return (\r\n        <div className=\"ProductEditScreen\"\r\n           >\r\n        <Link to={-1} className='btn btn-success  my-3'> \r\n            Nazad\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1 style={{color:'green'}}>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='id'>\r\n                                <Form.Label><strong>ID</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={id}\r\n                                    disabled\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto'>\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='prodaja'\r\n                                    defaultChecked={prodajno_mesto}\r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo'>\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='novo'\r\n                                    defaultChecked={novo}\r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust'>\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel value=\"10\" control={<Radio color='success'/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color='success'/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color='success'/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'\r\n                                onContextMenu={(e) => {\r\n                                    \r\n                                    e.preventDefault(); // prevent the default behaviour when right clicked\r\n                                    const image = JSON.stringify(e.target.src)\r\n                                    const newItems = items.filter(item => JSON.stringify(item.src) !== image)\r\n\r\n                                    setItems(newItems)\r\n                                    \r\n                                    // if(images){\r\n                                    //     const newImages= images.map((item, index) => {\r\n                                    //         return {\r\n                                    //             image: item.src,\r\n                                    //             order: index,\r\n                                    //             product: id,\r\n                                    //             id: item.id\r\n                                    //         }\r\n                                    //     })\r\n                                       \r\n                                    //     //setImage(newImages)\r\n                                    // }\r\n                                    \r\n                                    \r\n                                    // const slanje= []\r\n                                    // newImages.forEach(x => {\r\n                                    //     var file = new File([\"hello\"], x.image\r\n                                    //     , {type:\"image/png\", lastModified: new Date().getTime()})\r\n                                    //     slanje.append(file)\r\n                                    // })\r\n                                    // console.log('Za slanje:', slanje)\r\n                                }}>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                {memoizedImageCard} \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option>{mesto_sadnje}</option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data_mesto_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             options={data_mesto_sadnje}\r\n                                             onChange={handleChange_mesto_sadnje}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>{type}</option>\r\n                                    {!allcategories ? [...Array.from(...allcategories?.type_of_plant), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option key={0}>{type}</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>{orezivanje}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.orezivanje), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option key={0}>{orezivanje}</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>   \r\n\r\n                            {/* <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>{privlaci_insekte}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.privlaci_insekte), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option key={0}>{privlaci_insekte}</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>{brzina_rasta}</option>\r\n                                    {!allcategories ? [...Array.from(allcategories?.brzina_rasta),\"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option key={0}>{brzina_rasta}</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success'  className='my-3'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        \r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n       \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust  \r\n        }, images, items))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_Mesto = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    const mesta_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist' className='btn btn-success my-3'>\r\n                Nazad\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1 style={{color:'green'}}>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label id='label_name'><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto' className=\"mb-3\">\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                   \r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo' className=\"mb-3\">\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    \r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust' className=\"mb-3\">\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                        color=\"success\"\r\n                                    >\r\n                                        <FormControlLabel value=\"0\" control={<Radio color=\"success\"/>} label=\"0%\" />\r\n                                        <FormControlLabel value=\"10\" control={<Radio color=\"success\"/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color=\"success\"/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color=\"success\"/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n                            {/* <Form.Group controlId='popust'>\r\n                                <Form.Label><strong>POPUST</strong></Form.Label>\r\n                                \r\n                                <div key='radio' className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        inline\r\n                                        label=\"10%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='10'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"20%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='20'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        name=\"group1\"\r\n                                        label=\"30%\"\r\n                                        type='radio'\r\n                                        id='30'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    </div>\r\n                               \r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    \r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={mesta_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={mesta_sadnje}\r\n                                             onChange={handleChange_Mesto}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option  id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success' className='my-3'>\r\n                                Kreiraj biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.user_name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n    const screenType = useScreenType();\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","\r\n\r\nfunction InformacijeIsporuka() {\r\n\r\nwindow.scrollTo({\r\n    top: 100,\r\n    left: 100,\r\n    behavior: 'smooth'\r\n    });\r\n  return (\r\n    <div>\r\n      <h3 style={{marginTop:'1rem', color:'green'}}>Način isporuke </h3>\r\n        <div>\r\n        Minimalni iznos porudžbine ne može da bude manji od 1000rsd. Porudžbine koje nemaju naveden minimum neće se isporučivati. \r\n        Pošiljke šaljemo ISKLJUČIVO PostExpress kurirskom službom. Troškovi isporuke posebno se zaračunavaju i plaćaju, u skladu sa cenovnikom Post Express \r\n        službe i iznose od 450,00 dinara, pa naviše, zavisno od težine i vrednosti pošiljke i nije moguće ih izračunati unapred. Maksimalna težina paketa za \r\n        slanje PostExpress službom je 20 kg, u kutijama čije dimenzije ne prelaze 60x50x50cm.\r\n        U suprotnom se pošiljka šalje kao CC paket, koja ima malo duži rok isporuke. Ukoliko ima više paketa za svaki se plaćaju troškovi isporuke.\r\n        Nemamo mogućnost slanja paketa u inostranstvo. Vreme isporuke je od 2-5 radnih dana.  <br></br><br></br>\r\n        <strong>BESPLATNA DOSTAVA</strong> je moguća na teritoriji grada Novog Sada, za svaku narudžbinu u vrednosti većoj od 2000rsd.\r\n\r\n\r\n        <h3 style={{ color:'green'}}>Način plaćanja</h3> \r\n\r\n        Prilikom popunjavanja obrasca za poručivanje možete se odlučiti za jedan od dva načina plaćanja: plaćanje pouzećem ili uplatnicom na tekući račun.\r\n        Na tekući račun uplaćujete samo iznos za poručene sadnice. Ptt troškove plaćate prilikom preuzimanja pošiljke sa sadnicama. \r\n        Ukoliko se odlučite za plaćanje pouzećem, iznos za sadnice i ptt troškove plaćate prilikom preuzimanja u pošti ili od kurira. \r\n        Kako bi pošiljka bila sigurno i brzo dostavljena do kupca, potrebno je da kupac navede tačne podatke prilikom formiranja porudžbine. \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InformacijeIsporuka;\r\n","function InformacijePorucivanje() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{marginTop:'1rem'}}>Poručivanje</h3>\r\n            <div>\r\n                <p>Minimalna vrednost pošiljke koju šaljemo je 1000rsd.</p>\r\n                <p>Sadnice možete poručiti na sledeće načine:</p>\r\n                <strong>Putem našeg sajta</strong> – sve sadnice možete poručiti putem našeg sajta, tako što ćete dodati proizvod u korpu i upisati vaše lične podatke koji su neophodni da bi vaša pošiljka bila isporučena na željenu adresu. \r\n                <p><strong>Telefonskim putem </strong>– Porudžbinu možete izvršiti i telefonskim putem, kao i kompletan dogovor oko slanja i isporuke. Ako imate bilo kakve nedoumice u vezi naših sadnica, slobodno pitajte. Naš kontakt telefon je 065/20-77-257. </p>\r\n                <p><strong>Putem društvene mreže Facebook</strong> –  Takođe sva vaša pitanja i porudžbine možete nam uputiti putem naše Facebook stranice Rasadnik Ema. Vrlo rado ćemo vam odgovoriti u najkraćem mogućem roku.</p>\r\n                <p><strong>Putem e-maila</strong> – Slobodno nam pišite i na našu email adresu  <a href = \"mailto: rasadnikema@gmail.com\">rasadnikema@gmail.com</a>. </p> \r\n                <p><strong>Dolaskom u rasadnik</strong> – Ukoliko imate mogućnost da nas lično posetite, uvek ste dobrodošli u naš rasadnik koji se nalazi u Budisavi (18km od Novog Sada). Ono što je potrebno da uradite pre posete, jeste da nam se jedan dan unapred najavite na naš kontakt telefon 065/20-77-257, kako bi smo se dogovorili o vremenu dolaska, jer zbog obaveza se može desiti da nismo u rasadniku. Svakom kupcu želimo u potpunosti da se posvetimo, te nam je zbog planiranja ovih obaveza važno da znamo kada možemo da vas očekujemo. 🙂<br></br>\r\n                <strong>BESPLATNA DOSTAVA</strong> je moguća na teritoriji grada Novog Sada, za svaku narudžbinu u vrednosti većoj od 2000rsd.  </p>\r\n\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePorucivanje;","\r\nfunction InformacijePitanja() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Najčešća pitanja</h3>\r\n            <div>\r\n            <strong>Da li mogu da vidim trenutnu sliku sadnice? </strong><br></br> <br></br>\r\n\r\n            Ukoliko želite da Vam pošaljemo kako sadnica izgleda u trenutku porudžbine, potrudićemo se da Vam istu uslikamo i sliku pošaljemo na Viber, \r\n            Messenger, MMS ili e-mailom. Izgled biljaka se menja u zavisnosti od godišnjeg doba, a u vreme vegetacije i na nedeljnom nivou i iz tog razloga je nemoguće\r\n            u svakom momentu imati sliku sadnice, kako izgleda u momentu poručivanja. <br></br><br></br>\r\n\r\n \r\n\r\n            <strong>Koliko brzo će narasti određena biljka/drvo?</strong> <br></br> <br></br>\r\n\r\n            Na ovo pitanje je jako nezahvalno davati odgovor jer brzina rasta zavisi i od uslova u kojima se biljka gaji kao što kvalitet zemljišta, pozicija u bašti,\r\n            đubrenje, zalivanje itd. Za neke biljke je navedeno da su npr brzorastuće ili koliko će veličinu dostići nakon određenog broja godina, ali na to utiču i gore \r\n            navedeni faktori.  <br></br> <br></br>\r\n\r\n            <strong>Kako da posadim biljku? </strong><br></br> <br></br>\r\n\r\n            Prilikom sadnje je neophodno iskopati rupu odgovarajuće veličine, te usitniti zemlju. U rupu sipati malo vode kako bi zemlja bila vlažna.\r\n            Nakon sađenja je potrebno dobro pritisnuti zemlju okolo korena zatim dobro zaliti. Veoma je važno da oko korena ne ostane vazdušni \"džep\". <br></br> <br></br>\r\n\r\n \r\n\r\n            <strong>Da li je potrebno da đubrim biljke kako bi bolje rasle? </strong><br></br> <br></br>\r\n\r\n            Sa đubrenjem ne možete pogrešiti, jedino treba da vodite računa o tome koje đubrivo koristite i da ga ne stavljate direktno na koren.\r\n            Svako đubrivo se koristi drugačije, i najbolje je koristiti ga prema uputstvu proizvodjača.<br></br> <br></br>  \r\n\r\n            <strong>Da li mogu da sadim biljke u velike saksije/žardinjere? </strong><br></br> <br></br>\r\n\r\n            Naš rasadnik u ponudi uglavnom ima sadnice čije je idealno mesto sadnje u vrtu gde će sadnica i najbolje napredovati.\r\n            Takođe skoro sve podnose i sađenje u adekvatne saksije odnosno žardinjere. Ono što je veoma važno jeste: odabir odgovarajuće veličine saksije,\r\n            odabir dobre pozicije za biljku, pravilno zalivanje posebno u letnjem periodu, zbog bržeg isparavanje vode, zaštite biljaka u saksijama od zime odnosno\r\n            smrzavanja korena...\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePitanja;","\r\n\r\nfunction InformacijeReklamacije() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Reklamacije</h3>\r\n            <div>\r\n            Biljke i ostali sadni materijal ne podleže garantnom roku jer predstavlja živi materijal koji je potrebno adekvatno održavati i voditi računa o potrebama \r\n            prihranjivanja, uslovima staništa itd. <br></br><br></br>\r\n\r\n            <strong>REKLAMACIJE  PRIMAMO U ROKU OD 24h NAKON PREUZIMANJA POŠILJKE. </strong><br></br><br></br>\r\n\r\n            Rasadnik Ema će adekvatno upakovati sadnice, po želji kupca, sa ili bez saksija. Ne možemo odgovarati ukoliko kurirska služba ne bude adekvatno rukovala pošiljkom. \r\n            Za svako oštećenje načinjeno od strane kurirske službe, molimo Vas da kontaktirate istu radi reklamacije. <br></br><br></br>\r\n\r\n            Ukoliko kupac po prijemu pošiljke nije zadovoljan kvalitetom sadnica, kupac ima mogućnost da istu pošiljku vrati na adresu pošiljaoca odnosno Rasadnika Ema, \r\n            sa otkupninom u iznosu vrednosti biljaka. Pošiljka mora biti uredno upakovana i obezbeđena na isti način na koji je primljena. \r\n            Ptt troškove vraćanja sadnica snosi kupac. <br></br><br></br>\r\n\r\n            Paket se vraća u celosti, a postoji mogućnost povraćaja i pojedinačnih biljaka. U oba slučaja, kupac snosi ptt troškove. \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijeReklamacije;","\r\n\r\nfunction InformacijePrivatnost() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Politika privatnosti</h3>\r\n            <div>\r\n            Da bismo uspešno obradili Vašu narudžbinu potrebni su nam Vaše ime i prezime, adresa, e-mail i telefon. Uz pomoć tih podataka bićemo u mogućnosti da \r\n            Vam isporučimo željenu robu, kao i da Vas obavestimo o trenutnom statusu narudžbine.\r\n            U naše ime obavezujemo se da ćemo čuvati privatnost svih naših kupaca.<br></br><br></br>\r\n            Prikupljamo samo neophodne, osnovne podatke o kupcima i podatke neophodne za \r\n            poslovanje i informisanje kupaca u skladu sa dobrim poslovnim običajima i u cilju pružanja kvalitetne usluge. \r\n            Svi podaci o kupcima se strogo čuvaju i dostupni su samo zaposlenima kojima su podaci nužni za obavljanje posla.<br></br><br></br>\r\n            Obavezujemo se da prikupljene podatke ne koristimo \r\n            ni u koje druge svrhe, niti ih prosleđujemo trećim licima.<br></br><br></br>\r\n            Rasadnik Ema zadržava pravo da odbije pružanje usluge ili otkaže narudžbenicu ukoliko ustanovi da je već bilo nekorektne saradnje od strane kupca \r\n            (npr. ako smo sa istom osobom imali problem više od dva puta nismo u obavezi da šaljemo pošiljku istoj).  \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePrivatnost;","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState, useRef } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\nimport InformacijeIsporuka from './screens/InformacijeIsporuka'\r\nimport InformacijePorucivanje from './screens/InformacijePorucivanje'\r\nimport InformacijePitanja from './screens/InformacijePitanja'\r\nimport InformacijeReklamacije from './screens/InformacijeReklamacije'\r\nimport InformacijePrivatnost from './screens/InformacijePrivatnost'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n  const screenType = useScreenType();\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder} /> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={ screenType.isMobile ? { backgroundColor: '#FFF' , width:'100%', margin:0} : { backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id/:catId\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n            <Route path=\"/isporuke\" element={<InformacijeIsporuka />}></Route>\r\n            <Route path=\"/porucivanje\" element={<InformacijePorucivanje />}></Route>\r\n            <Route path=\"/pitanja\" element={<InformacijePitanja />}></Route>\r\n            <Route path=\"/reklamacije\" element={<InformacijeReklamacije />}></Route>\r\n            <Route path=\"/privatnost\" element={<InformacijePrivatnost />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}