{"version":3,"sources":["compontents/UI/HeaderCartButton.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","store/product-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/plantCategory-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","store/product-actions.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","store/carusel-actions.js","screens/HomeScreen.js","store/cart-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","store/userRegister-actions.js","store/userDetails-actions.js","screens/ProfileScreen.js","store/orderOrdersProfile-actions.js","store/userUpdateProfile-actions.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","store/payment-actions.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","screens/OrderScreen.js","store/orderPay-actions.js","store/userList-actions.js","screens/UserListScreen.js","store/userDelete-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","store/deleteProduct-actions.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","screens/UserEditScreen.js","store/userUpdate-actions.js","screens/ProductEditScreen.js","store/updateProduct-actions.js","screens/ProductCreateScreen.js","store/plantCategory-actions.js","screens/OrderListScreen.js","store/orderList-actions.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css","compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselActions","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","plantCategorySlice","categories","plantCategoryRequest","plantCategorySuccess","plantCategoryFail","plantCategoryActions","plantCategoryReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","navigate","useNavigate","location","useLocation","Form","onSubmit","e","preventDefault","pathname","Container","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","icon","badge","Header","dispatch","useDispatch","Navbar","expand","collapseOnSelect","to","Brand","Text","style","textAlign","fontSize","faPhone","Nav","Link","faFlag","HeaderCardButton","onShowCart","bg","Toggle","pading","Collapse","margin","size","span","offset","faCartFlatbed","faInfo","faAnchor","faContactBook","NavDropdown","title","user_name","Item","event","removeItem","faUser","isAdmin","Footer","Rating","Product","Card","border","width","height","_id","Img","src","image","Body","Title","as","color","price","countInStock","listProducts","fetchData","axios","get","data","cartData","response","detail","message","productDetails","Loader","Spinner","animation","role","display","Message","children","Alert","Heading","Paginate","Pagination","Array","keys","map","active","ProductCarusel","productTop","getState","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","useSearchParams","search","sm","lg","xl","addToCart","setItem","stringify","ProductScreen","match","useParams","setQty","productDet","window","scrollTo","top","left","behavior","ListGroup","category","flowering_time","place_of_planting","xs","Number","disabled","description","CartScreen","setDostava","setPlacanje","removeFromCartHandler","removeFromCart","rounded","faTrash","toFixed","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","addDostavaAndPlacanjeCart","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","post","login","Group","controlId","Label","placeholder","varaiant","RegisterScreen","username","setName","fullname","setUserName","place","setPlace","address","setAddress","self_phone","setSelfPhone","fix_phone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","register","required","getUserDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","Object","put","userUpdateProfileSuccess","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","shippingPrice","taxPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","href","index","createOrder","ukupno","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","options","layout","amount","onSuccess","paymentResult","payOrder","listUsers","UserListScreen","uDelete","deleteHandler","confirm","delete","deleteUser","deleteUserReset","bordered","hover","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","createdProduct","productId","InfoScreen","ONamaScreen","KontakScreen","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductEditScreen","setPrice","setImage","setColor","flow","setFlow","setCategory","setCountInStock","setDescription","uploading","setUploading","productDetail","productUpd","uploadFileHandler","file","files","formData","FormData","append","defaultValue","controlid","Select","colorChoises","col","categoryChoises","cat","floweringChoises","placeChoises","ProductCreateScreen","categoryLoading","categoryError","categoriesData","OrderListScreen","listOrds","deliverdAt","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","cartitems","bind","CartModal","Order","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.54c15eb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:null\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty += newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst plantCategorySlice = createSlice({\r\n    name: 'plantCategory',\r\n    initialState: {\r\n        categories: {},\r\n        loading: false,\r\n        error: ''\r\n    },\r\n    reducers:{\r\n        plantCategoryRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        plantCategorySuccess(state, action) {\r\n            state.loading = false\r\n            state.categories = action.payload     \r\n        },\r\n\r\n        plantCategoryFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const plantCategoryActions = plantCategorySlice.actions\r\nexport const plantCategoryReducer = plantCategorySlice.reducer\r\nexport default plantCategorySlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\nimport { plantCategoryReducer } from './plantCategory-slice'\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: plantCategoryReducer\r\n    }\r\n})\r\n\r\nexport default store","import React, { useState } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        if(keyword){\r\n            \r\n            navigate(`/?keyword=${keyword}`)\r\n        }else{\r\n\r\n            navigate(location.pathname)\r\n        }\r\n\r\n    }\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        type='text'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect className={classes[\"color-navbar\"]}>\r\n        <Container  >\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  <h1 className={classes[\"h1\"]}>PolicPlant</h1>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div >065356458</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"#\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faFlag} /> Placeholder</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          <Row>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Col md={4} style={{ pading:10, margin:10, size:20}} >\r\n                <SearchBox ></SearchBox>\r\n              </Col>\r\n              <Col md={{ span: 10, offset: 2 }}>\r\n                <Nav>\r\n                  <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faCartFlatbed} />     Korpa</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/info\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faInfo} />  Info</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; PolicPlant</Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\" border=\"primary\" style={{ width: '18rem', height: '30rem' }}>\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 28}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black'}}>\r\n                    {product.price} din\r\n            </Card.Text>\r\n            <Card.Text as=\"h7\">\r\n                    {product.countInStock > 0 ? <strong style={{ color:'green'}}>{product.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    useEffect(() => {\r\n        dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                </Image>\r\n                                <Carousel.Caption className='carusel.caption'>\r\n                                    <h4>{product.name} ({product.price} din)</h4>\r\n                                </Carousel.Caption>\r\n\r\n                            </Link>\r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import { caruselActions } from './carusel-slice'\r\nimport axios from 'axios'\r\n\r\nexport const caruselTop = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n       \r\n\r\n        const fetchData = async () => {\r\n\r\n            \r\n            const { data } = await axios.get(\r\n                `/api/products/carusel/top/`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(caruselActions.caruselRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(caruselActions.caruselSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                caruselActions.caruselFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const product = useSelector(state => state.productList)\r\n  const { error, loading, products, page, pages } = product\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listProducts(keyword, page))\r\n        \r\n }, [dispatch, keyword]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { true && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h1>Proizvodi:</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div>  \r\n                    <Row>\r\n                     {products?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                         <Product product={product}/>\r\n                     </Col>\r\n                      ))}\r\n                      <Paginate page={page} pages={pages} keyword={keyword}></Paginate>\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  useEffect(()=>{\r\n\r\n       dispatch(productDetails(id))\r\n\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <Link to='/' className='btn btn-primary my-3'> Nazad</Link>\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                    </Image>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2>{product.name}</h2>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:32 }}>{product.price} din</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Polozaj:</strong> {product.flowering_time}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} din</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"uplata\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Korpa</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems?.map((item) => (\r\n              <ListGroup.Item key={item.id}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col md={2}><strong>{item.price} din</strong></Col>\r\n                  <Col md={1}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col md={8}><strong>Proizvodi</strong></Col>\r\n                <Col md={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col md={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col md={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col md={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col md={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} din</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Novi Kupac\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" />\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n        <h1>Podaci Kupca</h1>\r\n        <Form onSubmit={submitHandler1}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='password'\r\n                            placeholder='Unesite lozinku...'\r\n                            value={password ? password : ''}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n        </Form>\r\n          </FormContainer>\r\n      </TabPanel>\r\n      <TabPanel value=\"2\">\r\n          <FormContainer>\r\n\r\n        <h1>Podaci Kupca</h1>\r\n        <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                </FormContainer>\r\n\r\n            </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n        </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            console.log('Pre localstorage remove')\r\n            localStorage.removeItem('cartItems')\r\n            console.log('Posle localstorage remove')\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        console.log('ovo je pre succesa',success)\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n            console.log('ovo je order posle reseta:',order)\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n        console.log('jel doslo dovde?')\r\n\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart.cartItems.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} x {item.price} din = {(item.qty *item.price).toFixed(2)} din\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Shiping:</strong></Col>\r\n                                   <Col>{shippingPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>{taxPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{totalPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart.cartItems.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,{}, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n\r\n         if(successCreate){\r\n\r\n            const productId = createdProduct._id\r\n            dispatch(productReset())\r\n            navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate , createdProduct])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button></td>\r\n                                        </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n        console.log('ovo je product id:', productId)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const productDetail = useSelector(state => state.product)\r\n    const { loading, product, error } = productDetail\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpd\r\n\r\n    console.log('prvo')\r\n    useEffect(() => {\r\n        console.log('pocetak')\r\n        if(successUpdate){\r\n            dispatch(updateProductReset())\r\n            navigate(`/admin/productlist`)\r\n        }else{\r\n\r\n            if(!product.name || product._id !== Number(productId)){\r\n                console.log('********************')\r\n                dispatch(productDetails(productId))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setColor(product.color)\r\n                setPlace(product.place)\r\n                setFlow(product.flow)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n           \r\n\r\n    }, [dispatch, product , productId,navigate,successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description\r\n\r\n        }))\r\n\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         console.log('sta je ovo:', file)\r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', productId)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>} \r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>Name</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>Cena</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>Image</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    label=\"Izaberite sliku:\"\r\n                                    \r\n                                    onChange={async (e) =>  uploadFileHandler(e)}\r\n                                > \r\n\r\n                                </Form.Control>  \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>Boja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    <option>Odaberite boju cveca...</option>\r\n                                    {product.colorChoises?.map(col => (\r\n                                        <option value={col}>{col}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>Stanje</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setCategory(e.target.value)}>\r\n                                    <option>Odaberi kategoriju cveca...</option>\r\n                                    {product.categoryChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='flow'>\r\n                                <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setFlow(e.target.value)}>\r\n                                    <option>Odaberi vreme cvetanja...</option>\r\n                                    {product.floweringChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option>Odaberi mesto sadnje...</option>\r\n                                    {product.placeChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>Description</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { plantCategories } from '../store/plantCategory-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [type_of_plant, setType] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , error: categoryError } = categoryList\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(plantCategories())  \r\n\r\n    }, [dispatch, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }))\r\n\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>Name</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>Cena</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>Image</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    label=\"Izaberite sliku:\"\r\n                                    \r\n                                    onChange={async (e) =>  uploadFileHandler(e)}\r\n                                > \r\n\r\n                                </Form.Control>  \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>Boja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    <option>Odaberite boju cveca...</option>\r\n                                    {categories?.color?.map(col => (\r\n                                        <option value={col}>{col}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>Stanje</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setCategory(e.target.value)}>\r\n                                    <option>Odaberi kategoriju cveca...</option>\r\n                                    {categories?.categories?.map(cat => (\r\n                                        <option value={cat.name}>{cat.name}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='flow'>\r\n                                <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setFlow(e.target.value)}>\r\n                                    <option>Odaberi vreme cvetanja...</option>\r\n                                    {categories?.flowering_time?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option>Odaberi mesto sadnje...</option>\r\n                                    {categories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>Description</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { plantCategoryActions} from './plantCategory-slice'\r\nimport axios from 'axios'\r\n\r\nexport const plantCategories = () => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/categories`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(plantCategoryActions.plantCategoryRequest())\r\n            const categoriesData = await fetchData()\r\n            dispatch(plantCategoryActions.plantCategorySuccess(categoriesData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                plantCategoryActions.plantCategoryFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        cartItems?.map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)} \r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n \r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button}> Narudzba</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    console.log('ovo je value:', props.value)\r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Order number: </span>\r\n            <span>{props.value.orderId}</span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};"],"sourceRoot":""}