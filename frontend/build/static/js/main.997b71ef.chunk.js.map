{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","store/cart-actions.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/MDBCarusel.js","screens/HomeScreen.js","screens/CategoryScreen.js","store/review-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","compontents/Photo.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","success","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","useNavigate","useDispatch","useLocation","useEffect","setItem","Form","onSubmit","e","preventDefault","Container","style","padding","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","background","i","login","email","password","dispatch","fetchData","config","headers","axios","post","data","stringify","response","detail","message","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","get","cartData","Header","listKagetorija","useRef","cat","setCat","current","Navbar","expand","collapseOnSelect","height","overflow","to","Brand","src","width","marginTop","alt","Text","textAlign","fontSize","color","faPhone","Nav","Link","margin","HeaderCardButton","onShowCart","bg","display","Toggle","Collapse","span","offset","faStore","NavDropdown","title","slice","sort","a","b","map","category","_id","Item","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","backgroundColor","Rating","addToCart","getState","image","images","price","countInStock","removeFromCart","addDostavaAndPlacanjeCart","Product","navigate","Card","border","Img","findLast","ImgOverlay","Title","marginBottom","Body","as","disabled","Number","Kategorija","objectFit","textDecoration","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","productDetails","listFilterProducts","val","high","flow","place","search","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","memoizedValue","useMemo","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","initialRender","fluid","xl","placeholder","mesto_sadnje","col","label","paddingBottom","type_of_plant","Loader","Spinner","animation","role","Message","children","Alert","Heading","Paginate","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","MDBCarusel","itemRef","productTop","interval","c","Image","ref","rounded","offsetPosition","right","HomeScreen","carucel","setCarucel","toggle","setToggle","screenType","useScreenType","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","customerLogo","setSearchValue","orderCategories","isMobile","isDesktop","isLargeDesktop","sm","lg","xs","CategoryScreen","catProducts","useParams","window","scrollTo","Breadcrumb","paddingTop","href","active","toString","description","includes","ProductScreen","match","setQty","productDet","WebFont","load","google","families","top","left","behavior","original","thumbnail","marginLeft","items","lazyLoad","ListGroup","fontFamily","botanicki_naziv","join","Array","isArray","place_of_planting","vre_cve","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","sirina_biljke","velicina_slanja","keys","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","img","files","formData","FormData","arr","from","forEach","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","whiteSpace","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","File","updateProductDetails","imgWithClick","cursor","Photo","photo","direction","imgStyle","onDoubleClick","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","setItems","setFlick","uploading","productUpd","prodSuccess","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","prvaSlika","targetFilesObject","y","targetFilesObjectWithoutLast","unshift","Set","data_mesto_sadnje","data2","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","memoizedImageCard","axis","onContextMenu","newItems","newImages","POSITION","TOP_RIGHT","autoClose","defaultValue","controlid","multiple","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","minMenuHeight","openMenuOnFocus","Select","ProductCreateScreen","inputName","inputHesh","notify","mesta_sadnje","onKeyPress","key","focus","checkPress","rows","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.997b71ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            success: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        productDetailsReset(state) {\r\n            \r\n           \r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('keyword', keyword)\r\n    },[keyword])\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{padding:'4rem'}}>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        //dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 400)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantpublic.s3.eu-west-2.amazonaws.com/veliki+logo+verzija+1.0.png'\r\n  const listKagetorija= useRef([])\r\n\r\n  const [cat, setCat] = useState(categories)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n \r\n    \r\n    //dispatch(listCategories())\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    localStorage.setItem('categories', JSON.stringify(categories))\r\n    listKagetorija.current = JSON.parse(localStorage.getItem('categories'))\r\n    setCat(listKagetorija.current)\r\n    \r\n  }, [categories]);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Row>\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        <Container  style={{ overflow:'hidden'}}>\r\n        \r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand >\r\n                  {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                  <img src={image} style={{ width:'22rem', height:'22rem',marginTop: '+2rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link style={{ margin:'1rem'}}>\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      </Row>\r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row style={{width:'auto', display: 'flex'}}>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{width:'100%'}}>\r\n              \r\n              <Col md={{ span: 12, offset: 14 }}>\r\n                <Nav style={{width:'100%'}}>\r\n                    \r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {cat?.slice().sort((a, b) =>{return a.order - b.order}).map( (category) => (\r\n                              <LinkContainer to={`/categories/${category._id}`} key={category._id}>\r\n                                  <NavDropdown.Item  key={category._id}>\r\n                                      { category.name }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                  \r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <h6>Korisni linkovi</h6>\r\n                <h5>Kako poručiti putem sajta</h5>\r\n                <h5>Izrada plana sadnje</h5>\r\n                <h5>Najčešća pitanja</h5>\r\n                <h5>Način plaćanja</h5>\r\n                <h5>Isporuka</h5>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { useParams } from 'react-router';\r\n\r\nfunction Product({product}) {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = () => {\r\n        console.log('Klik')\r\n        dispatch(addToCart(Number(product._id), Number(1)));\r\n        navigate(`/cart/?id=${product._id}&qty=${1}`)\r\n    }\r\n  return (\r\n    <Card className={`my-1 p-1 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"primary\"  style={{ width: '17.5rem', height: 'auto' }}>\r\n        <Link to={`/products/${product._id}`}> \r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} style={{width: '100%', height: '14rem' }}></Card.Img>\r\n            <Card.ImgOverlay style={{width: '100%', height: '14rem' }}>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '5px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay> \r\n        </Link> \r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: '1.2rem'}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h4\" style={{ color:'black', fontSize: '1.4rem'}}>\r\n                    {product.price} rsd\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h6\"> */}\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            {/* </Card.Text> */}\r\n            <Button     variant=\"primary\" \r\n                        disabled={product.countInStock < 1} \r\n                        type='button'\r\n                        onClick= {addToCartHandler}>\r\n                                Dodaj u Korpu\r\n            </Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-1 p-1  ${classes[\"img/-hover-zoom\"]} h-100 `} border=\"dark\"  style={{ width: '100%', height: '25rem' }}>\r\n        <Card.Header as=\"h6\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image} style={{ width: '100%', height: '32vh', objectFit: 'cover' }}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\", textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block',fontSize: '1.6rem'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    \r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        \r\n        //onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 500);\r\n    const initialRender = useRef(true);\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        onSearch(memoizedValue)\r\n\r\n     }, [memoizedValue, onSearch]);\r\n\r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        \r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [dispatch, debouncedSearchTerm, keyword]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid style={{ padding: '0.2rem'}}>\r\n           \r\n            \r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex' }}>\r\n                \r\n                \r\n                    <Row md={12} xl={12} style={{ display: 'flex', padding:'0.5rem', width: '100%'}}>\r\n                        <Row >\r\n                            <h6><strong>Pretraga Proizvoda:</strong></h6>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Trazeni proizvod...'\r\n                                onChange={(e) => setPretraga(e.target.value) }>\r\n                            </Form.Control>\r\n                            </Row>\r\n                        </Row>\r\n               \r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    \r\n                    <h6><strong>Pozicija za sadnju</strong></h6>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setPozicija}>\r\n\r\n                        </CustomSelect>\r\n                    </Row>\r\n                    \r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <Row>\r\n                            <h6><strong>Boja cveta</strong></h6>\r\n                        </Row>\r\n                        <Row>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Select....'\r\n                                onChange={(e) => setBoja(e.target.value) }>\r\n                            </Form.Control>\r\n                        </Row>\r\n                    </Row>\r\n             \r\n                    <Row md={12} xl={12} style={{ paddingBottom:'0.5rem', width: '100%'}}>\r\n\r\n                    <h6><strong>Tip biljke</strong></h6>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setTip}>\r\n\r\n                        </CustomSelect>\r\n                    </Row>\r\n              \r\n                \r\n                {/* <h6><strong>Visina biljke</strong></h6>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.high?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setHigh}></CustomSelect>\r\n                    </Row>\r\n                <hr/> */}\r\n                \r\n                \r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <h6><strong>Kategorija biljke</strong></h6>\r\n                        <CustomSelect  values={ allcategories?.categories?.map(col => (\r\n                            { value: col.name, label: col.name}\r\n                            ))} onAction={setKategorija}>\r\n\r\n                        </CustomSelect>\r\n                    </Row>\r\n              \r\n                <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row>\r\n               \r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n//import { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\nimport {\r\n    MDBCarousel,\r\n    MDBCarouselItem,\r\n  } from 'mdb-react-ui-kit';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport {  Image} from 'react-bootstrap'\r\n\r\nimport { Rerousel } from 'rerousel';\r\n\r\nfunction MDBCarusel( {itemRef}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n    \r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Rerousel itemRef={itemRef} interval={5000}>\r\n                {slike.map((c) => {\r\n                    return <Image key={c.id} src={c.src} ref={itemRef} fluid  rounded   style={{ offsetPosition: 'auto', position: 'relative' , right:'1.4rem',  width:'100%',\r\n                        height: '28rem', objectFit:'fill', margin:'auto', padding:'0.2rem 0.8rem'}}/>\r\n                })}\r\n                </Rerousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default MDBCarusel","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport CarouselFadeExample from '../compontents/StaticCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sliderClasses } from '@mui/material'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n//   const [ val, setVal ] = useState({\r\n//     color: '',\r\n//     high: [],\r\n//     type: [],\r\n//     category: [],\r\n//     flow: [],\r\n//     search: ''\r\n// })\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n    //setVal(value)\r\n    if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n     setToggle(false)\r\n     setCarucel(false)\r\n   } else{\r\n     setToggle(true)\r\n     setCarucel(true)\r\n   }\r\n }\r\n \r\n  const orderCategories = categories?.slice().sort((a, b) =>{return a.order - b.order})\r\n\r\n  return (\r\n    <div>\r\n        { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}  \r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        {/* { carucel && <CarouselFadeExample></CarouselFadeExample>} */}\r\n        <h1> {carucel ? 'Kategorije:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (\r\n                        <Row  className={'gy-2'}>\r\n                          {orderCategories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row className={'gy-2'}>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo(0, 0)\r\n    dispatch(listProducts())\r\n        \r\n }, [dispatch, id]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        <h1>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        \r\n        <p>{ catProducts?.find( cat => cat._id?.toString() === id)?.description}</p>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n       dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      \r\n      //navigate(`/cart/?id=${id}&qty=${qty}`)\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n const images = product?.images?.map(image => {\r\n    return {\r\n        original: image.image,\r\n        thumbnail: image.image\r\n    }\r\n })\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/#/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item href={`#/categories/${product?.category?.map(x => x._id)[0]}`}>\r\n                \r\n          { product?.category?.map(x => x.name)[0]}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            { product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        {userInfo && <Link to={`/admin/product/${id}/edit`} className='btn btn-primary my-3' style={{ marginLeft:'3rem'}}> Edit Biljke</Link>}\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={6} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ fontSize:'2.8rem', fontFamily: 'Oswald, sans-serif'}}>{product.name}</strong> <i style={{fontSize:'1.4rem'}}>{product.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {/* {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>} */}\r\n                                        {product.mesto_sadnje?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {Array.isArray(product.mesto_sadnje) ? product.mesto_sadnje?.join(', ') : product.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product.vre_cve) ? product.vre_cve?.join(', ') : product.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product.type_of_plant && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product.privlaci_insekte && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product.brzina_rasta && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product.prezimljava && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product.sirina_biljke && <ListGroup.Item>\r\n                                            <strong> Sirina:</strong> {product.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product.velicina_slanja && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item>\r\n                                            \r\n                                                \r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {product.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Kolicina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )}\r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product.countInStock === 0} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const files = img //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td style={{whiteSpace: \"nowrap\"}}>{product.countInStock}</td>\r\n                                        <td><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            console.log('Type', images)\r\n            if(images[0] instanceof File ){\r\n                \r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n                //formData.append('image', files)\r\n                formData.append('product_id', product_id)\r\n            }else{\r\n                \r\n                const arr = Array.from(files?.map(x => x.id))\r\n                \r\n                formData.append('images', arr)\r\n                //formData.append('image', files)\r\n                formData.append('product_id', product_id)\r\n            }\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    \r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      onDoubleClick={()=> console.log('Double click')}\r\n      alt=\"img\"/>\r\n   \r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef, useMemo  } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\ntoast.configure()\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n    const [items, setItems] = useState([]);\r\n    const [flick, setFlick] = useState(false);\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    const prod = useSelector(state => state.product)\r\n    const { product: prodProduct,  success : prodSuccess} = prod\r\n\r\n    const ukupno = useRef([])\r\n\r\n    const SortablePhoto = SortableElement(item => <Photo {...item} />);\r\n    const SortableGallery = SortableContainer(({ items }) => (\r\n            <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n        \r\n        ));\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        const newItems = items?.map(image => {\r\n            return {\r\n                src:image.src,\r\n                width:1,\r\n                height:1\r\n            }\r\n        })\r\n        setItems([...newItems, ...photos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        console.log('Renderovanje')\r\n        if(success){\r\n            const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n            const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n                return {\r\n                    image: image?.image,\r\n                    id: image?.id\r\n                }\r\n            })\r\n            const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n            if(prvaSlika){\r\n                targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id})\r\n            }\r\n\r\n        const photos = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n              return {\r\n                  src:image.image,\r\n                  id:image.id,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        setItems(photos) \r\n        }   \r\n    }, [success,product?.name, product?.images])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n\r\n        \r\n        if(success){\r\n            console.log('Flicking')\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, product?.name, success, prodSuccess])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        ukupno.current = items\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category\r\n        },images))\r\n        setItems(ukupno.current)\r\n        // setImage(ukupno.current.map((index,item) => {\r\n        //     return {\r\n        //         id:item.id,\r\n        //         image:item.src,\r\n        //         order: index,\r\n        //         product:id\r\n        //     }\r\n        // }))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n        notify()\r\n        setImage([])\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_mesto_sadnje = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data_mesto_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n  \r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex},e) => {\r\n\r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(Array.from(items?.map((item, index) => {\r\n            return {\r\n                id: item.id,\r\n                image: item.src,\r\n                order:index,\r\n                product: id\r\n            }\r\n        })), oldIndex, newIndex));\r\n        console.log('Items sort order', items);\r\n        console.log('Image sort order', images);\r\n    };\r\n\r\n    const memoizedImageCard = useMemo(() => {\r\n        return (\r\n            <Row>\r\n                <SortableGallery items={items}   onSortEnd={onSortEnd} axis={\"xy\"} />\r\n            </Row>\r\n        )\r\n    },[items]);\r\n\r\n    return (\r\n        <div className=\"ProductEditScreen\"\r\n            onContextMenu={(e) => {\r\n            e.preventDefault(); // prevent the default behaviour when right clicked\r\n            const image = JSON.stringify(e.target.src)\r\n            const newItems = items.filter(item => JSON.stringify(item.src) !== image)\r\n            setItems(newItems)\r\n            console.log('Items:', newItems)\r\n            const newImages= newItems.map((item, index) => {\r\n                return {\r\n                    image: item.src,\r\n                    order: index,\r\n                    product: id,\r\n                    id: item.id\r\n                }\r\n            })\r\n            console.log('Images:', newImages)\r\n            setImage(newImages)\r\n            setFlick(true)\r\n            // const slanje= []\r\n            // newImages.forEach(x => {\r\n            //     var file = new File([\"hello\"], x.image\r\n            //     , {type:\"image/png\", lastModified: new Date().getTime()})\r\n            //     slanje.append(file)\r\n            // })\r\n            // console.log('Za slanje:', slanje)\r\n        }}>\r\n        <Link to={-1}> \r\n            Nazad\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='id'>\r\n                                <Form.Label><strong>ID</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={id}\r\n                                    disabled\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                {memoizedImageCard} \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option>{mesto_sadnje}</option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data_mesto_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             options={data_mesto_sadnje}\r\n                                             onChange={handleChange_mesto_sadnje}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>{type}</option>\r\n                                    {!allcategories ? [...Array.from(...allcategories?.type_of_plant), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option key={0}>{type}</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>{orezivanje}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.orezivanje), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option key={0}>{orezivanje}</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>   \r\n\r\n                            {/* <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>{privlaci_insekte}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.privlaci_insekte), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option key={0}>{privlaci_insekte}</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>{brzina_rasta}</option>\r\n                                    {!allcategories ? [...Array.from(allcategories?.brzina_rasta),\"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option key={0}>{brzina_rasta}</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category  \r\n        }, images))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_Mesto = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    const mesta_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={mesta_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={mesta_sadnje}\r\n                                             onChange={handleChange_Mesto}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={{   backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}