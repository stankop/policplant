{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","store/cart-actions.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/StaticCarusel.jsx","compontents/MultiCaroseul.jsx","screens/HomeScreen.js","screens/CategoryScreen.js","store/review-actions.js","compontents/UI/Ikonice.jsx","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","compontents/Photo.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","screens/InformacijeIsporuka.jsx","screens/InformacijePorucivanje.jsx","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","success","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","useNavigate","useDispatch","useLocation","useEffect","setItem","Form","onSubmit","e","preventDefault","Container","style","padding","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","background","i","login","email","password","dispatch","fetchData","config","headers","axios","post","data","stringify","response","detail","message","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","get","cartData","Header","listKagetorija","useRef","cat","setCat","current","info","src","Navbar","expand","collapseOnSelect","height","overflow","to","Brand","Image","fluid","width","marginTop","alt","Text","textAlign","fontSize","color","faPhone","Nav","Link","margin","HeaderCardButton","onShowCart","bg","display","Toggle","Collapse","span","offset","paddingRight","faStore","NavDropdown","title","slice","sort","a","b","map","category","_id","Item","faInfo","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","WebFont","load","google","families","backgroundColor","xs","responsive","objectFit","href","paddingTop","fontFamily","marginBottom","textDecoration","Rating","addToCart","getState","image","images","price","countInStock","removeFromCart","addDostavaAndPlacanjeCart","Product","catId","navigate","Card","border","Img","findLast","ImgOverlay","Title","prodajno_mesto","Body","as","fontStyle","botanicki_naziv","disabled","Number","Kategorija","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","pk","productDetails","listFilterProducts","val","high","flow","place","search","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","memoizedValue","useMemo","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","initialRender","xl","justifyContent","col","label","type_of_plant","mesto_sadnje","placeholder","Loader","Spinner","animation","role","Message","children","Alert","Heading","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","CarouselFadeExample","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MultiCaroseul","image1","rounded","image2","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","img","zoomOnHover","buttonPosition","alwaysShowButton","primary","HomeScreen","carucel","setCarucel","toggle","setToggle","screenType","useScreenType","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","setSearchValue","orderCategories","isMobile","isDesktop","isLargeDesktop","sm","lg","CategoryScreen","catProducts","useParams","window","scrollTo","top","left","behavior","htmlString","__html","DOMPurify","sanitize","toString","description","Breadcrumb","active","dangerouslySetInnerHTML","includes","Ikonice","visina_biljke","sirina_biljke","Array","isArray","sunce","hlad","polusenka","filterImages","Table","tableLayout","striped","align","ProductScreen","match","setQty","productDet","setImages","prvaSlika","from","targetFilesObject","y","targetFilesObjectWithoutLast","unshift","imgs","Set","original","thumbnail","textDecorationLine","marginLeft","lazyLoad","ListGroup","join","place_of_planting","vre_cve","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","velicina_slanja","paddingBottom","keys","open","ListGroupItem","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","textDocorationColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","itms","files","formData","FormData","append","arr","forEach","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","novo","popust","whiteSpace","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","console","log","updateProductDetails","imgWithClick","cursor","Photo","photo","direction","imgStyle","onDoubleClick","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","setItems","setProdajnoMesto","setNovo","setPopust","uploading","productUpd","prodSuccess","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","image_name","data_mesto_sadnje","data2","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","memoizedImageCard","axis","POSITION","TOP_RIGHT","autoClose","defaultValue","isValid","defaultChecked","row","onContextMenu","newItems","controlid","multiple","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","rows","minMenuHeight","openMenuOnFocus","Select","ProductCreateScreen","inputName","inputHesh","notify","mesta_sadnje","onKeyPress","key","focus","checkPress","ref","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","InformacijeIsporuka","InformacijePorucivanje","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.f03bfea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: null,\r\n            loading: false,\r\n            success: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        productDetailsReset(state) {\r\n            \r\n           \r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n               \r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n       \r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('keyword', keyword)\r\n    },[keyword])\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{padding:'4rem'}}>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        //dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 400)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image'\r\nimport '../compontents/Header.css'\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n  const listKagetorija= useRef([])\r\n\r\n  const [cat, setCat] = useState(categories)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n \r\n    \r\n    //dispatch(listCategories())\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    localStorage.setItem('categories', JSON.stringify(categories))\r\n    listKagetorija.current = JSON.parse(localStorage.getItem('categories'))\r\n    setCat(listKagetorija.current)\r\n    \r\n  }, [categories]);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const info = [\r\n    {\r\n      id:0,\r\n      value: 'Informacije',\r\n      src: 'a'\r\n    },\r\n    { \r\n      id:1,\r\n      value: 'Poručivanje',\r\n      src: 'porucivanje'},\r\n    {\r\n      id:2,\r\n      value: 'Kako poručiti putem sajta',\r\n      src: 'b'\r\n    },\r\n    {\r\n      id:3,\r\n      value:'Izrada plana sadnje',\r\n      src: 'c'\r\n    },\r\n    {\r\n      id:4,\r\n      value:'Najčešća pitanja',\r\n      src: 'd'\r\n    },\r\n    {\r\n      id:5,\r\n      value:'Način plaćanja',\r\n      src: 'e'\r\n    },\r\n    {\r\n      id:6,\r\n      value:'Isporuka',\r\n      src: 'isporuka'\r\n    },\r\n    {\r\n      id:7,\r\n      value:'Reklamacije',\r\n      src: 'f'\r\n    },\r\n    {\r\n      id:8,\r\n      value:'Politika privatnosti',\r\n      src: 'g'\r\n    }]\r\n\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Row>\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        <Container  style={{ overflow:'hidden'}}>\r\n        \r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand >\r\n                  {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                  <Image fluid  src={image} loading=\"eager\" style={{ width:'22rem', height:'22rem',marginTop: '+2rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link style={{ margin:'1rem'}}>\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      </Row>\r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row style={{width:'auto', display: 'flex'}}>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{width:'100%'}}>\r\n              \r\n              <Col md={{ span: 12, offset: 14 }}>\r\n                <Nav style={{width:'100%'}}>\r\n                    \r\n                    <div style={{fontSize: '1.4rem', paddingRight:'2rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {cat?.slice().sort((a, b) =>{return a.order - b.order}).map( (category) => (\r\n                              <LinkContainer to={`/categories/${category._id}`} key={category._id}>\r\n                                  <NavDropdown.Item  key={category._id}>\r\n                                      { category.name }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                    \r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faInfo}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Info\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {info?.map( (i) => (\r\n                              <LinkContainer to={`/${i.src}/`} key={i.id}>\r\n                                  <NavDropdown.Item className='click'  key={i.id}>\r\n                                      { i.value }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport  {useEffect} from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\nimport Image from 'react-bootstrap/Image'\r\nimport WebFont from 'webfontloader';\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../compontents/Footer.css'\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Poppins', 'Chilanka']\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <hr></hr>\r\n            {/* <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                <GoogleMap location={location} zoomLevel={17} />  \r\n\r\n            </Row> */}\r\n            <Row>\r\n              <Col style={{ }}>\r\n                <Image xs={6} md={4} src={image}\r\n                       \r\n                       fluid\r\n                       responsive='true'\r\n                       style={{width:'50%', height:'auto', objectFit:'fill'}}  >\r\n                       \r\n                </Image>\r\n                <div>\r\n                  Adresa: Prnjavorska 114, Budisava\r\n                </div>\r\n                <div>\r\n                  Telefon: 0652077257\r\n                </div>\r\n                <div>\r\n                  Email: <a href=\"mailto:rasadnikema@mail.com\">rasadnikema@mail.com</a> \r\n                </div>\r\n                <div style={{padding:'.5rem'}}>\r\n                    \r\n                    <a href='https://www.facebook.com/rasadnikema ' style={{margin:'0.5rem' }} title=\"Face\">\r\n                            <i className=\"fa-brands fa-facebook fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Twitter\">\r\n                            <i class=\"fa-brands fa-twitter\"></i>\r\n                    </a> */}\r\n                    <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                            <i className=\"fa-brands fa-instagram fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Messenger\">\r\n                            <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                    </a>\r\n                    <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Mail\">\r\n                            <i class=\"fa-regular fa-envelope\"></i>\r\n                    </a> */}\r\n                </div>\r\n              </Col>\r\n              <Col style={{margin:'2rem', paddingTop:'2rem'}}>\r\n                <h4 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif', marginBottom:'1.2rem'}}><strong>Korisni linkovi</strong></h4>\r\n                <Link to=\"/porucivanje\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Kako poručiti putem sajta</h5>\r\n                </Link>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Izrada plana sadnje</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Najčešća pitanja</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Način plaćanja</h5>\r\n                <Link to=\"/isporuka\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Isporuka</h5>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            \r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { useParams } from 'react-router';\r\nimport WebFont from 'webfontloader';\r\nimport '../compontents/Product.css'\r\n\r\nfunction Product({product, catId}) {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = () => {\r\n        \r\n        dispatch(addToCart(Number(product._id), Number(1)));\r\n        navigate(`/cart/?id=${product._id}&qty=${1}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n          google: {\r\n            families: ['Poppins', 'Chilanka']\r\n          }\r\n        });\r\n    }, [])\r\n\r\n  return (\r\n    <Card className={`my-1 p-1 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"success\"  style={{ width: '17.5rem', height: 'auto' }}>\r\n        <Link to={`/products/${product._id}/${catId}`}> \r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} loading='lazy' style={{width: '100%', height: '14rem' }}></Card.Img>\r\n            <Card.ImgOverlay style={{width: '95%', height: '14rem' }}>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '4px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n            <Card.ImgOverlay className=\"card-img-overlay d-flex align-items-end flex-column bd-highlight mb-3\" style={{width: '100%', height: '14rem' }}>\r\n                {product?.prodajno_mesto && \r\n                    <Card.Img src='https://policplantblob.blob.core.windows.net/policplant-banner/samo_na_projadnom_mestu1.png' \r\n                              loading='lazy'\r\n                              style={{width: '40%', height: '50%' }}>\r\n                    </Card.Img>}\r\n            </Card.ImgOverlay> \r\n        </Link> \r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link style={{ textDecoration: 'none' }} to={`/products/${product._id}`}> \r\n             <Card.Title as=\"h3\" >\r\n                 <div className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>{product?.name}</div>\r\n                 <div className='click' style={{ fontSize: '.8rem', fontStyle: 'italic', color:'#333333', fontFamily: 'Poppins'}}>{product?.botanicki_naziv}</div>\r\n             </Card.Title>\r\n             </Link> \r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h4\" style={{ color:'#83b735', fontSize: '1rem'}}>\r\n                    {product.price} RSD\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h6\"> */}\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            {/* </Card.Text> */}\r\n            <Button     variant=\"primary\" \r\n                        disabled={product.countInStock < 1} \r\n                        type='button'\r\n                        style={{background:'#83b735', border:'1px solid #83b735'}}\r\n                        onClick= {addToCartHandler}>\r\n                                Dodaj u Korpu\r\n            </Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-1 p-1  ${classes[\"img/-hover-zoom\"]} h-100 `} border=\"dark\"  style={{ width: '100%', height: '25rem' }}>\r\n        <Card.Header as=\"h6\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image} loading='lazy' style={{ width: '100%', height: '32vh', objectFit: 'cover' }}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\", textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block',fontSize: '1.6rem', color:'#333333'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (pk=null, keyword = '', page='') => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            // const { data } = await axios.get(`/api/products/?pk=${pk}&keyword=${keyword}&page=${page}`)\r\n            // return data;\r\n            if(pk === null){\r\n                const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n                return data;\r\n            }else{\r\n                const { data } = await axios.get(`/api/products/categoryProducts/${pk}`)\r\n                return data;\r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories, categories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    \r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        \r\n        //onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 500);\r\n    const initialRender = useRef(true);\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        onSearch(memoizedValue)\r\n\r\n     }, [memoizedValue, onSearch]);\r\n\r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        \r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [dispatch, debouncedSearchTerm, keyword]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid style={{display: 'flex', padding: '0.2rem'}}>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex', textAlign:'left' , justifyContent:'left' , width:'100%' }}>\r\n                \r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <h6><strong style={{color:'#333333'}}>Kategorija biljke</strong></h6>\r\n                        <CustomSelect  values={ categories?.slice().sort((a, b) =>{return a.order - b.order}).map(col => (\r\n                            { value: col.name, label: col.name}\r\n                            ))} onAction={setKategorija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n\r\n                    <h6><strong style={{color:'#333333'}}>Tip biljke</strong></h6>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setTip}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                \r\n                    <h6><strong style={{color:'#333333'}}>Pozicija za sadnju</strong></h6>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setPozicija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{}}>\r\n                    \r\n                    \r\n                    <h6><strong style={{color:'#333333'}}>Boja cveta</strong></h6>\r\n                        <Form.Control \r\n                            type='search'\r\n                            name='pretraga'\r\n                            inline ='true'\r\n                            placeholder='Unesite boju...'\r\n                            onChange={(e) => setBoja(e.target.value) }>\r\n                        </Form.Control>\r\n                   \r\n                </Row>\r\n                {/* style={{ display: 'flex', padding:'0.5rem', width: '100%'}} */}\r\n                <Row md={12} xl={12} style={{ }}> \r\n                        \r\n                        <h6><strong style={{color:'#333333'}}>Pretraga Proizvoda:</strong></h6>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Trazeni proizvod...'\r\n                                onChange={(e) => setPretraga(e.target.value) }>\r\n                            </Form.Control>     \r\n                </Row>\r\n\r\n                {/* <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row> */}\r\n            \r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import Carousel from 'react-bootstrap/Carousel';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CarouselFadeExample() {\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n  return (\r\n    <Carousel fade>\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselFadeExample;","import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport ImageButton from 'react-image-button';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 2 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n  };\r\n\r\nfunction MultiCaroseul(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const image1 = <Image\r\n            className='img-fluid shadow-5'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/banner-1.jpg\"\r\n            alt=\"First slide\"\r\n            rounded\r\n           \r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image2 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/banner2.jpg\"\r\n            alt=\"Second slide\"\r\n            rounded\r\n            style={{ height:'50%'}}\r\n            />\r\n    return (\r\n        <Carousel\r\n            swipeable={false}\r\n            draggable={false}\r\n            showDots={true}\r\n            responsive={responsive}\r\n            ssr={true} // means to render carousel on server-side.\r\n            infinite={true}\r\n            //autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\r\n            autoPlaySpeed={1000}\r\n            keyBoardControl={true}\r\n            customTransition=\"all .5\"\r\n            transitionDuration={500}\r\n            containerClass=\"carousel-container\"\r\n            removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n            //deviceType={this.props.deviceType}\r\n            dotListClass=\"custom-dot-list-style\"\r\n            itemClass=\"carousel-item-padding-40-px\"\r\n            >\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image1}\r\n                             zoomOnHover={0}\r\n                             buttonPosition=\"bottom\"\r\n                             alwaysShowButton={true} >\r\n                    <button onClick={() => { navigate('/categories/36')}} primary=\"true\"  className=\"btn success\" style={{ border: '2px solid black'}} > Cetinari pogledajte  </button>\r\n                </ImageButton>\r\n            </div>\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image2}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button onClick={() => { navigate('/categories/29')}} primary=\"true\" className=\"btn success\" style={{ border: '2px solid black'}} > Puzavice pogledajte </button>\r\n                </ImageButton>\r\n            </div> \r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default MultiCaroseul\r\n","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport CarouselFadeExample from '../compontents/StaticCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sliderClasses } from '@mui/material'\r\nimport { SimpleCarouselSlider } from 'react-simple-carousel-image-slider'\r\nimport Carousel from 'flat-carousel';\r\nimport MultiCaroseul from '../compontents/MultiCaroseul'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n//   const [ val, setVal ] = useState({\r\n//     color: '',\r\n//     high: [],\r\n//     type: [],\r\n//     category: [],\r\n//     flow: [],\r\n//     search: ''\r\n// })\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n    //setVal(value)\r\n    if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n     setToggle(false)\r\n     setCarucel(false)\r\n   } else{\r\n     setToggle(true)\r\n     setCarucel(true)\r\n   }\r\n }\r\n \r\n  const orderCategories = categories?.slice().sort((a, b) =>{return a.order - b.order})\r\n  \r\n\r\n  return (\r\n    <div>\r\n        {/* { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}   */}\r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        {/* { carucel && <CarouselFadeExample></CarouselFadeExample>}  */}\r\n        {/* { carucel && <SimpleCarouselSlider images={slike} autoplay={false} width= \"100%\" height=\"450px\"/>} */}\r\n        {/* {  carucel && <DragCoruseal></DragCoruseal>} */}\r\n        { carucel && <MultiCaroseul></MultiCaroseul>}\r\n\r\n        <h1 style={{color:'#333333'}}> {carucel ? 'Detaljna pretraga:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (\r\n                        <Row  className={'gy-2'}>\r\n                          {orderCategories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row className={'gy-2'}>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from 'dompurify';\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n      })\r\n    dispatch(listProducts(id))\r\n        \r\n }, [dispatch, id]);\r\n\r\n const htmlString = {__html: DOMPurify.sanitize(catProducts?.find( cat => cat._id?.toString() === id)?.description)}\r\n \r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success  my-3'> Nazad</Link>\r\n        <h1 style={{color:'#333333'}}>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        \r\n        {/* <p>{ catProducts?.find( cat => cat._id?.toString() === id)?.description}</p> */}\r\n        <p dangerouslySetInnerHTML={htmlString}></p>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} catId={id} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import Table from 'react-bootstrap/Table';\r\n\r\nconst Ikonice = ({product}) => {\r\n\r\n    const  { mesto_sadnje, high:visina_biljke , type_of_plant, sirina_biljke  } = product\r\n    let filter = null\r\n    let hlad = null\r\n    let polusenka = null\r\n    let sunce = null\r\n    if(Array.isArray(mesto_sadnje)){\r\n        const [sunce, hlad , polusenka] = mesto_sadnje\r\n        filter = {sunce, hlad, polusenka, visina_biljke , type_of_plant, sirina_biljke }\r\n               \r\n    }else{\r\n        let [sunce, hlad , polusenka] = [mesto_sadnje]\r\n        filter = {sunce, hlad , polusenka, visina_biljke , type_of_plant, sirina_biljke }\r\n     \r\n    }\r\n    \r\n    \r\n    const images = [\r\n        {\r\n            type:'type_of_plant',\r\n            value: filter.type_of_plant,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/listopadno50.png'\r\n        },\r\n        {\r\n            type:'polusenka',\r\n            value: filter.polusenka,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/polusenka50.png'\r\n        },\r\n        {\r\n            type:'sunce',\r\n            value: filter.sunce,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/sunce50.png'\r\n        },\r\n        {\r\n            type:'hlad',\r\n            value: filter.hlad,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/senka50.png'\r\n        },\r\n        {\r\n            type:'visina_biljke',\r\n            value: filter.visina_biljke,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/visina-biljke50.png'\r\n        },\r\n        {\r\n            type: 'sirina_biljke',\r\n            value: filter.sirina_biljke,\r\n            src: 'https://policplantblob.blob.core.windows.net/policplant-banner/sirina-biljke50.png'\r\n        }\r\n    ]\r\n\r\n    \r\n    const filterImages = images?.filter(x => x.value?.length)\r\n   \r\n    \r\n    return (\r\n        <div>\r\n            {filterImages && <Table style={{width:'auto', tableLayout: 'fixed'}} striped >\r\n                <tbody>\r\n                    <tr align='center'>\r\n                        {filterImages?.map(image => (\r\n                            <th key={image.value} style={{width:'1rem'}}><img src={image.src} alt={image.value}></img></th>\r\n                        ))}\r\n                    </tr>        \r\n                    <tr>\r\n                        {filterImages?.map(image => (\r\n                            <td key={image.value} align='center' style={{width:'1rem'}}>{image.value}</td>\r\n                        ))} \r\n                    </tr>\r\n                \r\n                </tbody>\r\n            </Table>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Ikonice","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container, ListGroupItem} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\nimport XMLToReact from 'xml-to-react';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Ikonice from '../compontents/UI/Ikonice';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id, catId } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const [images, setImages] = useState(null)\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n            dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      \r\n      //navigate(`/cart/?id=${id}&qty=${qty}`)\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n  }\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if(product?.images){\r\n        const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n        const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n            return {\r\n                image: image?.image,\r\n                id: image?.id\r\n            }\r\n        })\r\n\r\n        const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n        if(prvaSlika){\r\n            targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id})\r\n        }\r\n\r\n        const imgs = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n            return {\r\n                original: image.image,\r\n                thumbnail: image.image\r\n            }\r\n        })\r\n        setImages(imgs)\r\n    }\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [product?.images])  \r\n\r\n const htmlString = {__html: DOMPurify.sanitize(product?.description)}\r\n\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb style={{ paddingTop:'2rem', textDecoration: 'none'}}>\r\n          <Breadcrumb.Item href=\"/#/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item as='li' style={{ textDecoration:'none', textDecorationLine: 'none'}} href={`#/categories/${catId}`}>\r\n                \r\n            <font style={{color:'green' , textDecoration: 'none', textDecorationLine: 'none'}}>{product?.category?.find(x => x._id.toString() === catId)?.name}</font> \r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            {product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success my-3'> Nazad</Link>\r\n        {userInfo && <Link to={`/admin/product/${id}/edit`} className='btn btn-success my-3' style={{ marginLeft:'3rem'}}> Edit Biljke</Link>}\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={6} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ color:'#333333', fontSize:'2.8rem', fontFamily: 'Oswald, sans-serif'}}>{product?.name}</strong> <i style={{fontSize:'1.4rem' , color:'#333333'}}>{product?.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product?.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product?.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product?.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product?.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {/* {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>} */}\r\n                                        {product?.mesto_sadnje?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {Array.isArray(product?.mesto_sadnje) ? product?.mesto_sadnje?.join(', ') : product?.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product?.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product?.vre_cve) ? product?.vre_cve?.join(', ') : product?.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product?.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product?.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.type_of_plant && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product?.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.privlaci_insekte && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product?.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.brzina_rasta && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product?.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.prezimljava && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product?.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.sirina_biljke && <ListGroup.Item>\r\n                                            <strong> Sirina:</strong> {product?.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.velicina_slanja && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product?.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item style={{paddingBottom:'2rem'}}>\r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <br />\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {product?.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product?.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )}\r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                   \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1}\r\n                                                                    onClick={() => window.open('#/cart',\"_self\")}>\r\n                                                                        Poruči\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                        <ListGroupItem style={{paddingTop:'2rem'}}>\r\n                                            {product && <Ikonice product={product}></Ikonice>}\r\n                                        </ListGroupItem>\r\n                                    </ListGroup>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <div style={{margin:'0.3rem'}}>\r\n                                        Share:\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Face\">\r\n                                                <i className=\"fa-brands fa-facebook\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Twitter\">\r\n                                                <i className=\"fa-brands fa-twitter\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                                                <i className=\"fa-brands fa-instagram\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Messenger\">\r\n                                                <i className=\"fa-brands fa-facebook-messenger\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Mail\">\r\n                                                <i className=\"fa-regular fa-envelope\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    \r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                {/* <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup> */}\r\n                                {/* {product?.description && description} */}\r\n                                {/* <Container child={ doc}/> \r\n                                {doc} */}\r\n                                <p dangerouslySetInnerHTML={htmlString}></p>\r\n                                \r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  \r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1 style={{color:'green'}}>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link style={{ textDecoration:'none'}} to={`/products/${item.id}`}><strong><h4 style={{color:'green', textDecoration:'none'}}>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"success\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio color=\"success\"/>} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio color=\"success\"/>} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio color=\"success\"/>} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio color=\"success\"/>} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block btn-success'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block btn-success'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider', textDocorationColor:'green' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab style={{color:'green'}} label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary' className='m-2 py-2 btn-success'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n           \r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link as='div' style={{color:'green'}} to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"success\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2 style={{color:'green'}}>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n           \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img, itms) => {\r\n\r\n            const items = itms\r\n            const files = img //e.target.files\r\n            const formData = new FormData()\r\n            if(items){\r\n                formData.append('items', JSON.stringify(items))\r\n            }\r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n           \r\n            \r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images, items)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this product?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col >\r\n                <h1 style={{color:'green'}}>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='btn-success my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>RB</th>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Novo</th>\r\n                                    <th>Popust</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products?.slice().sort((a,b) => a._id - b._id).map((product, index) => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td style={{width:'4rem'}}>{index + 1}</td>\r\n                                        <td style={{width:'4rem'}}>{product._id}</td>\r\n                                        <td style={{width:'15rem'}}><strong>{product.name}</strong></td>\r\n                                        <td style={{width:'5rem'}}>{product.price} din</td>\r\n                                        <td style={{width:'20rem'}}>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td style={{width:'4rem'}}>{product.novo ?? product.novo ? 'Yes' : 'No'}</td>\r\n                                        <td style={{width:'4rem'}}>{product.popust ?? product.popust ? product.popust : 'No'}</td>\r\n                                        <td style={{width:'20rem'}}>{product.color}</td>\r\n                                        <td style={{whiteSpace: \"nowrap\", width:'5rem'}}>{product.countInStock}</td>\r\n                                        <td style={{width:'5rem'}}><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td style={{width:'5rem'}}>\r\n                                                <Button  className='btn-sm' variant=\"danger\" onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    \r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                \r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                \r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images, itms) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const items = itms?.map((item, index) => {\r\n                return {...item, order: index}\r\n            })\r\n            const formData = new FormData()\r\n            \r\n            // if(images[0] instanceof File ){\r\n                \r\n            //     const arr = Array.from(files)\r\n            //     arr?.forEach(x => \r\n            //         formData.append('images', x)\r\n            //     )\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }else{\r\n                \r\n            //     const arr = Array.from(files?.map(x => x.id))\r\n                \r\n            //     formData.append('images', arr)\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }\r\n            console.log('Items',items)\r\n            console.log('Images', files)\r\n            \r\n            \r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n            \r\n            formData.append('product_id', product_id)\r\n            formData.append('items', JSON.stringify(items))\r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images, items)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    \r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      onDoubleClick={()=> console.log('Double click')}\r\n      alt=\"img\"/>\r\n   \r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef, useMemo  } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\ntoast.configure()\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n    const [items, setItems] = useState([]);\r\n    const [flick, setFlick] = useState(false);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    const prod = useSelector(state => state.product)\r\n    const { product: prodProduct,  success : prodSuccess} = prod\r\n\r\n    const ukupno = useRef([])\r\n\r\n    const SortablePhoto = SortableElement(item => <Photo {...item} />);\r\n    const SortableGallery = SortableContainer(({ items }) => (\r\n            <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n        \r\n        ));\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        const newItems = items?.map(image => {\r\n            return {\r\n                src:image.src,\r\n                name: image.name,\r\n                width:1,\r\n                height:1\r\n            }\r\n        })\r\n        console.log('Itemi:', [...newItems, ...photos])\r\n        console.log('Images:', evnt.target.files)\r\n        setItems([...newItems, ...photos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(success){\r\n            const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n            const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n                return {\r\n                    name: image.image_name,\r\n                    image: image?.image,\r\n                    id: image?.id\r\n                }\r\n            })\r\n\r\n            \r\n            const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n            if(prvaSlika){\r\n                targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id, name: prvaSlika?.image_name})\r\n            }\r\n\r\n            const photos = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n                return {\r\n                    name: image.name,\r\n                    src:image.image,\r\n                    id:image.id,\r\n                    width:1,\r\n                    height:1\r\n                }\r\n            })\r\n            \r\n            setImage(null)\r\n            setItems(photos) \r\n        }   \r\n    }, [success,product?.name, product?.images])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n\r\n        \r\n        if(success){\r\n            \r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n            setProdajnoMesto(product.prodajno_mesto)\r\n            setNovo(product.novo)\r\n            setPopust(product.popust)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, product?.name, success, prodSuccess])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust\r\n        }, images, items))\r\n        setItems(ukupno.current)\r\n        // setImage(ukupno.current.map((index,item) => {\r\n        //     return {\r\n        //         id:item.id,\r\n        //         image:item.src,\r\n        //         order: index,\r\n        //         product:id\r\n        //     }\r\n        // }))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n        notify()\r\n        setImage([])\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_mesto_sadnje = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data_mesto_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n  \r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex},e) => {\r\n\r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        // setImage(arrayMoveImmutable(Array.from(items?.map((item, index) => {\r\n        //     return {\r\n        //         id: item.id,\r\n        //         image: item.src,\r\n        //         order:index,\r\n        //         product: id\r\n        //     }\r\n        // })), oldIndex, newIndex));\r\n    };\r\n\r\n    const memoizedImageCard = useMemo(() => {\r\n        return (\r\n            <Row>\r\n                <SortableGallery items={items}   onSortEnd={onSortEnd} axis={\"xy\"} />\r\n            </Row>\r\n        )\r\n    },[items]);\r\n\r\n    return (\r\n        <div className=\"ProductEditScreen\"\r\n           >\r\n        <Link to={-1} className='btn btn-success  my-3'> \r\n            Nazad\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1 style={{color:'green'}}>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='id'>\r\n                                <Form.Label><strong>ID</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={id}\r\n                                    disabled\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto'>\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='prodaja'\r\n                                    defaultChecked={prodajno_mesto}\r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo'>\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='novo'\r\n                                    defaultChecked={novo}\r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust'>\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel value=\"10\" control={<Radio color='success'/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color='success'/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color='success'/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'\r\n                                onContextMenu={(e) => {\r\n                                    \r\n                                    e.preventDefault(); // prevent the default behaviour when right clicked\r\n                                    const image = JSON.stringify(e.target.src)\r\n                                    const newItems = items.filter(item => JSON.stringify(item.src) !== image)\r\n\r\n                                    console.log('Itemi:', newItems)\r\n                                    console.log('Imagesi:', images)\r\n                                    setItems(newItems)\r\n                                    \r\n                                    // if(images){\r\n                                    //     const newImages= images.map((item, index) => {\r\n                                    //         return {\r\n                                    //             image: item.src,\r\n                                    //             order: index,\r\n                                    //             product: id,\r\n                                    //             id: item.id\r\n                                    //         }\r\n                                    //     })\r\n                                       \r\n                                    //     //setImage(newImages)\r\n                                    // }\r\n                                    \r\n                                    \r\n                                    // const slanje= []\r\n                                    // newImages.forEach(x => {\r\n                                    //     var file = new File([\"hello\"], x.image\r\n                                    //     , {type:\"image/png\", lastModified: new Date().getTime()})\r\n                                    //     slanje.append(file)\r\n                                    // })\r\n                                    // console.log('Za slanje:', slanje)\r\n                                }}>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                {memoizedImageCard} \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option>{mesto_sadnje}</option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data_mesto_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             options={data_mesto_sadnje}\r\n                                             onChange={handleChange_mesto_sadnje}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>{type}</option>\r\n                                    {!allcategories ? [...Array.from(...allcategories?.type_of_plant), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option key={0}>{type}</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>{orezivanje}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.orezivanje), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option key={0}>{orezivanje}</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>   \r\n\r\n                            {/* <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>{privlaci_insekte}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.privlaci_insekte), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option key={0}>{privlaci_insekte}</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>{brzina_rasta}</option>\r\n                                    {!allcategories ? [...Array.from(allcategories?.brzina_rasta),\"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option key={0}>{brzina_rasta}</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success'  className='my-3'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        \r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n       \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust  \r\n        }, images, items))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_Mesto = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    const mesta_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist' className='btn btn-success my-3'>\r\n                Nazad\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1 style={{color:'green'}}>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label id='label_name'><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto' className=\"mb-3\">\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                   \r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo' className=\"mb-3\">\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    \r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust' className=\"mb-3\">\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                        color=\"success\"\r\n                                    >\r\n                                        <FormControlLabel value=\"0\" control={<Radio color=\"success\"/>} label=\"0%\" />\r\n                                        <FormControlLabel value=\"10\" control={<Radio color=\"success\"/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color=\"success\"/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color=\"success\"/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n                            {/* <Form.Group controlId='popust'>\r\n                                <Form.Label><strong>POPUST</strong></Form.Label>\r\n                                \r\n                                <div key='radio' className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        inline\r\n                                        label=\"10%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='10'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"20%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='20'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        name=\"group1\"\r\n                                        label=\"30%\"\r\n                                        type='radio'\r\n                                        id='30'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    </div>\r\n                               \r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    \r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={mesta_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={mesta_sadnje}\r\n                                             onChange={handleChange_Mesto}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option  id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success' className='my-3'>\r\n                                Kreiraj biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","\r\n\r\nfunction InformacijeIsporuka() {\r\n\r\nwindow.scrollTo({\r\n    top: 100,\r\n    left: 100,\r\n    behavior: 'smooth'\r\n    });\r\n  return (\r\n    <div>\r\n      <h3>Isporuka</h3>\r\n        <div>\r\n            Minimalni iznos porudžbine ne može da bude manji od 1000rsd. Porudžbine koje nemaju naveden minimum neće se isporučivati. \r\n            Troškovi isporuke na celoj teritoriji Srbije posebno se zaračunavaju i plaćaju, u skladu sa cenovnikom Post Express službe i iznose od 450,00 dinara, pa naviše,\r\n            zavisno od težine i vrednosti pošiljke. Maksimalna težina paketa za slanje PostExpress službom je 20 kg, u kutijama čije dimenzije ne prelaze 60x50x50cm.\r\n            U suprotnom se pošiljka šalje kao CC paket, koja ima malo duži rok isporuke. Ukoliko ima više paketa za svaki se plaćaju troškovi isporuke.\r\n            Prilikom prijema plaća se vrednost robe + troškovi isporuke. Kako bi pošiljka bila sigurno i brzo dostavljena do kupca, potrebno je da kupac navede tačne podatke \r\n            prilikom formiranja porudžbine. Vreme isporuke je od 2-5 radnih dana. \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InformacijeIsporuka;\r\n","function InformacijePorucivanje() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3>Poručivanje</h3>\r\n            <div>\r\n                <p>Minimalna vrednost pošiljke koju šaljemo je 1000rsd.</p>\r\n                <p>Porudžbinu možete izvršiti na sledeće načine:</p>\r\n                <strong>Putem našeg sajta</strong> – sve biljke koje želite možete poručiti putem našeg sajta, to ćete uraditi dodavanjem proizvoda u korpu i upisivanjem ličnih podataka koji će biti upotrebljeni za potrebe slanja vašeg paketa. \r\n                <p><strong>Telefonskim putem </strong>– vrlo rado ćemo vam se javiti na svaki poziv! Ukoliko imate nekih dodatnih pitanja o biljkama i sadnicama koje želite da poručite, potreban vam je savet ili imate neku drugu nedoumicu, slobodno nas pozovite. Prilikom telefonskog razgovora možete odmah i izvršiti vašu porudžbinu kao i kompletan dogovor oko slanja i isporuke. Naš kontakt telefon je 065/20-77-257. </p>\r\n                <p><strong>Putem društvene mreže Facebook</strong> –  Sva vaša pitanja i porudžbine možete nam uputiti i putem društvene mreže Facebook. Vrlo rado ćemo vam odgovoriti u najkraćem mogućem roku.</p>\r\n                <strong>Putem e-maila</strong> – Slobodno nam pišite i na našu email adresu <a href = \"mailto: rasadnikema@gmail.com\">rasadnikema@gmail.com</a>.  \r\n                <p><strong>Dolaskom u rasadnik</strong> – ukoliko ste u blizini ili vam kilometri ne predstavljaju problem, uvek ste dobrodošli u naš rasadnik koji se nalazi u Budisavi (18km od Novog Sada).\r\n                 Ono što je potrebno da uradite prilikom dolaska, jeste da nam se jedan dan unapred najavite na naš kontakt telefon 065/20-77-257, kako bismo vam rekli u koje vreme je najbolje da nas posetite. Svakom kupcu želimo maksimalno da posvetimo pažnju i vreme, te nam je zbog planiranja ovih obaveza važno da znamo kada možemo da vas očekujemo 🙂  </p>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePorucivanje;","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\nimport InformacijeIsporuka from './screens/InformacijeIsporuka'\r\nimport InformacijePorucivanje from './screens/InformacijePorucivanje'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={{   backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id/:catId\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n            <Route path=\"/isporuka\" element={<InformacijeIsporuka />}></Route>\r\n            <Route path=\"/porucivanje\" element={<InformacijePorucivanje />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}