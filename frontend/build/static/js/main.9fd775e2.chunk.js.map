{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","store/category-actions.js","compontents/Header.js","compontents/UI/LocationPin.jsx","compontents/UI/GoogelMap.jsx","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/MDBCarusel.js","screens/HomeScreen.js","screens/CategoryScreen.js","store/cart-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","screens/ProductEditScreen.js","compontents/UI/Image/ImageGallery.jsx","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","useNavigate","useDispatch","useLocation","useEffect","setItem","Form","onSubmit","e","preventDefault","Container","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","style","background","i","login","email","password","dispatch","fetchData","config","headers","axios","post","data","stringify","response","detail","message","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","get","cartData","Header","Navbar","expand","collapseOnSelect","to","Brand","Text","textAlign","fontSize","faPhone","Nav","Link","HeaderCardButton","onShowCart","bg","Toggle","pading","Collapse","margin","size","NavDropdown","title","border","display","map","category","Item","_id","span","offset","faAnchor","faContactBook","user_name","event","faUser","isAdmin","LocationPin","text","locationIcon","GoogleMap","location","zoomLevel","bootstrapURLKeys","key","defaultCenter","defaultZoom","lat","lng","address","Footer","backgroundColor","Rating","Product","Card","width","height","Img","src","images","image","ImgOverlay","countInStock","Title","color","padding","marginBottom","Body","as","price","Kategorija","productNumber","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","productDetails","listFilterProducts","val","high","flow","place","search","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","navigate","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","useMemo","initialRender","useRef","current","count","xl","justifyContent","alignItems","placeholder","mesto_sadnje","col","label","type_of_plant","disabled","Loader","Spinner","animation","role","Message","children","Alert","Heading","Paginate","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","MDBCarusel","itemRef","productTop","interval","c","Image","ref","fluid","rounded","offsetPosition","right","objectFit","HomeScreen","carucel","setCarucel","toggle","setToggle","setVal","screenType","useScreenType","cat","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","customerLogo","setSearchValue","isMobile","isDesktop","isLargeDesktop","sm","lg","xs","CategoryScreen","catProducts","useParams","window","scrollTo","Breadcrumb","href","active","toString","includes","addToCart","getState","removeFromCart","addDostavaAndPlacanjeCart","ProductScreen","match","setQty","productDet","WebFont","load","google","families","top","left","behavior","class","alt","img","ListGroup","fontFamily","botanicki_naziv","join","place_of_planting","Array","isArray","vre_cve","orezivanje","Number","keys","description","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","files","formData","FormData","arr","from","forEach","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","whiteSpace","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateProductDetails","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","privlaci_insekte","setPrivlaciInsekte","brzina_rasta","setBrzinaRasta","prezimljava","setPrezimljava","setBotanickiNaziv","setHigh","velicina_slanja","setVelicinaSlanja","setType","sirina_biljke","setSirinaBiljke","setCategory","uploading","productUpd","data2","POSITION","TOP_RIGHT","autoClose","defaultValue","controlid","multiple","Select","minMenuHeight","openMenuOnFocus","ImagesGallery","handleFirstImage","url","ProductCreateScreen","prevImages","setPrevImages","inputName","inputHesh","notify","onKeyPress","focus","checkPress","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","rows","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":";yFACAA,EAAOC,QAAU,CAAC,aAAa,yBAAyB,MAAQ,oBAAoB,QAAU,sBAAsB,cAAc,0BAA0B,OAAS,qB,sBCArKD,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0B,sBCA1KD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,KAAO,+B,sBCAjJD,EAAOC,QAAU,CAAC,iBAAiB,gCAAgC,gCAAgC,+C,sBCAnGD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,yBAAyB,aAAa,8B,sBCAvGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,2BAA2B,eAAe,6BAA6B,GAAK,mB,sBCA3ID,EAAOC,QAAU,CAAC,MAAQ,2B,yJCCpBC,EAAmBC,YAAY,CACjCC,KAAM,cACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,GACPC,KAAK,EACLC,MAAM,GAEVC,SAAS,CACLC,mBAAkB,SAACC,GACfA,EAAMN,SAAU,EAChBM,EAAMP,SAAW,EACrB,EAEAQ,mBAAkB,SAACD,EAAOE,GACdF,EAAMN,SAAU,EAChBM,EAAMP,SAAWS,EAAOC,QAAQV,SAChCO,EAAMJ,KAAOM,EAAOC,QAAQP,KAC5BI,EAAMH,MAAQK,EAAOC,QAAQN,KACzC,EAEAO,gBAAe,SAACJ,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAIKE,EAAqBhB,EAAiBiB,QACtCC,EAAqBlB,EAAiBmB,QC9B7CC,EAAoBnB,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVkB,WAAY,GACZC,cAAc,GACdjB,SAAS,EACTC,MAAO,GACPC,KAAK,EACLC,MAAM,GAEVC,SAAS,CACLc,oBAAmB,SAACZ,GAChBA,EAAMN,SAAU,EAChBM,EAAMU,WAAa,EACvB,EAEAG,oBAAmB,SAACb,EAAOE,GACfF,EAAMN,SAAU,EAChBM,EAAMU,WAAaR,EAAOC,QAAQO,WAClCV,EAAMW,cAAgBT,EAAOC,QAAQQ,cACrCX,EAAMJ,KAAOM,EAAOC,QAAQP,KAC5BI,EAAMH,MAAQK,EAAOC,QAAQN,KACzC,EAEAiB,iBAAgB,SAACd,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAIKY,EAAsBN,EAAkBH,QACxCU,EAAsBP,EAAkBD,QChC/CS,EAAsB3B,YAAY,CACpCC,KAAM,UACNC,aAAc,CACN0B,QAAS,CAAC,EACVxB,SAAS,EACTC,MAAM,IAGdG,SAAS,CACLqB,sBAAqB,SAACnB,GAClBA,EAAMN,SAAU,CAEpB,EAEA0B,sBAAqB,SAACpB,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAMkB,QAAUhB,EAAOC,QACvBH,EAAML,MAAQ,EAC1B,EAEA0B,mBAAkB,SAACrB,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAIKmB,EAAwBL,EAAoBX,QAC5CiB,EAAwBN,EAAoBT,QC5BnDgB,EAAuBC,aAAaC,QAAQ,aACnBC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACzBG,EAAYvC,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACVsC,UAAUN,EACVO,QAAQ,GACRC,SAAS,IAEblC,SAAS,CACLmC,YAAW,SAACjC,EAAOE,GAEf,IAAMgC,EAAUhC,EAAOC,QACjBgC,EAAYnC,EAAM8B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAQI,EAAE,IAC5DH,EACKnC,EAAM8B,UAAUM,MAAK,SAAAG,GAAI,OAAIA,EAAKD,KAAOH,EAAUG,EAAE,IAAEE,IAAMN,EAAQM,IAIrExC,EAAM8B,UAAUW,KAAKP,EAEjC,EAEAQ,eAAc,SAAC1C,EAAOE,GACd,IAAMoC,EAAKpC,EAAOC,QACZwC,EAAkB3C,EAAM8B,UAAUc,QAAO,SAAAP,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAC/DtC,EAAM8B,UAAYa,CAC1B,EAEDE,eAAc,SAAC7C,EAAOE,GAEjBF,EAAM8B,UAAU,EACrB,EAEAgB,sBAAqB,SAAC9C,EAAOE,GACxB,IAAM6C,EAAM7C,EAAOC,QACnBH,EAAM+B,QAAUgB,EAAIhB,QACpB/B,EAAMgC,SAAWe,EAAIf,QAC1B,EAEAgB,oBAAmB,SAAChD,EAAOE,GACtB,IAAMoC,EAAKpC,EAAOC,QAClBH,EAAM8B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAAEE,KAAO,CACnD,EACAS,iBAAgB,SAACjD,EAAOE,GACvB,IAAMoC,EAAKpC,EAAOC,QAClBH,EAAM8B,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOA,CAAE,IAAEE,KAAO,CACnD,KAIUU,EAAcrB,EAAUvB,QACxB6C,EAActB,EAAUrB,QCrD/B4C,EAAsB3B,aAAaC,QAAQ,YAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEzB2B,EAAY/D,YAAY,CACtBC,KAAM,OACNC,aAAc,CACV8D,SAAUF,EACV1D,SAAS,EACTC,MAAO,IAEXG,SAAU,CACNyD,iBAAgB,SAACvD,GACbA,EAAMN,SAAU,CAEpB,EAEA8D,iBAAgB,SAACxD,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAMsD,SAAWpD,EAAOC,OAC5B,EAEAsD,cAAa,SAACzD,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EAEAuD,WAAU,SAAC1D,EAAOE,GACdF,EAAMsD,SAAW,IAErB,KAMCK,EAAcN,EAAU/C,QACxBsD,EAAcP,EAAU7C,QCrC/B4C,EAAsB3B,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEEmC,EAAoBvE,YAAY,CACpCC,KAAM,eACNC,aAAc,CACZ8D,SAAUF,EACV1D,SAAS,EACTC,MAAO,IAETG,SAAU,CACRgE,oBAAmB,SAAC9D,GAClBA,EAAMN,SAAU,CAClB,EAEAqE,oBAAmB,SAAC/D,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAMsD,SAAWpD,EAAOC,OAC1B,EAEA6D,iBAAgB,SAAChE,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACvB,EAEAuD,WAAU,SAAC1D,EAAOE,GAChBF,EAAMsD,SAAW,IACnB,KAMSW,EAAsBJ,EAAkBvD,QACxC4D,EAAsBL,EAAkBrD,QClC/C2D,EAAmB7E,YAAY,CAC7BC,KAAM,OACNC,aAAc,CACV4E,KAAM,CAAC,EACP1E,SAAS,EACTC,MAAO,IAEXG,SAAU,CACNuE,mBAAkB,SAACrE,GACfA,EAAMN,SAAU,CAEpB,EAEA4E,mBAAkB,SAACtE,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAMoE,KAAOlE,EAAOC,OACxB,EAEAoE,gBAAe,SAACvE,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EAEAqE,iBAAgB,SAACxE,EAAOE,GACpBF,EAAMoE,KAAO,CAAC,CAElB,KAQCK,EAAqBN,EAAiB7D,QACtCoE,EAAqBP,EAAiB3D,QCnC7CmE,EAAyBrF,YAAY,CACnCC,KAAM,oBACNC,aAAc,CACV8D,SAAU,CAAC,EACX5D,SAAS,EACTC,MAAO,GACPiF,SAAS,GAEb9E,SAAU,CACN+E,yBAAwB,SAAC7E,GACrBA,EAAMN,SAAU,CAEpB,EAEA4E,mBAAkB,SAACtE,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAMsD,SAAWpD,EAAOC,QACxBH,EAAM4E,SAAS,CACnB,EAEAE,sBAAqB,SAAC9E,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACA4E,uBAAsB,SAAC/E,EAAOE,GAC1BF,EAAMsD,SAAW,CAAC,CACtB,KAQC0B,EAA2BL,EAAuBrE,QAClD2E,EAA2BN,EAAuBnE,QCpCzD0E,EAA6BzD,aAAaC,QAAQ,mBACzBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,CAAC,EAE1ByD,EAAgB7F,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACX4F,gBAAiBF,GAEpBpF,SAAS,CAELuF,mBAAkB,SAACrF,EAAOE,GAElBF,EAAMoF,gBAAkBlF,EAAOC,OAEvC,KAKKmF,EAAkBH,EAAc7E,QAChCiF,EAAkBJ,EAAc3E,QCpBvCgF,EAAelG,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACViG,cAAc,IAElB3F,SAAS,CACL4F,kBAAiB,SAAC1F,EAAOE,GAErBF,EAAMyF,cAAgBvF,EAAOC,OACjC,KAIKwF,EAAiBH,EAAalF,QAC9BsF,EAAiBJ,EAAahF,QCdrCqF,EAAavG,YAAY,CAC3BC,KAAM,QACNC,aAAc,CACXE,SAAS,EACTkF,SAAS,EACTkB,MAAM,CAAC,EACPnG,MAAO,IAEVG,SAAS,CACLiG,mBAAkB,SAAC/F,EAAOE,GAEtBF,EAAMN,SAAU,CACpB,EAEAsG,mBAAkB,SAAChG,EAAOE,GAElBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,EAChB5E,EAAM8F,MAAQ5F,EAAOC,QACrBH,EAAML,MAAQ,EACtB,EAEAsG,gBAAe,SAACjG,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EAEA+F,iBAAgB,SAAClG,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAM8F,MAAQ,CAAC,EACf9F,EAAML,OAAQ,EACdK,EAAM4E,SAAU,CACpB,KAKKuB,EAAeN,EAAWvF,QAC1B8F,EAAeP,EAAWrF,QCvCjC6F,EAAoB/G,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVsG,MAAM,CAAC,EACPpG,SAAS,EACTC,MAAO,MAEXG,SAAS,CACLwG,oBAAmB,SAACtG,GAChBA,EAAMN,SAAU,CAEpB,EAEA6G,oBAAmB,SAACvG,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAM8F,MAAQ5F,EAAOC,OAC7B,EAEAqG,iBAAgB,SAACxG,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAIKsG,EAAsBJ,EAAkB/F,QACxCoG,EAAsBL,EAAkB7F,QCzB/CmG,EAAgBrH,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACXE,SAAS,EACTkF,SAAS,GAGZ9E,SAAS,CACL8G,gBAAe,SAAC5G,EAAOE,GAEnBF,EAAMN,SAAU,CACpB,EAEAmH,gBAAe,SAAC7G,EAAOE,GAEfF,EAAMN,SAAU,EAEhBM,EAAM4E,SAAU,CACxB,EAEAkC,aAAY,SAAC9G,EAAOE,GAChBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EAEA4G,cAAa,SAAC/G,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CACpB,KAKKoC,EAAkBL,EAAcrG,QAChC2G,EAAkBN,EAAcnG,QCnCvC0G,EAA0B5H,YAAY,CACxCC,KAAM,eACNC,aAAc,CACV2H,OAAO,GACPzH,SAAS,EACTC,MAAO,MAEXG,SAAS,CACLsH,0BAAyB,SAACpH,GACtBA,EAAMN,SAAU,CAEpB,EAEA2H,0BAAyB,SAACrH,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAMmH,OAASjH,EAAOC,OAC9B,EAEAmH,uBAAsB,SAACtH,EAAOE,GAC1BF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACAoH,wBAAuB,SAACvH,EAAOE,GAC3BF,EAAMN,SAAU,EAChBM,EAAMmH,OAAS,EACnB,KAIKK,EAA4BN,EAAwB5G,QACpDmH,EAA4BP,EAAwB1G,QC1B3DkH,IAJsBjG,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGzCpC,YAAY,CAC1BC,KAAM,WACNC,aAAc,CACVmI,MAAO,GACPjI,SAAS,EACTC,MAAO,MAEXG,SAAU,CACN8H,gBAAe,SAAC5H,GACZA,EAAMN,SAAU,CAEpB,EAEAmI,gBAAe,SAAC7H,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAM2H,MAAQzH,EAAOC,QACrBH,EAAML,MAAQ,IAClB,EAEAmI,aAAY,SAAC9H,EAAOE,GAChBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrB4H,QAAQC,IAAI,uBAChB,EAEAC,cAAa,SAACjI,EAAOE,GACjBF,EAAM2H,MAAQ,EAElB,MAMCO,GAAkBR,GAAcpH,QAChC6H,GAAkBT,GAAclH,QCnCvC4H,IAJsB3G,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGvCpC,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACVoF,SAAS,EACTlF,SAAS,EACTC,MAAO,MAEXG,SAAU,CACNuI,kBAAiB,SAACrI,GACdA,EAAMN,SAAU,CAEpB,EAEA4I,kBAAiB,SAACtI,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CACpB,EAEA2D,eAAc,SAACvI,EAAOE,GAClBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACAqI,gBAAe,SAACxI,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CACpB,MAMC6D,GAAoBL,GAAgB9H,QACpCoI,GAAoBN,GAAgB5H,QCpC3CmI,GAAoBrJ,YAAY,CAClCC,KAAM,eACNC,aAAc,CACVoF,SAAQ,EACRlF,SAAS,EACTC,MAAO,MAEXG,SAAS,CACL8I,oBAAmB,SAAC5I,GAChBA,EAAMN,SAAU,CAEpB,EAEAmJ,oBAAmB,SAAC7I,EAAOE,GACfF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CAC5B,EAEAkE,iBAAgB,SAAC9I,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACA4I,kBAAiB,SAAC/I,EAAOE,GACrBF,EAAM4E,SAAU,EAChB5E,EAAMN,SAAU,EAChBM,EAAML,MAAS,IACnB,KAKKqJ,IADsBL,GAAkBrI,QAClBqI,GAAkBnI,SC/B/CyI,GAAe3J,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,MAGXG,SAAS,CACLoJ,eAAc,SAAClJ,GACXA,EAAMN,SAAU,EAChBM,EAAMP,SAAW,EACrB,EAEA0J,eAAc,SAACnJ,EAAOE,GACVF,EAAMN,SAAU,EAChBM,EAAMP,SAAWS,EAAOC,OAEpC,EAEAiJ,YAAW,SAACpJ,EAAOE,GACfF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAKKkJ,IADiBJ,GAAa3I,QACb2I,GAAazI,SC5BrC8I,GAAqBhK,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRkF,SAAS,EACTjF,MAAO,MAEXG,SAAS,CACLyJ,qBAAoB,SAACvJ,GACjBA,EAAMN,SAAU,CACpB,EAEA8J,qBAAoB,SAACxJ,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CAEpB,EAEA6E,kBAAiB,SAACzJ,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACAuJ,mBAAkB,SAAC1J,EAAOE,GACtBF,EAAML,MAAQ,KACdK,EAAM4E,SAAU,CACpB,KAIK+E,GAAuBL,GAAmBhJ,QAC1CsJ,GAAuBN,GAAmB9I,QC9BjDqJ,GAAqBvK,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRkF,SAAS,EACTjF,MAAO,GACPuB,QAAS,CAAC,GAEdpB,SAAS,CACLgK,qBAAoB,SAAC9J,GACjBA,EAAMN,SAAU,CAEpB,EAEAqK,qBAAoB,SAAC/J,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,EAChB5E,EAAMkB,QAAUhB,EAAOC,OAC3B,EAEA6J,kBAAiB,SAAChK,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrBH,EAAM4E,SAAU,CACpB,EACAqF,mBAAkB,SAACjK,EAAOE,GAEtBF,EAAMkB,QAAU,CAAC,EACjBlB,EAAM4E,SAAU,EAChB5E,EAAML,MAAQ,EAClB,KAIKuK,GAAuBL,GAAmBvJ,QAC1C6J,GAAuBN,GAAmBrJ,QCnCjD4J,GAAkB9K,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACV4E,KAAK,CAAC,EACNQ,SAAS,EACTlF,SAAS,EACTC,MAAO,MAEXG,SAAU,CACNuK,kBAAiB,SAACrK,GACdA,EAAMN,SAAU,CAEpB,EAEA4K,kBAAiB,SAACtK,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,CACpB,EAEA2F,eAAc,SAACvK,EAAOE,GAClBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,EACAqK,gBAAe,SAACxK,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,EAChB5E,EAAMoE,KAAO,CAAC,CAClB,KAMCqG,GAAoBL,GAAgB9J,QACpCoK,GAAoBN,GAAgB5J,QClC3CmK,GAAqBrL,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRkF,SAAS,EACTjF,MAAO,GACPuB,QAAS,CAAC,GAEdpB,SAAS,CACL8K,qBAAoB,SAAC5K,GACjBA,EAAMN,SAAU,CAEpB,EAEAmL,qBAAoB,SAAC7K,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAM4E,SAAU,EAChB5E,EAAML,MAAQ,GACdK,EAAMkB,QAAUhB,EAAOC,OAC3B,EAEA2K,kBAAiB,SAAC9K,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrBH,EAAM4E,SAAU,CACpB,EACAmG,mBAAkB,SAAC/K,EAAOE,GAEtBF,EAAMkB,QAAU,CAAC,EACjBlB,EAAM4E,SAAU,EAChB5E,EAAML,MAAQ,EAClB,KAIKqL,GAAuBL,GAAmBrK,QAC1C2K,GAAuBN,GAAmBnK,QCpCjD0K,GAAiB5L,YAAY,CAC/BC,KAAM,YACNC,aAAc,CACV2H,OAAQ,GACRzH,SAAS,EACTC,MAAO,MAGXG,SAAS,CACLqL,iBAAgB,SAACnL,GACbA,EAAMN,SAAU,EAChBM,EAAMmH,OAAS,EACnB,EAEAiE,iBAAgB,SAACpL,EAAOE,GACZF,EAAMN,SAAU,EAChBM,EAAMmH,OAASjH,EAAOC,OAElC,EAEAkL,cAAa,SAACrL,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACzB,KAIKmL,GAAmBJ,GAAe5K,QAClCiL,GAAmBL,GAAe1K,QCyBhCgL,GA7BDC,YAAe,CACzBjL,QAAQ,CACJkL,YAAanL,EACbW,QAASK,EACToK,KAAMxI,EACNyI,UAAWhI,EACXiI,aAAc3H,EACd4H,YAAapH,EACbqH,kBAAmB9G,EACnB+G,SAAUzG,EACV0G,QAASrG,EACTE,MAAOM,EACP8F,YAAaxF,EACbyF,SAAUlF,EACVmF,mBAAoB3E,EACpB4E,SAAUlE,GACVmE,WAAY5D,GACZ6D,aAAcvD,GACdwD,QAASnD,GACToD,cAAe7C,GACf8C,cAAevC,GACfwC,WAAYjC,GACZkC,cAAe3B,GACf4B,UAAWtB,GACXuB,aAAc9L,K,wLCuBP+L,OA/Df,WAEI,MAA8BC,mBAAS,IAAG,oBAAnCC,EAAO,KAAEC,EAAU,KA0B5B,OAzBmBC,eACAC,cACAC,eAcjBC,qBAAU,WACN7L,aAAa8L,QAAQ,UAAWN,EACpC,GAAE,CAACA,IASH,eAACO,GAAA,EAAI,CAACC,SAjBgB,SAACC,GACnBA,EAAEC,iBACF5F,QAAQC,IAAI,sBAAuBiF,EAEvC,EAa8B,SAC1B,eAACW,GAAA,EAAS,UACN,gBAACC,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACC,GAAI,GAAG,SACR,eAACP,GAAA,EAAKQ,QAAO,CACTC,KAAK,SACL1O,KAAK,UACL2O,OAAQ,OACRC,UAAU,kBACVC,SAAU,SAACV,GAAC,OAAKR,EAAWQ,EAAEW,OAAOC,MAAM,MAGnD,eAACR,GAAA,EAAG,CAACC,GAAI,EAAE,SACX,eAACQ,GAAA,EAAc,CACXC,UAAU,QACVC,MAAO,CAAEC,KAAM,IAAKC,KAAM,KAC1BC,QAvCM,SAACC,GAAK,OACxB,eAACC,GAAA,EAAO,2BAACxM,GAAG,kBAAqBuM,GAAK,0BAE5B,EAoCyB,SAEnB,eAACE,GAAA,EAAM,CACHd,KAAK,SACLe,QAAQ,kBACRb,UAAU,MACVc,MA7BP,CACbC,WAAY,eA4BwB,gCAS5C,E,0CCtEA,mmGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAMO,IAAMC,GAAQ,SAACC,EAAOC,GACzB,gDAAO,WAAOC,GAAQ,0EAkB0B,OAhBtCC,EAAS,yCAAG,yFAMb,OAJKC,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAEtB,SACsBC,KAAMC,KAAK,oBAClC,CACI,MAASP,EACT,SAAYC,GACbG,GAAO,OAJE,OAIF,SAJFI,EAAI,EAAJA,KAAI,kBAKLA,GAAI,2CACd,kBAbc,4CAgBXN,EAAS5L,EAAYJ,oBAAmB,SACrBiM,IAAW,OAAxBK,EAAI,OACVN,EAAS5L,EAAYH,iBAAiBqM,IAEtCpO,aAAa8L,QAAQ,WAAY5L,KAAKmO,UAAUD,IAAM,kDAKtDN,EACI5L,EAAYF,cACV,KAAMsM,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,mDAnCD,EAoCJ,EAEaC,GAAU,WAEnB,OAAO,SAACX,GAEJ9N,aAAa0O,WAAW,YACxBZ,EAAS5L,EAAYD,cACrB6L,EAAS9K,EAAmBD,oBAC5B+K,EAAS/H,EAA0BD,2BACnCgI,EAASrH,GAAgB1D,mBAC7B,CACJ,EC5CiB4L,GAZA,WACb,OACE,sBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAAc,SAEnB,uBAAMC,EAAE,6RAGd,E,qBC6CaC,GAlDU,SAAC5B,GAEtB,MAAkC7B,oBAAS,GAAM,oBAA1C0D,EAAS,KAAEC,EAAY,KAGtB7O,EADK8O,aAAY,SAAC5Q,GAAK,OAAKA,EAAM2L,IAAI,IACtC7J,UAOF+O,GAJYD,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC9CtI,SAG2B,OAATxB,QAAS,IAATA,OAAS,EAATA,EAAWgP,QAAO,SAACC,EAAexO,GACxD,OAAOwO,EAAiBxO,EAAKC,GACjC,GAAG,IAEGwO,EAAU,UAAMC,KAAQC,OAAM,YAAIR,EAAaO,KAAQE,KAAO,IAqBpE,OAlBA7D,qBAAU,WAEN,GAAyB,KAAb,OAATxL,QAAS,IAATA,OAAS,EAATA,EAAWsP,QAAd,CAGAT,GAAa,GAEb,IAAMU,EAAQC,YAAW,WACrBX,GAAa,EACjB,GAAG,KAEH,OAAO,WACHY,aAAaF,EACjB,CATA,CAWJ,GAAG,CAACvP,IAIA,0BAAQqM,UAAW6C,EAAYQ,QAAS3C,EAAM2C,QAAQ,UAClD,uBAAMrD,UAAW8C,KAAQQ,KAAK,SAC1B,eAAC,GAAQ,MAEb,+CACA,uBAAMtD,UAAW8C,KAAQS,MAAM,SAC1Bb,MAIjB,E,qBCrDe,I,cCCf,26MAGO,IAAMc,GAAiB,WAAyB,IAAxB1E,EAAO,uDAAG,GACrC,gDAAO,WAAOsC,GAAQ,0EAeqC,OAbjDC,EAAS,yCAAG,2FAIb,OAFc,OAAZvC,IACCA,EAAU,IACb,SAEkC0C,KAAMiC,IAAI,6BAA4B,OAA7D,OAA6D,SAA3DlR,EAAU,EAAhBmP,KAAI,SAC0BF,KAAMiC,IAAI,gCAA+B,OAAnE,OAAmE,SAAjEjR,EAAa,EAAnBkP,KAAI,kBAEL,CAAEnP,aAAYC,kBAAe,4CACvC,kBAVc,4CAaX4O,EAASxO,EAAoBH,uBAAsB,SAC5B4O,IAAW,OAA5BqC,EAAQ,OACdtC,EAASxO,EAAoBF,oBAAoBgR,IAAU,gDAG3DtC,EACIxO,EAAoBD,iBAClB,KAAMiP,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDA7BD,EA8BJ,E,OCmKe6B,OA5Kf,SAAgBjD,GACd,IACQvL,EADUsN,aAAY,SAAC5Q,GAAK,OAAKA,EAAM4L,SAAS,IAChDtI,SAGA5C,EADSkQ,aAAY,SAAC5Q,GAAK,OAAKA,EAAM8M,YAAY,IAClDpM,WAEF6O,EAAWnC,cAWjB,OATAE,qBAAU,WAERiC,EAASoC,KAEX,GAAG,IAMD,gBAAC,WAAQ,WACT,oCACE,eAACI,GAAA,EAAM,CAAE/C,QAAQ,OAAOgD,OAAO,KAAKC,kBAAgB,EAAC9D,UAAW8C,KAAQ,gBAAgB,SACtF,gBAACrD,GAAA,EAAS,WACJ,eAAC,iBAAa,CAACsE,GAAG,IAAG,SACnB,eAACH,GAAA,EAAOI,MAAK,UACX,qBAAIhE,UAAW8C,KAAY,GAAE,SAAC,qBAIlC,eAACc,GAAA,EAAOK,KAAI,CAACnD,MAAO,CAAEoD,UAAW,UAAU,SACtC,iCACC,uBAAKpD,MAAO,CAACqD,SAAU,UAAU,UAAC,eAAC,KAAe,CAACb,KAAMc,OAAW,uBAEpE,+BAAM,oBAKV,eAAC,GAAS,IAEZ,eAACR,GAAA,EAAOK,KAAI,CAACnD,MAAO,CAAEoD,UAAW,UAAU,SAC3C,eAAC,iBAAa,CAACH,GAAG,QAAO,SACnB,eAACM,GAAA,EAAIC,KAAI,UACP,eAACC,GAAgB,CAAClB,QAAS3C,EAAM8D,wBAMjD,eAACZ,GAAA,EAAM,CAACa,GAAG,QAAQ5D,QAAQ,QAAQgD,OAAO,KAAKC,kBAAgB,WAC7D,eAACrE,GAAA,EAAS,UACR,gBAACC,GAAA,EAAG,WACJ,eAACkE,GAAA,EAAOc,OAAM,CAAC,gBAAc,mBAAmB9E,GAAI,EAAGkB,MAAO,CAAE6D,OAAO,KAErE,gBAACf,GAAA,EAAOgB,SAAQ,CAACzQ,GAAG,mBAAkB,UACpC,eAACwL,GAAA,EAAG,CAACC,GAAI,EAAGkB,MAAO,CAAE6D,OAAO,GAAIE,OAAO,GAAIC,KAAK,IAAI,SAElD,eAACC,GAAA,EAAW,CAACC,MAAM,aACN7Q,GAAG,qBACH8Q,OAAO,UACPnE,MAAO,CACAqD,SAAU,SAEVc,OAAO,kBACNC,QAAS,eACTnE,WAAY,mBAAmB,SACvC,OAAVxO,QAAU,IAAVA,OAAU,EAAVA,EAAY4S,KAAK,SAACC,GAAQ,OACzB,eAACL,GAAA,EAAYM,KAAI,UACf,eAAC,iBAAa,CAACtB,GAAE,sBAAiBqB,EAASE,KAAM,SAC7C,eAACjB,GAAA,EAAIC,KAAI,UACPc,EAAShU,UAHOgU,EAASE,IAOd,QAiBzB,eAAC3F,GAAA,EAAG,CAACC,GAAI,CAAE2F,KAAM,GAAIC,OAAQ,IAAK,SAChC,gBAACnB,GAAA,EAAG,WAcF,eAAC,iBAAa,CAACN,GAAG,SAAQ,SAExB,eAACM,GAAA,EAAIC,KAAI,UACT,uBAAKxD,MAAO,CAACqD,SAAU,QAAQ,UAAC,eAAC,KAAe,CAACb,KAAMmC,OAA4B,qBAKrF,eAAC,iBAAa,CACZ1B,GAAG,WAAU,SACb,eAACM,GAAA,EAAIC,KAAI,UACT,uBAAKxD,MAAO,CAACqD,SAAU,QAAQ,UAAC,eAAC,KAAe,CAACb,KAAMoC,OAAiB,oBAKzEvQ,EACC,gBAAC4P,GAAA,EAAW,CAACC,MAAO7P,EAASwQ,UAAWxR,GAAG,WAAW2M,MAAO,CAACqD,SAAU,QAAQ,UAC9E,eAAC,iBAAa,CACZJ,GAAG,WAAU,SACb,eAACgB,GAAA,EAAYM,KAAI,UAAC,cAEpB,eAACN,GAAA,EAAYM,KAAI,CAAChC,QAjHhB,SAACuC,GACrBxE,EAASW,KACX,EA+G6D,SAAE,cAK7C,eAAC,iBAAa,CACZgC,GAAG,SAAQ,SAGX,gBAACM,GAAA,EAAIC,KAAI,WACP,eAAC,KAAe,CAAChB,KAAMuC,OAAU,sBAKtC1Q,GAAYA,EAAS2Q,SACpB,gBAACf,GAAA,EAAW,CAACC,MAAM,QAAQ7Q,GAAG,YAAY2M,MAAO,CAACqD,SAAU,QAAQ,UAClE,eAAC,iBAAa,CAACJ,GAAG,kBAAiB,SACjC,eAACgB,GAAA,EAAYM,KAAI,UAAC,YAGpB,eAAC,iBAAa,CAACtB,GAAG,qBAAoB,SACpC,eAACgB,GAAA,EAAYM,KAAI,UAAC,eAGpB,eAAC,iBAAa,CAACtB,GAAG,mBAAkB,SAClC,eAACgB,GAAA,EAAYM,KAAI,UAAC,mCAWpC,IAKN,E,kDCzLeU,GANK,SAAH,OAAMC,EAAI,EAAJA,KAAI,OACvB,uBAAKhG,UAAU,MAAK,UAClB,eAAC,KAAI,CAACsD,KAAM2C,KAAcjG,UAAU,aACpC,oBAAGA,UAAU,WAAU,SAAEgG,MACrB,ECiBOE,GApBC,SAAH,OAAMC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAAS,OACpC,uBAAKpG,UAAU,MAAK,UAClB,qBAAIA,UAAU,SAAQ,SAAC,sBAEvB,sBAAKA,UAAU,aAAY,SACzB,eAAC,KAAc,CACbqG,iBAAkB,CAAEC,IAAK,2CACzBC,cAAeJ,EACfK,YAAaJ,EAAU,SAEvB,eAAC,GAAW,CACVK,IAAKN,EAASM,IACdC,IAAKP,EAASO,IACdV,KAAMG,EAASQ,gBAIjB,ECnBJR,GAAW,CACfQ,QAAS,4BACTF,IAAK,SACLC,IAAK,UAgBQE,OAbf,WACE,OACE,yBAAQ9F,MAAO,CAAC+F,gBAAgB,SAAS,SACrC,eAACpH,GAAA,EAAS,UACN,gBAACC,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACK,UAAU,mBAAkB,SAAC,gCAClC,eAAC,GAAS,CAACmG,SAAUA,GAAUC,UAAW,WAK1D,E,UCqCeU,I,8BCpBAC,OAhCf,SAAiB,GAAY,IAAD,EAAVhU,EAAO,EAAPA,QAChB,OACE,gBAACiU,GAAA,EAAI,CAAChH,UAAS,2BAAsB8C,KAAQ,mBAAqBmC,OAAO,UAAWnE,MAAO,CAAEmG,MAAO,QAASC,OAAQ,SAAU,UAC3H,gBAAC,QAAI,CAACnD,GAAE,oBAAehR,EAAQuS,KAAM,UACjC,eAAC0B,GAAA,EAAKG,IAAG,CAACC,IAAsB,QAAnB,EAAErU,EAAQsU,OAAO,UAAE,aAAjB,EAAmBC,MAAOxG,MAAO,CAACmG,MAAO,UAAWC,OAAQ,WAC3E,eAACF,GAAA,EAAKO,WAAU,WACJ,OAAPxU,QAAO,IAAPA,OAAO,EAAPA,EAASyU,cAAe,GAAK,eAACR,GAAA,EAAKS,MAAK,UAAC,sBAAK3G,MAAO,CAAE+F,gBAAgB,MAAOa,MAAM,QAASxC,QAAS,cAAeyC,QAAS,MAAOC,aAAc,OAAO,SAAC,0BAGpK,gBAACZ,GAAA,EAAKa,KAAI,CAAC/G,MAAO,CAAEoD,UAAW,UAAU,UACrC,eAAC,QAAI,CAACH,GAAE,oBAAehR,EAAQuS,KAAM,SACpC,eAAC0B,GAAA,EAAKS,MAAK,CAACK,GAAG,MAAK,SAChB,yBAAQhH,MAAO,CAAEqD,SAAU,UAAU,SAAEpR,EAAQ3B,WAQpD,gBAAC4V,GAAA,EAAK/C,KAAI,CAAC6D,GAAG,KAAKhH,MAAO,CAAE4G,MAAM,QAASvD,SAAU,UAAU,UACtDpR,EAAQgV,MAAM,UAEvB,eAACf,GAAA,EAAK/C,KAAI,CAAC6D,GAAG,YAO1B,ECLeE,OAzBf,SAAoB,GAAa,IAAZ5C,EAAQ,EAARA,SACnB,OACE,gBAAC4B,GAAA,EAAI,CAAChH,UAAS,oBAAe8C,KAAQ,mBAAkB,WAAWmC,OAAO,OAAQnE,MAAO,CAAEmG,MAAO,QAASC,OAAQ,SAAU,UACzH,eAACF,GAAA,EAAKrD,OAAM,CAACmE,GAAG,OAChB,eAAC,QAAI,CAAC/D,GAAE,sBAAiBqB,EAASE,KAAM,SACpC,eAAC0B,GAAA,EAAKG,IAAG,CAACC,IAAKhC,EAASkC,UAE5B,gBAACN,GAAA,EAAKa,KAAI,CAAC/G,MAAO,CAAEoD,UAAW,UAAU,UACrC,eAAC,QAAI,CAACH,GAAE,sBAAiBqB,EAASE,KAAM,SACvC,eAAC0B,GAAA,EAAKS,MAAK,CAACK,GAAG,MAAK,SAChB,yBAAQhH,MAAO,CAAEqD,SAAU,UAAU,SAAEiB,EAAShU,WAIrD,gBAAC4V,GAAA,EAAK/C,KAAI,CAAC6D,GAAG,KAAKhH,MAAO,CAAE4G,MAAM,QAASvD,SAAU,UAAU,UACtDiB,EAAS6C,cAAc,qBAQ5C,E,MC2CeC,I,UCrEA,SAASC,GAAa,GAAqB,IAApBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAE5C,EAAgDxJ,mBAAS,IAAG,oBAC5D,GADuB,KAAqB,KACRA,oBAAS,IAAM,oBAAhCyJ,GAAF,KAAe,MA6BhC,OAEI,eAAC,KAAM,CACL,kBAAgB,aAChBC,QAAQ,qBACRnX,KAAK,kBACLoX,aAAW,EACXC,cAAY,EACZC,SAAO,EACP1I,UAAU,qBACV2I,WAba,WAAH,OAASL,GAAc,EAAM,EAcvCM,YAbc,WAAH,OAASN,GAAc,EAAO,EAczCO,QAAST,EACTU,gBAAgB,SAChB7I,SA5BW,SAAC8I,EAAW,GAAgC,IAA9BhX,EAAM,EAANA,OAAsB,EAAdiX,eACrCpP,QAAQC,IAAI,WAAWkP,GACR,kBAAXhX,GACAsW,EAASU,GACE,UAAXhX,GACAsW,EAAS,IACE,iBAAXtW,GACAsW,EAASU,EAEf,EAoBME,mBAAmB,GAI3B,C,cCrDA,mmGAAAjI,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMkI,GAAe,WAAyB,IAAxBpK,EAAO,uDAAG,GAAIrN,EAAI,uCAC3C,gDAAO,WAAO2P,GAAQ,0EAamC,OAX/CC,EAAS,yCAAG,uFAIb,OAFc,OAAZvC,IACCA,EAAU,IACb,SAEsB0C,KAAMiC,IAAI,0BAAD,OAA2B3E,EAAO,iBAASrN,IAAO,OAAtE,OAAsE,SAA1EiQ,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBARc,4CAWXN,EAASlP,EAAmBN,sBAAqB,SAC1ByP,IAAW,OAA5BqC,EAAQ,OACdtC,EAASlP,EAAmBJ,mBAAmB4R,IAAU,gDAGzDtC,EACIlP,EAAmBD,gBACjB,KAAM2P,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDA3BD,EA4BJ,EAEaqH,GAAiB,SAAChV,GAC3B,gDAAO,WAAOiN,GAAQ,0EAUyC,OAPrDC,EAAS,yCAAG,uGAESG,KAAMiC,IAAI,iBAAD,OAAkBtP,IAAK,OAA3C,OAA2C,SAA/CuN,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXN,EAASjO,EAAsBH,yBAAwB,SAChCqO,IAAW,OAA5BqC,EAAQ,OACdtC,EAASjO,EAAsBF,sBAAsByQ,IAAU,gDAG/DtC,EACIjO,EAAsBD,mBACpB,KAAM0O,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDAxBD,EAyBJ,EAEasH,GAAqB,SAACjJ,GAC/B,gDAAO,WAAOiB,GAAQ,4EAsBmC,OAnB/CiI,EAAM,CACJ3B,MAAOvH,EAAMuH,MACb4B,KAAMnJ,EAAMmJ,KACZxJ,KAAMK,EAAML,KACZsF,SAAUjF,EAAMiF,SAChBmE,KAAMpJ,EAAMoJ,KACZC,MAAOrJ,EAAMqJ,MACbC,OAAQtJ,EAAMsJ,OACd3K,QAASqB,EAAMrB,SAIjBuC,EAAS,yCAAG,uGAESG,KAAMC,KAAK,wBAAwB4H,GAAI,OAAlD,OAAkD,SAAtD3H,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXN,EAASlP,EAAmBN,sBAAqB,SAC1ByP,IAAW,OAA5BqI,EAAQ,OACdtI,EAASlP,EAAmBJ,mBAAmB4X,IAAU,kDAGzDtI,EACIlP,EAAmBD,gBACjB,KAAM2P,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,mDApCD,EAqCJ,ECiEe6H,OArIf,SAAgB,GAAe,IAAD,QAAXC,EAAQ,EAARA,SAETxI,EAAWnC,cAETzM,EADIiQ,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IAC3CnM,cAIR,GAHaiQ,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0L,WAAW,IAC3CjM,SAEwBuN,mBAAS,KAAG,oBAArCgL,EAAQ,KAAEC,EAAW,KAC5B,EAAgCjL,mBAAS,IAAG,oBAArCkL,EAAQ,KAAEC,EAAW,KAC5B,EAAwBnL,mBAAS,IAAG,oBAA7BoL,EAAI,KAAEC,EAAO,KACpB,EAAwBrL,mBAAS,IAAG,oBAA7ByK,EAAI,KACX,GADoB,KACEzK,mBAAS,KAAG,oBAA3BsL,EAAG,KAAEC,EAAM,KAClB,EAAoCvL,mBAAS,IAAG,oBAAzCwL,EAAU,KAAEC,EAAa,KAE1BC,EAAWvL,eAEXF,GADWI,eACD5L,aAAaC,QAAQ,YAgB/BiX,EAtDV,SAAqBrK,EAAOG,GAExB,MAA4CzB,mBAASsB,GAAM,oBAApDsK,EAAc,KAAEC,EAAiB,KAgBxC,OAfAvL,qBACE,WAEE,IAAMwL,EAAUxH,YAAW,WACzBuH,EAAkBvK,EACpB,GAAGG,GAIH,OAAO,WACL8C,aAAauH,EACf,CACF,GACA,CAACxK,EAAOG,IAEHmK,CACX,CAmCgCG,CAdNC,mBAAQ,WAC1B,IAAM1K,EAAQ,CACVuH,MAAOuC,EACPX,KAAMA,EACNxJ,KAAMqK,EACN/E,SAAUiF,EACVd,KAAMQ,EACNN,OAAQI,EACR/K,QAASA,GAGb,OADA8K,EAASzJ,GACFA,CACP,GAAG,CAAC8J,EAAMX,EAAMa,EAAKE,EAAYN,EAAUF,EAAU/K,IAEF,KACjDgM,EAAgBC,kBAAO,GAuB/B,OArBE5L,qBAAU,WACJ2L,EAAcE,QAChBF,EAAcE,SAAU,GAGxBpR,QAAQqR,MAAMT,GACdpJ,EAASgI,GAAmBoB,IAGhC,GAAG,CAACpJ,EAAUoJ,EAAqB1L,IAcnC,eAACO,GAAA,EAAI,CAACC,SAZgB,SAACC,GACnBA,EAAEC,iBACF+K,EAAS,SAAU,CAAC1Y,MAAO2Y,GAC/B,EAS8B,SAC1B,gBAAC/K,GAAA,EAAS,CAACqB,MAAO,CAAE6G,QAAS,UAAU,UAEnC,8BAAI,4DACJ,gBAACjI,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAC+D,OAAQ,OAAQK,QAAS,OAASiG,eAAe,SAAUC,WAAW,UAAY,UAC3G,eAAC1L,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAE6G,QAAQ,SAAUV,MAAO,QAAQ,SAC3D,eAAC5H,GAAA,EAAKQ,QAAO,CACTC,KAAK,SACL1O,KAAK,WACL2O,OAAQ,OACRsL,YAAY,sBACZpL,SAAU,SAACV,GAAC,OAAKuK,EAAYvK,EAAEW,OAAOC,MAAM,MAGpD,wBAEA,8BAAI,2DACA,eAACT,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAE6G,QAAQ,SAAUV,MAAO,QAAQ,SAC3D,eAACkB,GAAY,CAACC,OAAsB,OAAb5V,QAAa,IAAbA,GAA2B,QAAd,EAAbA,EAAe8Y,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAoG,GAAG,MACvD,CAAEpL,MAAOoL,EAAKC,MAAOD,EAAI,IACzBlD,SAAU2B,MAGtB,wBACA,8BAAI,mDACA,eAACtK,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAE6G,QAAQ,SAAUV,MAAO,QAAQ,SAC3D,eAACkB,GAAY,CAACC,OAAsB,OAAb5V,QAAa,IAAbA,GAAoB,QAAP,EAAbA,EAAekV,aAAK,WAAP,EAAb,EAAsBvC,KAAI,SAAAoG,GAAG,MAChD,CAAEpL,MAAOoL,EAAKC,MAAOD,EAAI,IACzBlD,SAAU6B,MAGtB,wBAEA,8BAAI,mDACA,eAACxK,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAE6G,QAAQ,SAAUV,MAAO,QAAQ,SAC3D,eAACkB,GAAY,CAACC,OAAsB,OAAb5V,QAAa,IAAbA,GAA4B,QAAf,EAAbA,EAAeiZ,qBAAa,WAAf,EAAb,EAA8BtG,KAAI,SAAAoG,GAAG,MACxD,CAAEpL,MAAOoL,EAAKC,MAAOD,EAAI,IACzBlD,SAAU+B,MAEtB,wBAUA,8BAAI,0DACA,eAAC1K,GAAA,EAAG,CAACE,GAAI,GAAIsL,GAAI,GAAIpK,MAAO,CAAE6G,QAAQ,SAAUV,MAAO,QAAQ,SAC3D,eAACkB,GAAY,CAAEC,OAAsB,OAAb5V,QAAa,IAAbA,GAAyB,QAAZ,EAAbA,EAAeD,kBAAU,WAAZ,EAAb,EAA2B4S,KAAI,SAAAoG,GAAG,MACtD,CAAEpL,MAAOoL,EAAIna,KAAMoa,MAAOD,EAAIna,KAAK,IACnCiX,SAAUiC,MAEtB,wBACA,eAAC5K,GAAA,EAAG,CAACE,GAAI,GAAG,SAEJ,eAACgB,GAAA,EAAM,CACHd,KAAK,SACLe,QAAQ,kBACRb,UAAU,MACVc,MArEP,CACbC,WAAY,eAqEQ2K,UAAU,EAAK,6BAS3C,E,UC/IeC,OAlBf,WACE,OACE,eAACC,GAAA,EAAO,CACPC,UAAU,SACVC,KAAK,SACLhL,MAAO,CACHoG,OAAQ,QACRD,MAAO,QACPpC,OAAO,OACPK,QAAQ,SACV,SACK,uBAAMlF,UAAU,UAAS,yBAKrC,E,UCPe+L,OATf,SAAiB,GAA+B,IAA9BlL,EAAO,EAAPA,QAASmL,EAAQ,EAARA,SAAUlK,EAAO,EAAPA,QACnC,OACE,gBAACmK,GAAA,EAAK,CAACpL,QAASA,EAAQ,UACtB,eAACoL,GAAA,EAAMC,QAAO,UAAEpK,IACbkK,IAGT,E,uBCeeG,I,iBC0BAC,I,8BClCA,SAASC,GAAY,GAAc,IAAZzC,EAAQ,EAARA,SACpC,EAAoC/K,oBAAS,GAAM,oBAA5CyN,EAAU,KAAEC,EAAa,KAE1BC,EAAa,WAAH,OAASD,GAAeD,EAAY,EAEpD,OACE,uCACE,gBAAC,KAAM,CAACjJ,QAASmJ,EAAW,wBAAY,oBAAGxM,UAAU,2BACrD,eAAC,KAAQ,CAACO,KAAM+L,EAAYG,QAASF,EAAeG,SAAS,KAAKC,mBAAmB,OAAM,SACzF,eAAC,KAAc,CAACC,SAAS,YAAaC,gBAAiB/J,KAAe,MAAGgK,YAAU,WACjF,gBAAC,KAAe,WACd,gBAAC,KAAc,WACb,eAAC,KAAa,+BACd,eAAC,KAAM,CAAC9M,UAAU,YAAY0H,MAAM,OAAOrE,QAASmJ,OAEtD,eAAC,KAAY,UACT,eAAC,GAAM,CAAC5C,SAAWA,MAGvB,eAAC,KAAc,UACb,eAAC,KAAM,CAAClC,MAAM,YAAYrE,QAASmJ,EAAW,8BAU5D,C,mECMeO,OArCf,SAAoB,GAAa,IAAXC,EAAO,EAAPA,QAEZ5L,EAAWnC,cACXgO,EAAaxK,aAAY,SAAA5Q,GAAK,OAAIA,EAAMwM,OAAO,IAC7C9M,EAA4B0b,EAA5B1b,QAASC,EAAmByb,EAAnBzb,MAgBnB,OAhBsCyb,EAAZ3b,SAaxB6N,qBAAU,WACN,GACD,CAACiC,IAGJ7P,EAAU,eAAC,GAAM,IACPC,EAAQ,eAAC,GAAO,CAACqP,QAAQ,WAIvB,eAAC,YAAQ,CAACmM,QAASA,EAASE,SAAU,IAAK,SArBzC,CACV,CACI/Y,GAAI,EACJiT,IAAK,kFACLhW,KAAM,kBAEV,CACI+C,GAAG,EACHiT,IAAK,yEACLhW,KAAM,gBAaK+T,KAAI,SAACgI,GACR,OAAO,eAACC,GAAA,EAAK,CAAYhG,IAAK+F,EAAE/F,IAAKiG,IAAKL,EAASM,OAAK,EAAEC,SAAO,EAAGzM,MAAO,CAAE0M,eAAgB,OAAQZ,SAAU,WAAaa,MAAM,SAAWxG,MAAM,OAC/IC,OAAQ,QAASwG,UAAU,OAAQ7I,OAAO,OAAQ8C,QAAQ,kBAD3CwF,EAAEhZ,GAEzB,KAIhB,E,OC+DewZ,OA1Ff,WAEE,IAAMvM,EAAWnC,cACjB,EAA8BJ,oBAAS,GAAK,oBAArC+O,EAAO,KAAEC,EAAU,KAC1B,EAA8BhP,oBAAS,GAAK,oBAApCiP,EAAM,KAAEC,EAAS,KACzB,EAAwBlP,mBAAS,CAC/B6I,MAAO,GACP4B,KAAM,GACNxJ,KAAM,GACNsF,SAAU,GACVmE,KAAM,GACNE,OAAQ,KACV,oBAPauE,GAAF,KAAQ,MAQbC,EAAaC,OACbC,EAAM1L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IAClCyP,EAA2DD,EAApE3c,MAAS4c,cAA0BC,EAAiCF,EAA3C5c,QAAU8c,gBAAkB9b,EAAe4b,EAAf5b,WACvD+b,EAAO7L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0L,WAAW,IACUjM,GAAagd,EAAlE9c,MAAS+c,aAAyDD,EAAzC/c,QAAUid,eAA+BF,EAAbhd,UAC7D,EAA4Bmd,6BAAiB,oBAAtChF,EAAM,KACP3K,GADkB,KACR2K,EAAOhG,IAAI,YACrBiL,EAAe3D,iBAAO,MAE5B5L,qBAAU,WAERiC,EAASoC,KAGZ,GAAG,CAACpC,EAAUtC,IAGd,IAAM6P,EAAiB,SAACxO,GAAW,IAAD,UACjC6N,EAAO7N,IACO,QAAX,EAAAA,EAAMuH,aAAK,aAAX,EAAazE,UAAoB,QAAd,EAAI9C,EAAMmJ,YAAI,aAAV,EAAYrG,UAAoB,QAAd,EAAI9C,EAAML,YAAI,aAAV,EAAYmD,UAAwB,QAAlB,EAAI9C,EAAMiF,gBAAQ,aAAd,EAAgBnC,UAAqB,QAAf,EAAK9C,EAAMoJ,YAAI,aAAV,EAAYtG,SAA2B,KAAjB9C,EAAMsJ,QAC3HsE,GAAU,GACVF,GAAW,KAEXE,GAAU,GACVF,GAAW,GAEd,EAEC,OACE,iCACMD,GAAW,eAAC,GAAU,CAACZ,QAAS0B,IAElC,gCAAI,IAAEd,EAAU,cAAgB,2BAE/BK,EAAWW,UAAY,eAACvC,GAAW,CAACzC,SAAW+E,IAE9CN,EAAkB,eAAC,GAAM,IAChBD,EAAgB,eAAC,GAAO,CAACvN,QAAQ,SAAQ,SAAEuN,IAE7C,+BACC,eAAC3O,GAAA,EAAS,CAAC6N,OAAK,WACd,gBAAC5N,GAAA,EAAG,YACDuO,EAAWY,WAAaZ,EAAWa,iBAAmB,eAACnP,GAAA,EAAG,UACvD,eAAC,GAAM,CAACiK,SAAW+E,MAEvB,eAAChP,GAAA,EAAG,CAACoP,GAAI,EAAGnP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,SACpCnB,EACF,eAACpO,GAAA,EAAG,CAAEM,UAAW,OAAO,SACX,OAAVzN,QAAU,IAAVA,OAAU,EAAVA,EAAY4S,KAAI,SAAAC,GAAQ,OACzB,eAACzF,GAAA,EAAG,CAAoBoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAGjP,UAAU,SAAQ,SAC1E,eAAC,GAAU,CAACoF,SAAUA,KADhBA,EAASE,IAEb,MAIP,eAAC5F,GAAA,EAAG,CAACM,UAAW,OAAO,SACb,OAAR1O,QAAQ,IAARA,OAAQ,EAARA,EAAU6T,KAAI,SAAApS,GAAO,OACtB,eAAC4M,GAAA,EAAG,CAAmBoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAGjP,UAAU,SAAQ,SACzE,eAAC,GAAO,CAACjN,QAASA,KADZA,EAAQuS,IAEZ,iBAgBhC,E,SC3Ce4J,OAnDf,WAA2B,IAAD,QAElB9N,EAAWnC,cACXqP,EAAO7L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0L,WAAW,IAC3C/L,EAA6B8c,EAA7B9c,MAAOD,EAAsB+c,EAAtB/c,QAASD,EAAagd,EAAbhd,SAClB6c,EAAM1L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IACOwQ,GAAgBhB,EAAlE3c,MAAkE2c,EAAjD5c,QAAiD4c,EAA5B5b,YAC9C,EAA4Bkc,6BAAiB,oBACrCta,GADK,KAAW,KACTib,eAAPjb,IAUR,OAPAgL,qBAAU,WACRkQ,OAAOC,SAAS,EAAG,GACnBlO,EAAS8H,KAEZ,GAAG,CAAC9H,EAAUjN,IAIX,kCACM,EACF,gBAACob,GAAA,EAAU,WACT,eAACA,GAAA,EAAWlK,KAAI,CAACmK,KAAK,IAAG,SAAC,oBAAGxP,UAAU,iBACvC,eAACuP,GAAA,EAAWlK,KAAI,CAAEoK,QAAM,WACT,OAAXN,QAAW,IAAXA,GAAqD,QAA1C,EAAXA,EAAalb,MAAM,SAAAka,GAAG,aAAW,QAAP,EAAAA,EAAI7I,WAAG,aAAP,EAASoK,cAAevb,CAAE,WAAC,WAA1C,EAAX,EAAuD/C,UAK7D,eAAC,QAAI,CAAC2S,IAAK,EAAG/D,UAAU,uBAAsB,SAAC,WAC/C,8BAAiB,OAAXmP,QAAW,IAAXA,GAAqD,QAA1C,EAAXA,EAAalb,MAAM,SAAAka,GAAG,aAAW,QAAP,EAAAA,EAAI7I,WAAG,aAAP,EAASoK,cAAevb,CAAE,WAAC,WAA1C,EAAX,EAAuD/C,OAC3DG,EAAU,eAAC,GAAM,IACRC,EAAQ,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAAErP,IAErC,+BACG,eAACkO,GAAA,EAAG,UACmG,KAA7F,OAARpO,QAAQ,IAARA,GAAwF,QAAhF,EAARA,EAAUmD,QAAO,SAAA1B,GAAO,eAAW,OAAPA,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAASqS,gBAAQ,OAA4B,QAA5B,EAAjB,EAAmBD,KAAI,SAAAjR,GAAC,OAAIA,EAAEoR,IAAIoK,UAAU,WAAC,WAAtC,EAAP,EAA+CC,SAASxb,EAAG,WAAC,WAAhF,EAAR,EAA0F8O,QAAe,+BAAK,yDAAqE,OAAR3R,QAAQ,IAARA,GAAwF,QAAhF,EAARA,EAAUmD,QAAO,SAAA1B,GAAO,eAAW,OAAPA,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAASqS,gBAAQ,OAA4B,QAA5B,EAAjB,EAAmBD,KAAI,SAAAjR,GAAC,OAAIA,EAAEoR,IAAIoK,UAAU,WAAC,WAAtC,EAAP,EAA+CC,SAASxb,EAAG,WAAC,WAAhF,EAAR,EAA0FgR,KAAI,SAAApS,GAAO,OACjR,eAAC4M,GAAA,EAAG,CAAmBoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAGjP,UAAU,SAAQ,SACzE,eAAC,GAAO,CAACjN,QAASA,KADZA,EAAQuS,IAEZ,UAU3B,E,wBClEA,mmGAAAtE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM4O,GAAY,SAACzb,EAAIE,GAC1B,gDAAO,WAAO+M,EAAUyO,GAAQ,8EAEb,OAATxO,EAAS,yCAAG,uGAESG,KAAMiC,IAAI,iBAAD,OAAkBtP,IAAK,OAA3C,OAA2C,SAA/CuN,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,qDAQQL,IAAW,OAAxBK,EAAI,OACJ3O,EAAU,CACZoB,GAAIuN,EAAK4D,IACTlU,KAAMsQ,EAAKtQ,KACXkW,MAAqB,QAAhB,EAAE5F,EAAK2F,OAAO,UAAE,aAAd,EAAgBC,MACvBS,MAAOrG,EAAKqG,MACZP,aAAc9F,EAAK8F,aACnBnT,IAAKA,GAET+M,EAASrM,EAAYjB,YAAYf,IAEjCO,aAAa8L,QAAQ,YAAa5L,KAAKmO,UAAUkO,IAAWrS,KAAK7J,YAAW,4GAOnF,qDA5BD,EA6BJ,EAEamc,GAAiB,SAAC3b,GAC3B,OAAQ,SAACiN,EAAUyO,GAEXzO,EAASrM,EAAYR,eAAeJ,IAEpCb,aAAa8L,QAAQ,YAAa5L,KAAKmO,UAAUkO,IAAWrS,KAAK7J,WAEzE,CACJ,EAEaoc,GAA4B,SAACnc,EAASC,GAC/C,OAAQ,SAACuN,GACDxH,QAAQC,IAAI,kBACZ,IAAMzF,EAAO,CACTR,UACAC,YAEJuN,EAASrM,EAAYJ,sBAAsBP,GAEnD,CACJ,E,qBCiPe4b,OApRf,SAAuB,GAAM,EAALC,MAAS,IAAD,cAEtB9b,EAAOib,eAAPjb,GAEFoW,EAAWvL,eACjB,EAAsBH,mBAAS,GAAE,oBAA1BxK,EAAG,KAAE6b,EAAM,KAEZ9O,EAAWnC,cAKXkR,GAHY1N,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC/CtI,SAEYsN,aAAY,SAAA5Q,GAAK,OAAIA,EAAMkB,OAAO,KAC9CxB,EAA2B4e,EAA3B5e,QAASC,EAAkB2e,EAAlB3e,MAAOuB,EAAWod,EAAXpd,QA8BvB,OA5BAoM,qBAAU,WAOL,OANCiR,KAAQC,KAAK,CACbC,OAAQ,CACNC,SAAU,CAAC,aAAc,eAG5BnP,EAAS+H,GAAehV,IACjB,WAAO,CAEnB,GAAG,CAACiN,EAAUjN,IAUdgL,qBAAU,WACRkQ,OAAOC,SAAS,CACZkB,IAAK,EACLC,KAAM,EACNC,SAAU,UAEd,GAAG,IAIH,uBAAK5P,MAAO,CAACoG,OAAO,QAAQ,UACxB,gBAACqI,GAAA,EAAU,WACT,eAACA,GAAA,EAAWlK,KAAI,CAACmK,KAAK,MAAK,SAAC,oBAAGmB,MAAM,iBACrC,eAACpB,GAAA,EAAWlK,KAAI,CAACmK,KAAI,uBAAyB,OAAPzc,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAASqS,gBAAQ,WAAV,EAAP,EAAmBD,KAAI,SAAAjR,GAAC,OAAIA,EAAEoR,GAAG,IAAE,IAAK,SAEtE,OAAPvS,QAAO,IAAPA,GAAiB,QAAV,EAAPA,EAASqS,gBAAQ,WAAV,EAAP,EAAmBD,KAAI,SAAAjR,GAAC,OAAIA,EAAE9C,IAAI,IAAE,KAEtC,eAACme,GAAA,EAAWlK,KAAI,CAACoK,QAAM,WACZ,OAAP1c,QAAO,IAAPA,OAAO,EAAPA,EAAS3B,UAGf,eAAC,QAAI,CAAC2S,IAAK,EAAG/D,UAAU,uBAAsB,SAAC,WAG9CzO,EACQ,eAAC,GAAM,IACNC,EACA,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAAErP,IAEzB,iCACI,gBAACkO,GAAA,EAAG,WACI,gBAACC,GAAA,EAAG,CAAEoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UACrC,eAACvP,GAAA,EAAG,UACJ,eAAC0N,GAAA,EAAK,CAAChG,IAAY,OAAPrU,QAAO,IAAPA,GAAe,QAAR,EAAPA,EAASsU,cAAM,OAAiB,QAAjB,EAAf,EAAiBpT,MAAK,SAAAC,GAAC,OAAI,CAAI,WAAC,WAAzB,EAAP,EAAkCoT,MAAOsJ,IAAK7d,EAAQ3B,KAAMkc,OAAK,MAI7E,eAAC5N,GAAA,EAAG,CAACM,UAAU,0BAAyB,SAChC,OAAPjN,QAAO,IAAPA,GAAe,QAAR,EAAPA,EAASsU,cAAM,WAAR,EAAP,EAAiBlC,KAAI,SAAA0L,GAAG,OACrB,eAAClR,GAAA,EAAG,CAAcoP,GAAI,EAAGnP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAGjP,UAAU,SAAQ,SACnE,eAACoN,GAAA,EAAK,CAAChG,IAAKyJ,EAAIvJ,MAAOsJ,IAAKC,EAAI1c,GAAImZ,OAAK,EAACtN,UAAU,4BAD9C6Q,EAAI1c,GAIR,SAId,eAACwL,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACpC,gBAAC6B,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,eAACiQ,GAAA,EAAUzL,KAAI,UACX,gCAAI,yBAAQvE,MAAO,CAAEqD,SAAS,SAAU4M,WAAY,uBAAuB,SAAEhe,EAAQ3B,OAAc,IAAC,oBAAG0P,MAAO,CAACqD,SAAS,UAAU,SAAEpR,EAAQie,uBAEhJ,eAACF,GAAA,EAAUzL,KAAI,UACX,0BAAQvE,MAAO,CAAE4G,MAAM,UAAWvD,SAAS,IAAK,UAAEpR,EAAQgV,MAAM,YAGpE,gBAAC+I,GAAA,EAAUzL,KAAI,WACX,kCAAQ,gBAAoB,IAAkB,QAAjB,EAACtS,EAAQqS,gBAAQ,aAAhB,EAAkBD,KAAI,SAAAjR,GAAC,OAAIA,EAAE9C,IAAI,IAAE6f,KAAK,SAG1E,gBAACH,GAAA,EAAUzL,KAAI,WACX,kCAAQ,UAAc,IAAEtS,EAAQ2U,SAGpC,gBAACoJ,GAAA,EAAUzL,KAAI,WACX,kCAAQ,qBAAyB,IAAEtS,EAAQuY,gBAG/C,gBAACwF,GAAA,EAAUzL,KAAI,WACX,kCAAQ,kBAAsB,IAAEtS,EAAQme,qBAG5C,gBAACJ,GAAA,EAAUzL,KAAI,WACX,kCAAQ,oBAAwB,IAAE8L,MAAMC,QAAQre,EAAQse,SAA0B,QAAlB,EAAGte,EAAQse,eAAO,aAAf,EAAiBJ,KAAK,MAAQ,MAGrG,gBAACH,GAAA,EAAUzL,KAAI,WACX,kCAAQ,gBAAoB,IAAEtS,EAAQue,cAG1C,gBAACR,GAAA,EAAUzL,KAAI,WACX,kCAAQ,qBAAyB,IAAEtS,EAAQie,mBAG/C,gBAACF,GAAA,EAAUzL,KAAI,WACX,kCAAQ,mBAAuB,IAAEtS,EAAQuW,aAIrD,eAAC3J,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,SACrC,gBAACjI,GAAA,EAAI,WACL,eAACA,GAAA,EAAKS,MAAK,CAAC3G,MAAO,CAAEoD,UAAU,SAAUwD,MAAM,SAAS,SAAC,aACrD,gBAACoJ,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,eAACiQ,GAAA,EAAUzL,KAAI,UACX,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,UAGL,eAACA,GAAA,EAAG,UACA,oCAAS5M,EAAQgV,MAAM,iBAInC,eAAC+I,GAAA,EAAUzL,KAAI,UACX,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,YAGL,eAACA,GAAA,EAAG,UACA,sBAAKmB,MAAO,CACI4G,MAAM,GAAD,OAAM3U,EAAQyU,aAAe,EAAI,QAAU,OAChDrD,SAAU,IACZ,SACRpR,EAAQyU,aAAe,EAAI,YAAc,0BAM1DzU,EAAQyU,aAAe,GACpB,eAACsJ,GAAA,EAAUzL,KAAI,UACX,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,cACL,eAACA,GAAA,EAAG,CAACsP,GAAG,OAAOjP,UAAU,OAAM,SAC3B,eAACX,GAAA,EAAKQ,QAAO,CACRiI,GAAG,SACH3H,MAAO9L,EACP4L,SAAU,SAACV,GAAC,OAAK2Q,EAAOqB,OAAOhS,EAAEW,OAAOC,OAAO,EAAE,SAEzC,aAAIgR,MAAMpe,EAAQyU,cAAcgK,QAAQrM,KAAI,SAACjR,GAAC,OAC1C,yBAAmBiM,MAAOjM,EAAG,EAAE,SAC1BA,EAAE,GADMA,EAAG,EAEP,aAU1C,eAAC4c,GAAA,EAAUzL,KAAI,UACX,eAACzE,GAAA,EAAM,CACHZ,UAAU,gBACV0L,SAAkC,GAAxB3Y,EAAQyU,aAClB1H,KAAK,SACLuD,QA1JzB,WACrBjC,EAASwO,GAAU2B,OAAOpd,GAAKod,OAAOld,KACtCuF,QAAQC,IAAI,yBAAD,OAA2B1F,EAAE,gBAAUE,IAClDkW,EAAS,aAAD,OAAcpW,EAAE,gBAAQE,GACpC,EAsJ6E,SAAC,+BAUxD,eAACqL,GAAA,EAAG,UACA,gBAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,UACzC,qBAAInO,MAAO,CAAC4G,MAAM,SAAS,SAAC,mBACxB,eAACoJ,GAAA,EAAS,CAACjQ,QAAQ,QAAO,SAClB,eAACiQ,GAAA,EAAUzL,KAAI,UACVtS,EAAQ0e,0BA8ErD,E,kDC/DeC,OA3Mf,WAEE,IAAMnH,EAAWvL,eAEjB,GADiBE,eACWuP,8BAAiB,oBAAtChF,EAAM,KACb,GADwB,KACE5K,oBAAS,IAAK,oBAAjC6I,EAAK,KAAEiK,EAAQ,KAChBxd,EAAKsV,EAAOhG,IAAI,MAGtB,GAFYgG,EAAOhG,IAAI,OAEO5E,mBAAS,UAAQ,oBAAxCjL,EAAO,KAAEge,EAAU,KAC1B,EAAgC/S,mBAAS,WAAU,oBAA5ChL,EAAQ,KAAEge,EAAW,KAEtBzQ,EAAWnC,cAETtL,EADK8O,aAAY,SAAC5Q,GAAK,OAAKA,EAAM2L,IAAI,IACtC7J,UA8BR,OA3BAwL,qBAAU,WAMV,GAAG,CAAChL,IAsBF,iCACA,gBAACuL,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,UACvC,8BAAI,UACmB,KAAb,OAATtb,QAAS,IAATA,OAAS,EAATA,EAAWsP,QACV,gBAAC,GAAO,CAACpC,QAAQ,OAAM,UAAC,wBACD,eAAC,QAAI,CAACkD,GAAG,IAAG,SAAC,wBAGpC,eAAC+M,GAAA,EAAS,CAACjQ,QAAQ,QAAO,SACd,OAATlN,QAAS,IAATA,OAAS,EAATA,EAAWwR,KAAI,SAAC/Q,GAAU,IAAD,IACxB,OACA,eAAC0c,GAAA,EAAUzL,KAAI,CAAeyM,OAAQ1d,EAAKC,IAAM,EAAE,SACjD,gBAACqL,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACtC,eAAC7B,GAAA,EAAK,CACJhG,IAAKhT,EAAKkT,MACVsJ,IAAKxc,EAAKhD,KACVkc,OAAK,EACLC,SAAO,MAGX,eAAC5N,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACtC,eAAC,QAAI,CAAClL,GAAE,oBAAe3P,EAAKD,IAAK,SAAC,kCAAQ,8BAAKC,EAAKhD,aAEtD,eAACuO,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SAAC,oCAAS7a,EAAK2T,MAAMgK,QAAQ,GAAG,YACxE,eAACpS,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACtC,eAAC5P,GAAA,EAAKQ,QAAO,CACXiI,GAAG,SACH3H,MAAO/L,EAAKC,IACZ4L,SAAU,SAACV,GAAC,OACV6B,EAASwO,GAAUxb,EAAKD,GAAIod,OAAOhS,EAAEW,OAAOC,QAAQ,EACrD,SAEC/L,EAAKoT,aAAe,IAEqB,QAFpB,eAEY,QAFZ,EAEb2J,MAAU,OAAJ/c,QAAI,IAAJA,OAAI,EAAJA,EAAMoT,qBAAa,aAAzB,EAA2BgK,eAAM,aAArC,EAAwCrM,KAAI,SAACjR,GAAC,OAC5C,yBAAoBiM,MAAOjM,EAAI,EAAG4M,MAAO,CAAEmG,MAAO,GAAG,SAClD/S,EAAI,GADMA,EAAI,EAER,SAMrB,eAACyL,GAAA,EAAG,CAACC,GAAI,EAAGsL,GAAI,EAAG+D,GAAI,EAAE,SACvB,eAACrO,GAAA,EAAM,CACLd,KAAK,SACLe,QAAQ,QACRwC,QAAS,kBArEC,SAAClP,GAC7BiN,EAAS0O,GAAe3b,GAC1B,CAmEmC6d,CAAsB5d,EAAKD,GAAG,EAAC,SAE9C,eAAC,KAAe,CAACmP,KAAM2O,eAvCV7d,EAAKD,GA4C5B,SAIN,eAACwL,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,SACvC,gBAACjI,GAAA,EAAI,CAAC/B,OAAO,OAAM,UAChB,eAAC+B,GAAA,EAAKrD,OAAM,CAACmE,GAAG,KAAI,SAAC,oBACtB,gBAACgJ,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACxB,eAACiQ,GAAA,EAAUzL,KAAI,UACb,gBAAC3F,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SAAC,kCAAQ,gBACjD,gBAACtP,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAC,IAAC,kCAAQ,mBAK5C,OAATtb,QAAS,IAATA,OAAS,EAATA,EAAWc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,IAAE8Q,KAAI,SAAC/Q,GAAI,OACxC,eAAC0c,GAAA,EAAUzL,KAAI,UACb,gBAAC3F,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAE7a,EAAKC,IAAI,gBAAcD,EAAKhD,QACrE,gBAACuO,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAC,KAAG7a,EAAKC,IAAMD,EAAK2T,OAAOgK,QAAQ,UAHzD3d,EAAKD,GAMR,IAEtB,eAAC2c,GAAA,EAAUzL,KAAI,UACT,gBAAC3F,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SAAC,kCAAQ,6BAChD,gBAACtP,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAC,IAAEtb,EAAUgP,QAAO,SAACwP,EAAK/d,GAAI,OAAM+d,EAAM/d,EAAKC,GAAG,GAAE,WAInG,eAACyc,GAAA,EAAUzL,KAAI,UACT,gBAAC3F,GAAA,EAAG,WACF,gBAACC,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAC,IAAC,kCAAQ,oBACjD,gBAACtP,GAAA,EAAG,CAACuS,EAAG,GAAItS,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UAAC,IAAEtb,EAAUgP,QAAO,SAACwP,EAAK/d,GAAI,OAAM+d,EAAM/d,EAAKC,IAAMD,EAAK2T,KAAK,GAAE,GAAGgK,QAAQ,GAAG,eAI9H,eAACjB,GAAA,EAAUzL,KAAI,UAEX,gBAAC+M,GAAA,EAAW,WACV,eAACC,GAAA,EAAS,CAACle,GAAG,sCAAqC,SAAC,8BAAI,cACxD,gBAACme,GAAA,EAAU,CACT,kBAAgB,sCAChBlhB,KAAK,iCACL+O,MAAOvM,EACPqM,SAAU,SAACV,GAAC,OAAKqS,EAAWrS,EAAEW,OAAOC,MAAM,EAAC,UAE5C,eAACoS,GAAA,EAAgB,CAACpS,MAAM,QAAQqS,QAAS,eAACC,GAAA,EAAK,IAAKjH,MAAM,sBAC1D,eAAC+G,GAAA,EAAgB,CAACpS,MAAM,QAAQqS,QAAS,eAACC,GAAA,EAAK,IAAKjH,MAAM,gCAKlE,eAACsF,GAAA,EAAUzL,KAAI,UAEX,gBAAC+M,GAAA,EAAW,WACV,eAACC,GAAA,EAAS,CAACle,GAAG,sCAAqC,SAAC,8BAAI,eACxD,gBAACme,GAAA,EAAU,CACT,kBAAgB,sCAChBlhB,KAAK,iCACL+O,MAAOtM,EACPoM,SAAU,SAACV,GAAC,OAAKsS,EAAYtS,EAAEW,OAAOC,MAAM,EAAC,UAE7C,eAACoS,GAAA,EAAgB,CAACpS,MAAM,SAASqS,QAAS,eAACC,GAAA,EAAK,IAAKjH,MAAM,oBAC3D,eAAC+G,GAAA,EAAgB,CAACpS,MAAM,UAAUqS,QAAS,eAACC,GAAA,EAAK,IAAKjH,MAAM,iCAKpE,eAACsF,GAAA,EAAUzL,KAAI,UACb,eAACzE,GAAA,EAAM,CACLd,KAAK,SACLE,UAAU,YACV0L,SAAgC,IAArB/X,EAAUsP,OACrBI,QApJU,SAAC9D,GACpB5L,EAAUgP,QAAO,SAACwP,EAAK/d,GAAI,OAAM+d,EAAM/d,EAAKC,IAAMD,EAAK2T,KAAK,GAAE,GAAK,IACpE4J,GAAS,IAGXvQ,EAAS2O,GAA0Bnc,EAASC,IAC5C0W,EAAS,aAEX,EA4IuC,SAAC,wCAQtC,eAAC7K,GAAA,EAAG,UACF,eAACC,GAAA,EAAG,CAACmB,MAAO,CAAE6G,QAAQ,UAAW/H,GAAI,EAAE,SACnC,eAACgB,GAAA,EAAM,CAACd,KAAK,SACPE,UAAU,YAEVqD,QAvJM,WAElBkH,EAAS,IACX,EAoJmC,SAAC,iCAKlC,eAAC7K,GAAA,EAAG,UACF,wBAAMoB,MAAO,CAAEmE,OAAQyC,EAAQ,kBAAoB,gBAAkBT,MAAM,MAAO2F,SAAS,SAAUjF,QAAS,OAAQzD,UAAU,SAAUW,OAAQ,OAAQV,SAAS,UAAU,UAAC,6HACrExQ,EAAUgP,QAAO,SAACwP,EAAK/d,GAAI,OAAM+d,EAAM/d,EAAKC,IAAMD,EAAK2T,KAAK,GAAE,GAAGgK,QAAQ,GAAG,cAI3L,ECrNeW,OAZf,SAAuB,GAAa,IAAZ1G,EAAQ,EAARA,SACtB,OACE,eAACvM,GAAA,EAAS,UACR,eAACC,GAAA,EAAG,CAACM,UAAU,4BAA2B,SACpC,eAACL,GAAA,EAAG,CAACsP,GAAI,GAAIrP,GAAI,EAAE,SACdoM,OAKjB,ECkFiB2G,OAnFjB,WAEI,MAA2B9T,mBAAS,IAAG,oBAAhCqC,EAAK,KAAG0R,EAAQ,KACvB,EAAiC/T,mBAAS,IAAG,oBAC7C,GADe,KAAc,KACFA,mBAAS,KAAG,oBACvC,GADY,KAAW,KACQA,mBAAS,KAAG,oBAC3C,GADc,KAAa,KACSA,mBAAS,KAAG,oBAChD,GADiB,KAAe,KACEA,mBAAS,KAAG,oBAC9C,GADgB,KAAc,KACIA,mBAAS,KAAG,oBAAvCsC,EAAQ,KAAG0R,EAAW,KAEvBzR,EAAWnC,cAEXsL,EAAWvL,eAEjB,EAA4ByP,6BAAiB,oBAAtChF,EAAM,KACPqJ,GADkB,KACPrJ,EAAOhG,IAAI,aAGtBxN,EAAOwM,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IACzCtI,EAA6Bc,EAA7Bd,SAAU3D,EAAmByE,EAAnBzE,MAAOD,EAAY0E,EAAZ1E,QAgBzB,OAdA4N,qBAAU,WAEHhK,GAECoV,EAAS,IAEjB,GAAE,CAACA,EAAUpV,EAAU2d,IASrB,gBAAC,GAAa,WACZ,0CACCthB,GAAS,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAC1BrP,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAAC8N,GAAA,EAAI,CAACC,SAZY,SAACsG,GACnBA,EAAMpG,iBACN4B,EAASH,GAAMC,EAAOC,GAE1B,EAQkC,UACtB,gBAAC9B,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,2BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,QACLuL,YAAY,mBACZlL,MAAOe,EACPjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,OAKrD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC3T,GAAA,EAAK4T,MAAK,uBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,WACLuL,YAAY,sBACZlL,MAAOgB,EACPlB,SAAU,SAACV,GAAC,OAAKsT,EAAYtT,EAAEW,OAAOC,MAAM,OAKxD,eAACS,GAAA,EAAM,CAACd,KAAK,SAASoT,SAAS,UAAS,6BAKhD,eAACxT,GAAA,EAAG,CAACM,UAAU,OAAM,SACjB,gBAACL,GAAA,EAAG,6BACW,eAAC,QAAI,CAACoE,GAAK+O,EAAQ,6BAAyBA,GAAa,YAAa,iCAK/F,E,cC7FF,mmGAAA9R,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMmS,GAAW,SAACC,EAAUlS,EAAOC,EAAUkS,EAAU7J,EAAO7C,EAAS2M,EAAYC,GACtF,gDAAO,WAAOnS,GAAQ,0EAyBqC,OAtBjDC,EAAS,yCAAG,yFAMb,OAJKC,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAEtB,SACsBC,KAAMC,KAAK,uBAClC,CACI,KAAO2R,EACP,MAASlS,EACT,SAAYmS,EACZ,MAAS7J,EACT,QAAW7C,EACX,WAAc2M,EACd,UAAaC,EACb,SAAYpS,GACbG,GAAO,OAVE,OAUF,SAVFI,EAAI,EAAJA,KAAI,kBAWLA,GAAI,2CACd,kBAnBc,4CAsBXN,EAAStL,EAAoBH,uBAAsB,SAChC0L,IAAW,OAAxBK,EAAI,OACVN,EAAStL,EAAoBF,oBAAoB8L,IAEjDN,EAAS5L,EAAYH,iBAAiBqM,IAEtCpO,aAAa8L,QAAQ,WAAY5L,KAAKmO,UAAUD,IAAM,kDAItDN,EACItL,EAAoBD,iBAClB,KAAM+L,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,mDA3CD,EA4CJ,EC6Je0R,OAjMf,WAEI,MAA6B3U,mBAAS,IAAG,oBAAlCuU,EAAQ,KAAGK,EAAO,KACzB,EAA2B5U,mBAAS,IAAG,oBAAhCqC,EAAK,KAAG0R,EAAQ,KACvB,EAAiC/T,mBAAS,IAAG,oBAAtCwU,EAAQ,KAAGK,EAAW,KAC7B,EAA2B7U,mBAAS,IAAG,oBAAhC2K,EAAK,KAAGmK,EAAQ,KACvB,EAA+B9U,mBAAS,IAAG,oBAApC8H,EAAO,KAAGiN,EAAU,KAC3B,EAAoC/U,mBAAS,IAAG,oBAAzCyU,EAAU,KAAGO,EAAY,KAChC,EAAkChV,mBAAS,IAAG,oBAAvC0U,EAAS,KAAGO,EAAW,KAC9B,EAAkCjV,mBAAS,IAAG,oBAAvCsC,EAAQ,KAAG0R,EAAW,KAC7B,EAAgDhU,mBAAS,IAAG,oBAArDkV,EAAe,KAAGC,EAAkB,KAC3C,EAAgCnV,mBAAS,IAAG,oBAArCiD,EAAO,KAAGmS,EAAU,KAGrB7S,EAAWnC,cAEXsL,EAAWvL,eAEjB,EAA4ByP,6BAAiB,oBAAtChF,EAAM,KACPqJ,GADkB,KACPrJ,EAAOhG,IAAI,aAEtB/F,EAAe+E,aAAY,SAAA5Q,GAAK,OAAIA,EAAM6L,YAAY,IACpDvI,EAA6BuI,EAA7BvI,SAAU3D,EAAmBkM,EAAnBlM,MAAOD,EAAYmM,EAAZnM,QAsB3B,OApBE4N,qBAAU,WAEHhK,GACCoV,EAAS,sBAAD,OAAuBuI,GAEvC,GAAE,CAACvI,EAAUpV,EAAU2d,IAgBvB,gBAAC,GAAa,WACV,+CACChR,GAAW,eAAC,GAAO,CAACjB,QAAQ,SAAQ,SAC5BiB,IAERtQ,GAAS,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAC1BrP,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAAC8N,GAAA,EAAI,CAACC,SAtBY,SAACsG,GACnBA,EAAMpG,iBACH2B,GAAY4S,EAEXE,EAAW,0BAEf7S,EAAS+R,GAASC,EAAUlS,EAAOC,EAAUkS,EAAU7J,EAAO7C,EAAS2M,EAAYC,GAGvF,EAakC,UACtB,gBAAClU,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,wBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,uBACZlL,MAAOiT,EACPnT,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,OAMpD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,2BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,QACLuL,YAAY,mBACZlL,MAAOe,EACPjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,OAKrD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC3T,GAAA,EAAK4T,MAAK,4BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,WACLuL,YAAY,gCACZlL,MAAOkT,EACPpT,SAAU,SAACV,GAAC,OAAKmU,EAAYnU,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,6BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,QACLuL,YAAY,gCACZlL,MAAOqJ,EACPvJ,SAAU,SAACV,GAAC,OAAKoU,EAASpU,EAAEW,OAAOC,MAAM,OAKrD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAC3T,GAAA,EAAK4T,MAAK,qBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,UACLuL,YAAY,yBACZlL,MAAOwG,EACP1G,SAAU,SAACV,GAAC,OAAKqU,EAAWrU,EAAEW,OAAOC,MAAM,OAKvD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,4BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,aACLuL,YAAY,iCACZlL,MAAOmT,EACPrT,SAAU,SAACV,GAAC,OAAKsU,EAAatU,EAAEW,OAAOC,MAAM,OAKzD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAC3T,GAAA,EAAK4T,MAAK,mCAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLC,KAAK,YACLuL,YAAY,+BACZlL,MAAOoT,EACPtT,SAAU,SAACV,GAAC,OAAKuU,EAAYvU,EAAEW,OAAOC,MAAM,OAIxD,wBACA,wBACA,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC3T,GAAA,EAAK4T,MAAK,uBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,WACLuL,YAAY,mBACZlL,MAAOgB,EACPlB,SAAU,SAACV,GAAC,OAAKsT,EAAYtT,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,+BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,WACLuL,YAAY,uBACZlL,MAAO4T,EACP9T,SAAU,SAACV,GAAC,OAAKyU,EAAmBzU,EAAEW,OAAOC,MAAM,OAK/D,eAACS,GAAA,EAAM,CAACd,KAAK,SAASoT,SAAS,UAAS,6BAMhD,eAACxT,GAAA,EAAG,CAACM,UAAU,OAAM,SACjB,gBAACL,GAAA,EAAG,+BACa,eAAC,QAAI,CAACoE,GAAK+O,EAAQ,0BAAsBA,GAAa,SAAU,0BAK7F,E,wBC3MA,mmGAAA9R,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMmT,GAAiB,SAAChgB,GAC3B,gDAAO,WAAOiN,EAAUyO,GAAQ,8EAoByB,OApBzB,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAEhByE,QAAQC,IAAI,iBAAiB1F,GACvBkN,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAMiC,IAAI,cAAD,OAAetP,EAAE,KAAKmN,GAAO,OAAjD,OAAiD,SAArDI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAAS9K,EAAmBJ,sBAAqB,SAC9BmL,IAAW,OAAxBK,EAAI,OACV9H,QAAQC,IAAI,qCACZuH,EAAS9K,EAAmBH,mBAAmBuL,IAAM,kDAKrDN,EACI9K,EAAmBF,gBACjB,KAAMwL,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,EAEazL,GAAmB,WAC5B,gDAAO,WAAO+K,GAAQ,kEAElB,IACIA,EAAS9K,EAAmBD,mBAWhC,CATE,MAAO7E,GAEL4P,EACI9K,EAAmBF,gBACjB5E,EAAMoQ,UAAYpQ,EAAMoQ,SAASF,KAAKG,OACpCrQ,EAAMoQ,SAASF,KAAKG,OACpBrQ,EAAMsQ,SAGlB,CAAC,2CACJ,mDAfD,EAgBJ,E,cC5DA,mmGAAAd,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMsT,GAAoB,SAACre,GAC9B,gDAAO,WAAOmL,EAAUyO,GAAQ,8EAoBqC,OApBrC,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAM+S,IAAI,6BAA8Bte,EAAMqL,GAAO,OAAhE,OAAgE,SAApEI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAASvK,EAAyBH,4BAA2B,SAC1C2K,IAAW,OAAxBK,EAAI,OAEVN,EAASvK,EAAyB2d,yBAAyB9S,IAE3DN,EAAS5L,EAAYH,oBAErB/B,aAAa8L,QAAQ,WAAY5L,KAAKmO,UAAUD,IAAM,kDAItDN,EACIvK,EAAyBF,sBACvB,KAAMiL,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,E,cC5CA,mmGAAAd,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMyT,GAAe,WACxB,gDAAO,WAAOrT,EAAUyO,GAAQ,8EAuBuC,OAvBvC,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAIVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SAEsB7S,KAAMiC,IAAI,uBAAwBnC,GAAO,OAApD,OAAoD,SAAxDI,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAbc,4CAgBXN,EAAS/H,EAA0BJ,6BAA4B,SAC5CoI,IAAW,OAAxBK,EAAI,OAEVN,EAAS/H,EAA0BH,0BAA0BwI,IAAM,kDAKnEN,EACI/H,EAA0BF,uBACxB,KAAMyI,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,ECkKe4S,OA9Lf,WAEI,MAAyB7V,mBAAS,IAAG,oBAA9BzN,EAAI,KAAGqiB,EAAO,KACrB,EAA2B5U,mBAAS,IAAG,oBAAhCqC,EAAK,KAAG0R,EAAQ,KACvB,EAAkC/T,mBAAS,IAAG,oBAAvCsC,EAAQ,KAAG0R,EAAW,KAC7B,EAAgDhU,mBAAS,IAAG,oBAArDkV,EAAe,KAAGC,EAAkB,KAC3C,EAAgCnV,mBAAS,IAAG,oBAArCiD,EAAO,KAAGmS,EAAU,KAErB7S,EAAWnC,cAEXsL,EAAWvL,eAEXrB,EAAc8E,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8L,WAAW,IAClD1H,EAAyB0H,EAAzB1H,KAAMzE,EAAmBmM,EAAnBnM,MAAOD,EAAYoM,EAAZpM,QAGb4D,EADUsN,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC9CtI,SAGAsB,EADkBgM,aAAY,SAAA5Q,GAAK,OAAIA,EAAM+L,iBAAiB,IAC9DnH,QAEFwH,EAAqBwE,aAAY,SAAA5Q,GAAK,OAAIA,EAAMoM,kBAAkB,IAChEjF,EAAuDiF,EAAvDjF,OAAiB2b,EAAsC1W,EAA/C1M,QAA+BqjB,EAAgB3W,EAAvBzM,MAsC1C,OAnCE2N,qBAAU,WAEFhK,EAGgC,IAA7B0f,OAAOrD,KAAKvb,GAAMgN,QAAgBxM,GACjC2K,EAASvK,EAAyBD,0BAClCwK,EAAS+S,GAAe,YACxB/S,EAASqT,QAEThB,EAAQxd,EAAK7E,MACbwhB,EAAS3c,EAAKiL,QARlBqJ,EAAS,SAWjB,GAAE,CAACA,EAAUpV,EAAUiM,EAAUnL,EAAMQ,IAsBvC,gBAACiJ,GAAA,EAAG,WAEA,gBAACC,GAAA,EAAG,CAACC,GAAI,EAAE,UACP,+CACCkC,GAAW,eAAC,GAAO,CAACjB,QAAQ,SAAQ,SAChCiB,IAERtQ,GAAS,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAC1BrP,IAEPD,GAAW,eAAC,GAAM,IACpB,gBAAC8N,GAAA,EAAI,CAACC,SA9BY,SAACsG,GACnBA,EAAMpG,iBACH2B,GAAY4S,EAEXE,EAAW,2BAEP7S,EAASkT,GAAkB,CACvB,GAAMre,EAAKqP,IACX,KAAOlU,EACP,MAAQ8P,EAER,SAAWC,KAEf8S,EAAW,IAGvB,EAckC,UACtB,gBAAC5U,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,mBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,gBACZlL,MAAO/O,EACP6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,OAMpD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,2BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,QACLuL,YAAY,kBACZlL,MAAOe,EACPjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,OAKrD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,WAAU,UAC5B,eAAC3T,GAAA,EAAK4T,MAAK,uBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CAELC,KAAK,WACLuL,YAAY,qBACZlL,MAAOgB,EACPlB,SAAU,SAACV,GAAC,OAAKsT,EAAYtT,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,+BAGX,eAAC5T,GAAA,EAAKQ,QAAO,CAELC,KAAK,WACLuL,YAAY,uBACZlL,MAAO4T,EACP9T,SAAU,SAACV,GAAC,OAAKyU,EAAmBzU,EAAEW,OAAOC,MAAM,OAK/D,eAACS,GAAA,EAAM,CAACd,KAAK,SAASoT,SAAS,UAAS,0BAMhD,gBAACvT,GAAA,EAAG,CAACC,GAAI,EAAE,UACP,kDAEC+U,EACG,eAAC,GAAM,IAGPC,EACA,eAAC,GAAO,CAAC/T,QAAU,SAAQ,SAClB+T,IAIT,gBAACE,GAAA,EAAK,CAACC,SAAO,EAACC,YAAU,EAAChV,UAAU,WAAU,UAC1C,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCAEKhH,EAAOmM,KAAI,SAAAxN,GAAK,OACb,gCACI,8BAAKA,EAAM2N,MACX,8BAAK3N,EAAMsd,UAAUC,UAAU,EAAG,MAClC,gCAAKvd,EAAMwd,WAAU,UACrB,8BAAKxd,EAAMyd,OAASzd,EAAM0d,OAAOH,UAAU,EAAG,IAC1C,oBAAGlV,UAAU,eAAec,MAAO,CAAE4G,MAAO,WAEhD,8BAAK/P,EAAM2N,MACX,8BACI,eAAC,iBAAa,CAACvB,GAAE,iBAAYpM,EAAM2N,KAAM,SACrC,eAAC1E,GAAA,EAAM,CAACZ,UAAU,SAAQ,2BAV7BrI,EAAM2N,IAeV,cASjC,ECzMagQ,GAAsB,SAAC5T,GAChC,OAAQ,SAACN,GAEDA,EAASjK,EAAgBD,mBAAmBwK,IAE5CpO,aAAa8L,QAAQ,kBAAmB5L,KAAKmO,UAAUD,GAE/D,CACJ,EC6Ce6T,OArDf,SAAuB,GAAwB,IAAvBC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAK,EAALA,MACpC,OACE,gBAACrR,GAAA,EAAG,CAACrE,UAAU,8BAA6B,UACxC,eAACqE,GAAA,EAAIgB,KAAI,UACJmQ,EACO,eAAC,iBAAa,CAACzR,GAAG,SAAQ,SACtB,eAACM,GAAA,EAAIC,KAAI,sBAKjB,eAACD,GAAA,EAAIC,KAAI,CAACoH,UAAQ,uBAO1B,eAACrH,GAAA,EAAIgB,KAAI,UACJoQ,EACO,eAAC,iBAAa,CAAC1R,GAAG,YAAW,SACzB,eAACM,GAAA,EAAIC,KAAI,uBAKjB,eAACD,GAAA,EAAIC,KAAI,CAACoH,UAAQ,wBAO1B,eAACrH,GAAA,EAAIgB,KAAI,UACJqQ,EACO,eAAC,iBAAa,CAAC3R,GAAG,cAAa,SAC3B,eAACM,GAAA,EAAIC,KAAI,yBAKjB,eAACD,GAAA,EAAIC,KAAI,CAACoH,UAAQ,4BAUlC,E,4DCoNeiK,OA3Pf,WAA2B,IAAD,UAGd1e,EADSwL,aAAY,SAAA5Q,GAAK,OAAIA,EAAMgM,QAAQ,IAC5C5G,gBAER,EAA2B4H,mBAAS,KAAI,oBAAjCsB,EAAK,KAAGyV,EAAQ,KACvB,EAAyB/W,mBAAS5H,EAAgB7F,MAAK,oBAAhDA,EAAI,KAAGqiB,EAAO,KACrB,EAA2B5U,mBAAS5H,EAAgBiK,OAAM,oBAAnDA,EAAK,KAAG0R,EAAQ,KACvB,EAAiC/T,mBAAS5H,EAAgBkK,UAAS,oBAA5DA,EAAQ,KACf,GAD6B,KACJtC,mBAAS5H,EAAgBwK,OAAK,oBAAhDA,EAAI,KAAGoU,EAAO,KACrB,EAA+BhX,mBAAS5H,EAAgB0P,SAAQ,oBAAzDA,EAAO,KAAGiN,EAAU,KAC3B,EAAkC/U,mBAAS5H,EAAgBsc,WAAU,oBAA9DA,EAAS,KAAGO,EAAW,KAC9B,EAAoCjV,mBAAS5H,EAAgBqc,YAAW,oBAAjEA,EAAU,KAAGO,EAAY,KAChC,EAAgChV,mBAAS5H,EAAgB6e,SAAQ,oBAA1DA,EAAO,KAAGC,EAAU,KAErB3U,EAAWnC,cAEXsL,EAAWvL,eACjB,EAAiEgX,aAAQ,CAAEC,KAAK,aAAxE9C,EAAQ,EAARA,SAAU+C,EAAY,EAAZA,aAAkCC,GAAf,EAALC,MAA0B,EAAnBC,UAAaF,QAGpD,EAA4B1H,6BAAiB,oBAAtChF,EAAM,KAwBf,OAxB0B,KACPA,EAAOhG,IAAI,YAwB5B,iCACE,eAAC,GAAa,CAAC+R,OAAK,EAACC,OAAK,IAC1B,gBAACa,GAAA,EAAU,CAACnW,MAAOA,EAAM,UACzB,eAACoW,GAAA,EAAG,CAACC,GAAI,CAAEC,aAAa,EAAGC,YAAa,WAAY,SAClD,gBAACC,GAAA,EAAO,CAAC1W,SA1BK,SAACV,EAAGY,GAAK,OAAKyV,EAASzV,EAAO,EA0Bd,aAAW,uBAAsB,UAC7D,eAACyW,GAAA,EAAG,CAACpL,MAAM,eAAerL,MAAM,MAChC,eAACyW,GAAA,EAAG,CAACpL,MAAM,kBAAkBrL,MAAM,IAAIuL,UAAQ,SAInD,eAACmL,GAAA,EAAQ,CAAC1W,MAAM,IAAG,SACf,gBAAC,GAAa,WAEZ,+CACA,gBAACd,GAAA,EAAI,CAACC,SAAU4W,GAlCD,SAACxU,EAAMkE,GAC1BA,EAAMpG,iBACN4B,EAASkU,GAAoB,CACzBlkB,OAAM8P,QAAOC,WAAUM,OACvBkF,UAAS4M,YAAWD,aAAYwC,aAEpCvL,EAAS,cACb,IA2BqD,UAEzC,gBAAClL,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,iCAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BACDsT,EAAS,WAAY,CACrBe,SAAU,iCACV4C,UAAW,CACP3W,MAAO,EACP2B,QAAS,iCAEbiV,QAAS,CACL5W,MAAO,gBACP2B,QAAQ,+CAGd,IACF,eAAcqU,EAAOa,SAAW,OAAS,QACzClX,KAAK,OACLuL,YAAY,gCACZlL,MAAO/O,GAAc,GACrB6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,KAG/CgW,EAAOa,UAAY,uBAAMlW,MAAO,CAAE4G,MAAO,OAAQoE,KAAK,QAAO,SAAiB,QAAjB,EAAEqK,EAAOa,gBAAQ,aAAf,EAAiBlV,aAGrF,gBAACzC,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,oBAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,QAAQ,CAC3Be,UAAU,EACV6C,QAAS,CACL5W,MAAO,0JACP2B,QAAS,sBAEbA,QAAQ,8BACV,IACE,eAAcqU,EAAOjV,MAAQ,OAAS,QACtCpB,KAAK,QACLuL,YAAY,mBACZlL,MAAOe,GAAgB,GACvBjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,KAGhDgW,EAAOjV,OAAS,uBAAMJ,MAAO,CAAE4G,MAAO,OAAQoE,KAAK,QAAO,SAAc,QAAd,EAAEqK,EAAOjV,aAAK,aAAZ,EAAcY,aAG/E,gBAACzC,GAAA,EAAK0T,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAC3T,GAAA,EAAK4T,MAAK,qCAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,OAAO,CAC1Be,SAAS,4CACP,IAEFpU,KAAK,OACLuL,YAAY,oCACZlL,MAAOsB,GAAc,GACrBxB,SAAU,SAACV,GAAC,OAAKsW,EAAQtW,EAAEW,OAAOC,MAAM,KAG/CgW,EAAO1U,MAAQ,uBAAMX,MAAO,CAAE4G,MAAO,OAAQoE,KAAK,QAAO,SAAa,QAAb,EAAEqK,EAAO1U,YAAI,aAAX,EAAaK,aAG5E,gBAACzC,GAAA,EAAK0T,MAAK,CAACC,UAAU,UAAS,UAC5B,eAAC3T,GAAA,EAAK4T,MAAK,qBAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,SAAS,CAC5Be,SAAS,sCACP,IAEFpU,KAAK,OACLuL,YAAY,mBACZlL,MAAOwG,GAAoB,GAC3B1G,SAAU,SAACV,GAAC,OAAKqU,EAAWrU,EAAEW,OAAOC,MAAM,KAGlDgW,EAAOc,QAAU,uBAAMnW,MAAO,CAAE4G,MAAO,OAAQoE,KAAK,QAAO,SAAe,QAAf,EAAEqK,EAAOc,cAAM,aAAb,EAAenV,aAGjF,gBAACzC,GAAA,EAAK0T,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAC3T,GAAA,EAAK4T,MAAK,4BAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,YAAY,CAEvB+D,cAAe,CACX/W,OAAO,EACP2B,QAAS,qCACf,IAENhC,KAAK,SACLuL,YAAY,gCACZlL,MAAOoT,GAAwB,GAC/BtT,SAAU,SAACV,GAAC,OAAKuU,EAAYvU,EAAEW,OAAOC,MAAM,KAGnDgW,EAAO5C,WAAa,uBAAMzS,MAAO,CAAE4G,MAAO,OAAQoE,KAAK,QAAO,SAAkB,QAAlB,EAAEqK,EAAO5C,iBAAS,aAAhB,EAAkBzR,aAIvF,gBAACzC,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,8BAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,eAAa,IAChCe,UAAQ,EACRpU,KAAK,SACLuL,YAAY,4BACZlL,MAAOmT,GAA0B,GACjCrT,SAAU,SAACV,GAAC,OAAKsU,EAAatU,EAAEW,OAAOC,MAAM,QAKzD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,UAAS,UAC3B,eAAC3T,GAAA,EAAK4T,MAAK,mCAGX,eAAC5T,GAAA,EAAKQ,QAAO,6BAAKsT,EAAS,YAAU,IAC7Be,UAAQ,EACRpU,KAAK,OACLuL,YAAY,kCACZlL,MAAO2V,GAAoB,GAC3B7V,SAAU,SAACV,GAAC,OAAKwW,EAAWxW,EAAEW,OAAOC,MAAM,KAInD,eAACS,GAAA,EAAM,CAACd,KAAK,SAASe,QAAQ,UAAS,+CASrD,eAACgW,GAAA,EAAQ,CAAC1W,MAAM,IAAIuL,UAAU,EAAK,SACjC,gBAAC,GAAa,WAEV,+CACA,gBAACrM,GAAA,EAAI,CAACC,SA3KS,SAACC,GAEpBA,EAAEC,iBACF4B,EAASkU,GAAoB,CACzBlkB,OAAM8P,QAAOC,WAAUM,OACvBkF,UAAS4M,YAAWD,aAAYwC,aAEpCvL,EAAS,cACb,EAmKuC,UAE3B,gBAAClL,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,iCAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,gCACZlL,MAAO/O,GAAc,GACrB6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,OAKpD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,oBAGX,eAAC5T,GAAA,EAAKQ,QAAO,CACLqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,mBACZlL,MAAOe,GAAgB,GACvBjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,IAIjD,eAACS,GAAA,EAAM,CAACd,KAAK,SAASe,QAAQ,UAAS,uCAcxD,E,cCxQH,mmGAAAG,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMzJ,GAAoB,SAACmK,GAC9B,gDAAO,WAAON,GAAQ,kEAGdA,EAAS5J,EAAeD,kBAAkBmK,IAE1CpO,aAAa8L,QAAQ,gBAAiB5L,KAAKmO,UAAUD,IAAM,2CAGlE,mDARD,EASJ,EC6DeyV,OA9Df,WAEI,IACQlgB,EADSwL,aAAY,SAAA5Q,GAAK,OAAIA,EAAMgM,QAAQ,IAC5C5G,gBAEFmK,EAAWnC,cAEXsL,EAAWvL,eAEjB,EAA0CH,mBAAS,UAAS,oBAArDvH,EAAa,KAAE8f,EAAgB,KAWxC,OATMngB,EAAgB0P,SACZ4D,EAAS,aAUjB,gBAAC,GAAa,WACV,eAAC,GAAa,CAACiL,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAACrW,GAAA,EAAI,CAACC,SAVY,SAACsG,GACnBA,EAAMpG,iBACN4B,EAAS7J,GAAkBD,IAC3BiT,EAAS,cACb,EAMkC,UAE1B,gBAAClL,GAAA,EAAK0T,MAAK,WAEP,eAAC1T,GAAA,EAAK4T,MAAK,CAACnL,GAAG,SAAQ,6BAGvB,gBAACnI,GAAA,EAAG,WACA,eAACN,GAAA,EAAKgY,MAAK,CACHvX,KAAK,QACL0L,MAAM,wBACNrX,GAAG,SACH/C,KAAK,gBACLkmB,SAAO,EACPrX,SAAU,SAACV,GAAC,OAAI6X,EAAiB7X,EAAEW,OAAOC,MAAM,IAGxD,eAACd,GAAA,EAAKgY,MAAK,CACHvX,KAAK,QACL0L,MAAM,WACNrX,GAAG,UACH/C,KAAK,gBAEL6O,SAAU,SAACV,GAAC,OAAI6X,EAAiB7X,EAAEW,OAAOC,MAAM,UAMhE,eAACS,GAAA,EAAM,CAACd,KAAK,SAASe,QAAQ,UAAS,4BAMnD,E,cCvEA,mmGAAAG,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMuW,GAAc,SAAC5f,GACxB,gDAAO,WAAOyJ,EAAUyO,GAAQ,0EAoBmB,OAdzCxO,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAItB,SACsBC,KAAMC,KAAK,mBAAoB9J,EAAO2J,GAAO,OAAxD,OAAwD,SAA5DI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAASpJ,EAAaJ,sBAAqB,SACxByJ,IAAW,OAAxBK,EAAI,OAEVN,EAASpJ,EAAaH,mBAAmB6J,IACzCN,EAASrM,EAAYL,kBAErBpB,aAAa0O,WAAW,aAAY,kDAIpCZ,EACIpJ,EAAaF,gBACX,KAAM8J,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAtCD,EAuCJ,EAEa0V,GAAa,WACtB,gDAAO,WAAOpW,GAAQ,kEAGlBA,EAASpJ,EAAaD,oBAAmB,2CAG5C,mDAND,EAOJ,E,qBCsKe0f,OA7Mf,SAA0B/W,GAAQ,IAAD,QAEvBU,EAAYnC,cAGlB,GAFiBD,eAESH,mBAAS,IAAE,oBAAvB6Y,GAAF,KAAU,MACtB,EAA+B7Y,mBAAS,GAAE,oBAAzB8Y,GAAF,KAAY,MAC3B,EAA6B9Y,mBAAS,CAAC,GAAE,oBAAzB+Y,GAAF,KAAW,MAEnBC,EAAcpV,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8F,KAAK,IAC5CA,EAAmCkgB,EAAnClgB,MAAQnG,EAA2BqmB,EAA3BrmB,MAAOiF,EAAoBohB,EAApBphB,QAGfQ,GAHmC4gB,EAAXtmB,QAEbkR,aAAY,SAAA5Q,GAAK,OAAIA,EAAMgM,QAAQ,IAC9C5G,iBAKFuG,EAAOiF,aAAY,SAAA5Q,GAAK,OAAIA,EAAM2L,IAAI,IACrC3J,EAAsB2J,EAAtB3J,SAAUD,EAAY4J,EAAZ5J,QAEXkkB,EAAata,EAAK7J,UAAUgP,QAAO,SAACwP,EAAI/d,GAAI,OAAK+d,EAAM/d,EAAK2T,MAAQ3T,EAAKC,GAAG,GAAE,GAAG0d,QAAQ,GAGzFoD,GAAc5D,OAAOuG,GAAcvG,OAFlB,GAE0CA,OADhD,IACkEQ,QAAQ,GA0C7F,OAvCE5S,qBAAU,WAEF1I,IACAihB,EAAS/f,EAAMwd,YACfwC,EAAWhgB,EAAM2N,KACjBsS,EAAUjgB,EAAMogB,YAChBne,QAAQC,IAAI,gBAAgBlC,GAE5B+I,EAAMsX,YAAY,CAACC,MAAOtgB,EAAMwd,WACb+C,QAASvgB,EAAM2N,IACf6S,OAAQxgB,EAAMogB,aACjC3W,EAASoW,MAIjB,GAAG,CAAC/gB,IAyBJ,iCACI,eAAC,GAAa,CAAC+e,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gBAAChW,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,SAErC,gBAAC6B,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,gBAACiQ,GAAA,EAAUzL,KAAI,WAEX,8BAAI,WACJ,iCAEI,iCACI,kCAAQ,UAAc,IAAGpO,EAAgB7F,QAE7C,iCACI,kCAAQ,YAAgB,IAAG6F,EAAgB0P,WAE/C,iCACI,kCAAQ,WAAe,IAAC,wBAAO7G,KAAK,QAAO,SAAG7I,EAAgBiK,QAC9D,6BAAG,oEAEP,iCACI,kCAAQ,UAAc,IAAGjK,EAAgBwK,QAE7C,iCACI,kCAAQ,mBAAuB,IAAGxK,EAAgBsc,aAEtD,iCACI,kCAAQ,qBAAyB,IAAGtc,EAAgBqc,cAExD,iCACI,kCAAQ,qBAAyB,IAAGrc,EAAgB6e,iBAK/D,gBAAChF,GAAA,EAAUzL,KAAI,WAEZ,8BAAI,mBACJ,+BACI,kCAAQ,YAAgB,IAAC,eAAC,KAAS,CAAC+S,OAAQvkB,UAKnD,gBAACid,GAAA,EAAUzL,KAAI,WAEZ,8BAAI,oBAC0B,KAAxB,OAAJ7H,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAM7J,iBAAS,WAAX,EAAJ,EAAiBsP,QACb,iCACE,eAAC,GAAO,CAACpC,QAAS,OAAM,SAAC,0BACzB,eAACD,GAAA,EAAM,CAACmD,GAAG,IAEFjE,KAAK,SACLE,UAAU,YACVwP,KAAK,IAAG,SACP,2BAIV,eAACsB,GAAA,EAAS,CAACjQ,QAAQ,QAAO,SAEJ,QAFI,EAElBrD,EAAK7J,iBAAS,OAAwB,QAAxB,EAAd,EAAgBc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,WAAC,WAAxB,EAAd,EAAwC8Q,KAAK,SAAC/Q,EAAKikB,GAAK,OAChD,eAACvH,GAAA,EAAUzL,KAAI,UAEX,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACpC,eAAC7B,GAAA,EAAK,CAAChG,IAAKhT,EAAKkT,MAAOsJ,IAAKxc,EAAKhD,KAAMkc,OAAK,EAACC,SAAO,MAEzD,eAAC5N,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SAEpC,eAAC,QAAI,CAAClL,GAAE,oBAAe3P,EAAKD,IAAK,SAAEC,EAAKhD,SAE5C,gBAACuO,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,UACnC7a,EAAKC,IAAI,MAAID,EAAK2T,MAAMgK,QAAQ,GAAG,WAAS3d,EAAKC,IAAKD,EAAK2T,OAAOgK,QAAQ,GAAG,cAXrEsG,EAcJ,cAarD,eAAC1Y,GAAA,EAAG,CAACoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAG,SACjC,eAACjI,GAAA,EAAI,CAAC/B,OAAO,OAAM,SACf,gBAAC6L,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,eAACiQ,GAAA,EAAUzL,KAAI,UACX,8BAAI,eAER,eAACyL,GAAA,EAAUzL,KAAI,UACZ,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,sBACb,gBAACA,GAAA,EAAG,WAAEmY,EAAW,eAIxB,eAAChH,GAAA,EAAUzL,KAAI,UACZ,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,WACb,eAACA,GAAA,EAAG,UAAC,eAGZ,eAACmR,GAAA,EAAUzL,KAAI,UACZ,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,UAAC,kCAAQ,cACb,gBAACA,GAAA,EAAG,WAAEmY,EAAW,eAGvBtmB,GACG,eAACsf,GAAA,EAAUzL,KAAI,UACX,eAAC,GAAO,CAACxE,QAAQ,SAAQ,SACpBrP,MAIb,eAACsf,GAAA,EAAUzL,KAAI,UACX,eAACzE,GAAA,EAAM,CAEEd,KAAK,SACLE,UAAU,YACV0L,SAAsC,KAAxB,OAAJlO,QAAI,IAAJA,GAAe,QAAX,EAAJA,EAAM7J,iBAAS,WAAX,EAAJ,EAAiBsP,QAC3BI,QAtJlB,SAACuC,GAEhBA,EAAMpG,iBACN4B,EAASmW,GAAY,CACjBQ,WAAWva,EAAK7J,UAChBvC,KAAM6F,EAAgB7F,KACtB8P,MAAMjK,EAAgBiK,MACtBC,SAAUlK,EAAgBkK,SAC1BwF,QAAS1P,EAAgB0P,QACzBmR,WAAYA,EACZtO,MAAOvS,EAAgBwK,KACvB8R,UAAWtc,EAAgBsc,UAC3BD,WAAYrc,EAAgBqc,WAC5BwC,QAAS7e,EAAgB6e,QACzBliB,QAASA,EACTC,SAASA,EACTykB,OAAQnD,IAGhB,EAmIyD,SAAC,mCAQ9D,E,cCzNA,mmGAAAnU,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMuX,GAAkB,SAACpkB,GAC5B,gDAAO,WAAOiN,EAAUyO,GAAQ,8EAsB2B,OAtB3B,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAEhByE,QAAQC,IAAI,kCACNwH,EAAS,yCAAG,yFAS2C,OAPnDC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAI1Cza,QAAQC,IAAI,yBAAyB,eAAD,OAAgB1F,IAAK,SAClCqN,KAAMiC,IAAI,eAAD,OAAgBtP,GAAMmN,GAAO,OAC5B,OAD4B,SAArDI,EAAI,EAAJA,KACR9H,QAAQC,IAAI,gBAAgB6H,GAAK,kBAC1BA,GAAI,2CACd,kBAbc,4CAgBXN,EAAS9I,EAAoBH,uBAAsB,SAChCkJ,IAAW,OAAxBK,EAAI,OACV9H,QAAQC,IAAI,kBAAkB6H,GAC9BN,EAAS9I,EAAoBF,oBAAoBsJ,IAAM,kDAKvDN,EACI9I,EAAoBD,iBAClB,KAAMuJ,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAtCD,EAuCJ,E,wBC3CA,mmGAAAd,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMwX,GAAW,SAACrkB,EAAIskB,GACzB,gDAAO,WAAOrX,EAAUyO,GAAQ,8EAuBmB,OAvBnB,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGhByE,QAAQC,IAAI,kCACNwH,EAAS,yCAAG,yFAS2C,OAPnDC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAI1Cza,QAAQC,IAAI,yBAAyB,eAAD,OAAgB1F,IAAK,SAClCqN,KAAM+S,IAAI,eAAD,OAAgBpgB,EAAE,QAAQskB,EAAenX,GAAO,OAC/C,OAD+C,SAAxEI,EAAI,EAAJA,KACR9H,QAAQC,IAAI,gBAAgB6H,GAAK,kBAC1BA,GAAI,2CACd,kBAbc,4CAgBXN,EAASvI,EAAgBJ,mBAAkB,SACxB4I,IAAW,OAAxBK,EAAI,OACV9H,QAAQC,IAAI,kBAAkB6H,GAC9BN,EAASvI,EAAgBH,gBAAgBgJ,IAAM,kDAK/CN,EACIvI,EAAgBF,aACd,KAAMiJ,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDAvCD,EAwCJ,ECqIe4W,OAvKf,WAAwB,IAAD,UAEbR,EAAW9I,aAAU,MACrBhO,EAAYnC,cACZ0Z,EAAelW,aAAY,SAAA5Q,GAAK,OAAIA,EAAMkM,WAAW,IAClDpG,EAA0BghB,EAA1BhhB,MAAOnG,EAAmBmnB,EAAnBnnB,MAAOD,EAAYonB,EAAZpnB,QAEjByM,EAAWyE,aAAY,SAAA5Q,GAAK,OAAIA,EAAMmM,QAAQ,IACnC4a,EAAoC5a,EAA7CzM,QAA8BsnB,EAAe7a,EAAxBvH,QAE7B,EAAmCoI,mBAAS,GAAE,oBAA3Bia,GAAF,KAAc,MA4BjC,OA1BMvnB,GAAWC,GACXsnB,EAAanhB,EAAMogB,WAAWpV,QAAO,SAACwP,EAAI/d,GAAI,OAAK+d,EAAM/d,EAAK2T,MAAQ3T,EAAKC,GAAG,GAAE,GAAG0d,QAAQ,IAG/F5S,qBAAU,WAAO,IAAD,GAEoB,KAAxB,OAALxH,QAAK,IAALA,GAAiB,QAAZ,EAALA,EAAOogB,kBAAU,WAAZ,EAAL,EAAmB9U,SAAe4V,GAAclhB,EAAM2N,MAAQiM,OAAO2G,EAAQ/jB,MAC5EiN,EAASmX,GAAgBhH,OAAO2G,EAAQ/jB,KAGhD,GAAG,CAAE+jB,EAAQ5S,IAAKlE,IAiBlB7P,EAAW,eAAC,GAAM,IAEDC,EACT,eAAC,GAAO,CAACqP,QAAU,SAAQ,SACtBrP,IAGZ,iCAEE,6CAAemG,EAAM2N,OACpB,gBAAC5F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACC,GAAI,EAAE,SAEP,gBAACkR,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,gBAACiQ,GAAA,EAAUzL,KAAI,WAEX,qEACA,+BACI,6CAAuB,IAAa,QAAb,EAAG1N,EAAM1B,YAAI,aAAV,EAAY0P,aAE1C,+BACI,8CAAwB,IAAC,oBAAG6J,KAAI,iBAAsB,QAAtB,EAAY7X,EAAM1B,YAAI,aAAV,EAAYiL,OAAQ,SAAY,QAAZ,EAAEvJ,EAAM1B,YAAI,aAAV,EAAYiL,WAElF,wBAEEvJ,EAAMohB,YACJ,gBAAC,GAAO,CAAClY,QAAQ,UAAS,8BACDlJ,EAAMqhB,eAG/B,eAAC,GAAO,CAACnY,QAAQ,UAAS,gCAMjC,gBAACiQ,GAAA,EAAUzL,KAAI,WAEZ,iDACA,+BACI,8CAAwB,IAA2B,WAAxB1N,EAAML,cAA6B,oBAAsB,uBAGtFK,EAAMyd,OACJ,gBAAC,GAAO,CAACvU,QAAQ,UAAS,UAClB,iDAAwB,MAAIlJ,EAAM0d,UAG1C,eAAC,GAAO,CAACxU,QAAQ,UAAS,6BAMjC,gBAACiQ,GAAA,EAAUzL,KAAI,WAEZ,kDAC+B,KAAb,QAAhB,EAAA1N,EAAMogB,kBAAU,aAAhB,EAAkBkB,QACd,eAAC,GAAO,CAACpY,QAAS,OAAM,iCAEtB,eAACiQ,GAAA,EAAS,CAACjQ,QAAQ,QAAO,SAEF,QAFE,EAElBlJ,EAAMogB,kBAAU,aAAhB,EAAkB5S,KAAK,SAAC/Q,EAAKikB,GAAK,OAC1B,eAACvH,GAAA,EAAUzL,KAAI,UAEX,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,CAACC,GAAI,EAAE,SACP,eAACwN,GAAA,EAAK,CAAChG,IAAKhT,EAAKkT,MAAOsJ,IAAKxc,EAAKhD,KAAMkc,OAAK,EAACC,SAAO,MAEzD,eAAC5N,GAAA,EAAG,UAEA,eAAC,QAAI,CAACoE,GAAE,oBAAe3P,EAAKD,IAAK,SAAEC,EAAKhD,SAE5C,gBAACuO,GAAA,EAAG,CAACC,GAAI,EAAE,UACNxL,EAAKC,IAAG,OAAMD,EAAK2T,MAAK,QAAO3T,EAAKC,IAAKD,EAAK2T,OAAOgK,QAAQ,UAXrDsG,EAcJ,cAarD,eAAC1Y,GAAA,EAAG,CAACC,GAAI,EAAE,SACH,eAACoH,GAAA,EAAI,UACD,gBAAC8J,GAAA,EAAS,CAACjQ,QAAQ,QAAO,UACtB,eAACiQ,GAAA,EAAUzL,KAAI,UACX,sDAEJ,eAACyL,GAAA,EAAUzL,KAAI,UACZ,gBAAC3F,GAAA,EAAG,WACA,eAACC,GAAA,EAAG,2BACJ,gBAACA,GAAA,EAAG,kBAAMhI,EAAMwd,mBAIvB,eAACrE,GAAA,EAAUzL,KAAI,WACT1N,EAAMyd,QAAUwD,EACV,eAAC,GAAM,IAIP,eAAClZ,GAAA,EAAG,UACA,eAAC,KAAoB,CAACmJ,QAAS,CAAE,YAAa,oFAAqF,SAC/H,eAAC,KAAa,CACV/H,MAAO,CAAEoY,OAAQ,cACjBC,OAAQxhB,EAAMwd,WACdiE,UAhIlB,SAACX,GAE3BrX,EAASoX,GAASN,EAAQ5S,IAAKmT,GAEnC,sBAwIJ,E,cC/KA,mmGAAAzX,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMqY,GAAY,WACrB,gDAAO,WAAOjY,EAAUyO,GAAQ,8EAoBmB,OApBnB,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAMiC,IAAI,cAAenC,GAAO,OAA3C,OAA2C,SAA/CI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAASrH,GAAgBN,mBAAkB,SACxB4H,IAAW,OAAxBK,EAAI,OAEVN,EAASrH,GAAgBL,gBAAgBgI,IAAM,kDAK/CN,EACIrH,GAAgBJ,aACd,KAAMiI,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,E,cCxCA,mmGAAAd,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMsY,GAAa,SAACnlB,GACvB,gDAAO,WAAOiN,EAAUyO,GAAQ,4EAoBuB,OApBvB,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAM+X,OAAO,qBAAD,OAAsBplB,GAAMmN,GAAO,OAA1D,OAA0D,SAA9DI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAAS9G,GAAkBJ,qBAAoB,SAC5BmH,IAAW,OAApB,OAEVD,EAAS9G,GAAkBH,qBAAoB,kDAK/CiH,EACI9G,GAAkBF,eAChB,KAAMwH,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDApCD,EAqCJ,EAEa0X,GAAkB,WAC3B,gDAAO,WAAOpY,GAAQ,kEAElBA,EAAS9G,GAAkBkf,mBAAkB,2CAChD,mDAHD,EAIJ,EC6DeC,OA/Ff,WAEI,IAAMrY,EAAWnC,cACXf,EAAWuE,aAAY,SAAA5Q,GAAK,OAAIA,EAAMqM,QAAQ,IAC5C3M,EAAyB2M,EAAzB3M,QAASC,EAAgB0M,EAAhB1M,MAAOgI,EAAS0E,EAAT1E,MAGhBrE,EADUsN,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC9CtI,SAEFukB,EAAUjX,aAAY,SAAA5Q,GAAK,OAAIA,EAAMsM,UAAU,IAG/CoM,GAFyEmP,EAAvEjjB,QAAuEijB,EAA/CnoB,QAA+CmoB,EAAvBloB,MAEvCwN,gBAwBnB,OAtBEG,qBAAU,WAEHhK,GAAYA,EAAS2Q,SACpB1E,EAASiY,MACTjY,EAAS/K,OAETkU,EAAS,SAIjB,GAAG,CAACnJ,EAAUmJ,IAad,iCACI,wCACChZ,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAChBrP,IAIjB,gBAACsjB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAC5E,YAAU,EAAChV,UAAU,WAAU,UACrD,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAGR,iCACU,OAALxG,QAAK,IAALA,OAAK,EAALA,EAAO2L,KAAI,SAAAlP,GAAI,OAEZ,gCACI,8BAAKA,EAAKqP,MACV,8BAAKrP,EAAK7E,OACV,8BAAK6E,EAAKiL,QACV,8BAAKjL,EAAK6P,QACN,oBAAG9F,UAAU,eAAec,MAAO,CAAE4G,MAAO,WAC5C,oBAAG1H,UAAU,eAAec,MAAO,CAAE4G,MAAO,WAChD,8BAAI,eAAC,iBAAa,CAAC3D,GAAE,sBAAiB9N,EAAKqP,IAAG,SAAQ,SAE9C,eAAC1E,GAAA,EAAM,CAACC,QAAU,QAAQb,UAAU,MAAK,SACpC,oBAAGA,UAAU,sBAI1B,8BACI,eAACY,GAAA,EAAM,CAAEZ,UAAU,MAAMqD,QAAS,SAAC9D,GAAC,OArDrDpL,EAqDwE8B,EAAKqP,SAnD7F+J,OAAOwK,QAAQ,gDAEdzY,EAASkY,GAAWnlB,IACpBiN,EAASoY,MACTpY,EAASiY,QANK,IAACllB,CAqDiF,EAAC,SAC7D,oBAAG6L,UAAU,uBAhBhB/J,EAAKqP,IAmBT,WAUzC,E,cC1GA,mmGAAAtE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAM1C,GAAgB,SAACnK,GAC1B,gDAAO,WAAOiN,EAAUyO,GAAQ,8EAqB6B,OArB7B,EAKxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,uFAQb,MANc,CACXE,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAM+X,OAAO,wBAAD,OAAyBplB,IAAK,OAArD,OAAqD,SAAzDuN,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,4CAcXN,EAAS5F,GAAqBJ,wBAAuB,SAC9BiG,IAAW,OAA5BqC,EAAQ,OACdtC,EAAS5F,GAAqBH,qBAAqBqI,IAAU,kDAG7DtC,EACI5F,GAAqBF,kBACnB,KAAMsG,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAnCD,EAoCJ,EAEavG,GAAqB,WAC9B,gDAAO,WAAO6F,GAAQ,kEAElBA,EAAS5F,GAAqBD,sBAAqB,2CACtD,mDAHD,EAIJ,E,cC9CA,mmGAAAyF,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMzC,GAAgB,SAAC+P,EAAMjH,GAChC,gDAAO,WAAOjG,EAAUyO,GAAQ,sFAkD6B,OAlD7B,EAKxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAMC,KAAK,wBAAwB6M,EAAKhN,GAAO,OAA1D,OAA0D,SAA9DI,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAXc,mCAcToY,EAAU,yCAAG,WAAOC,EAAYlJ,GAAG,gFAgBhC,OAdCmJ,EAAQnJ,EACRoJ,EAAW,IAAIC,SAElB,QADGC,EAAMhJ,MAAMiJ,KAAKJ,UACpB,IAAHG,KAAKE,SAAQ,SAAAnmB,GAAC,OACV+lB,EAASK,OAAO,SAAUpmB,EAAE,IAGhC+lB,EAASK,OAAO,aAAcP,GAAW,SAG/BzY,EAAS,CACdC,QAAS,CACL,eAAgB,wBAEpB,SAEsBC,KAAMC,KAAK,wBAAyBwY,EAAU3Y,GAAO,gBAAhE,EAAJI,KAAI,4GAKnB,gBAvBe,iDA6BZN,EAASrF,GAAqBJ,wBAAuB,SAC3B0F,IAAW,OAGD,GAH9BkZ,EAAW,OACjBnZ,EAASrF,GAAqBH,qBAAqB2e,IAAa,EAG5D1K,IAAU,IADVtR,cAAgBxL,EAAO,EAAPA,SAAgB,EAAP0D,QAElB,CAAC,EAAF,+BACkBqjB,EAAW/mB,EAAQuS,IAAK+B,GAAO,QAAxC,eAEnBjG,EAASrF,GAAqBD,sBAAqB,kDAGnDsF,EACIrF,GAAqBF,kBACnB,KAAM+F,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAvED,EAwEJ,EC+Ee0Y,OA1If,WAEI,IAAMpZ,EAAWnC,cAEX1B,EAAckF,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0L,WAAW,IAClDhM,EAA6BgM,EAA7BhM,QAASC,EAAoB+L,EAApB/L,MAAOF,EAAaiM,EAAbjM,SAElBmpB,EAAahY,aAAY,SAAA5Q,GAAK,OAAIA,EAAMyM,aAAa,IAC1Coc,EAA6DD,EAAtElpB,QAA+BopB,EAAuCF,EAA9CjpB,MAA6BopB,EAAiBH,EAA1BhkB,QAE9CokB,EAAapY,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0M,aAAa,IAC1Cuc,EAAsFD,EAA/FtpB,QAA+BwpB,EAAgEF,EAAvErpB,MAA6BwpB,EAA0CH,EAAnDpkB,QAG5CtB,GAH+F0lB,EAA3B9nB,QAE1D0P,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC9CtI,UAEFoV,EAAWvL,eA2CnB,OAxCEG,qBAAU,WAEDhK,EAAS2Q,SACTyE,EAAS,UAGb8E,OAAOC,SAAS,CACbkB,IAAK,EACLC,KAAM,EACNC,SAAU,WAEVsK,GAOA5Z,EAAS8H,KAIhB,GAAG,CAAC9H,EAAUmJ,EAAUpV,EAAUylB,EAAeI,IAmBlD,iCACI,gBAACtb,GAAA,EAAG,CAACM,UAAU,qBAAoB,UAC/B,eAACL,GAAA,EAAG,UACA,2CAEJ,eAACA,GAAA,EAAG,CAACK,UAAU,aAAY,SACvB,eAAC,iBAAa,CAAC+D,GAAE,uBAAyB,SACtC,gBAACnD,GAAA,EAAM,CAACZ,UAAU,OAAM,UACpB,oBAAGA,UAAU,gBAAkB,8BAO7C0a,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAAC9Z,QAAQ,SAAQ,SAAE8Z,IAE1CG,GAAiB,eAAC,GAAM,IACxBC,GAAe,eAAC,GAAO,CAACla,QAAQ,SAAQ,SAAEka,IAC3CxpB,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAChBrP,IAIjB,gBAACsjB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAC5E,YAAU,EAAChV,UAAU,WAAU,UACrD,iCACI,gCACI,qCACA,uCACA,uCACA,6CACA,uCACA,yCACA,uCACA,8CAGR,iCACK1O,EAAS6T,KAAI,SAAApS,GAAO,OAEjB,gCACI,8BAAKA,EAAQuS,MACb,8BAAKvS,EAAQ3B,OACb,gCAAK2B,EAAQgV,MAAK,UAClB,8BAAKhV,EAAQqS,SAASD,KAAI,SAAAjR,GAAC,OAAIA,EAAE9C,IAAI,IAAE6f,KAAK,QAC5C,8BAAKle,EAAQ2U,QACb,qBAAI5G,MAAO,CAACma,WAAY,UAAU,SAAEloB,EAAQyU,eAC5C,8BAAI,eAAC,QAAI,CAACzD,GAAE,yBAAoBhR,EAAQuS,IAAG,SAAQ,SAE3C,eAAC1E,GAAA,EAAM,CAACC,QAAU,QAAQb,UAAU,SAAQ,SACvC,oBAAGA,UAAU,sBAG1B,8BACQ,eAACY,GAAA,EAAM,CAAEZ,UAAU,SAASqD,QAAS,SAAC9D,GAAC,OA9E5DpL,EA8E+EpB,EAAQuS,SA5EvG+J,OAAOwK,QAAQ,gDAEdzY,EAAS9C,GAAcnK,IACvBiN,EAAS7F,MACT6F,EAAS8H,QANK,IAAC/U,CA8E2F,EAAC,SAClE,oBAAG6L,UAAU,uBAfrBjN,EAAQuS,IAkBZ,WAUzC,EC7Ie4V,OAVf,WACE,OACI,iCACM,wCACA,iLAIZ,ECCeC,OATf,WACE,OACE,iCACE,yCACA,qFAGN,ECEeC,OATf,WACE,OACE,iCACE,0CACA,oFAGN,E,cCRA,mmGAAApa,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAIO,IAAMqa,GAAa,SAACplB,GACvB,gDAAO,WAAOmL,EAAUyO,GAAQ,4EAqBuB,OArBvB,EAIxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,yFAQb,OANKC,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAM+S,IAAI,qBAAD,OAAsBte,EAAKqP,IAAG,KAC9DrP,EAAMqL,GAAO,OADD,OACC,SADLI,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAZc,4CAeXN,EAAS9E,GAAkBJ,qBAAoB,SAC5BmF,IAAW,OAApB,OACVzH,QAAQC,IAAI,qCACZuH,EAAS9E,GAAkBH,qBAC3BiF,EAASiY,MAAY,kDAIrBjY,EACI9E,GAAkBF,eAChB,KAAMwF,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAEX,qDArCD,EAsCJ,EAGawZ,GAAkB,WAC3B,gDAAO,WAAOla,GAAQ,kEAIlB,IACIA,EAAS9E,GAAkBD,kBAW/B,CATE,MAAO7K,GAEL4P,EACI9E,GAAkBF,eAChB5K,EAAMoQ,UAAYpQ,EAAMoQ,SAASF,KAAKG,OACpCrQ,EAAMoQ,SAASF,KAAKG,OACpBrQ,EAAMsQ,SAGlB,CAAC,2CACJ,mDAjBD,EAkBJ,EC6DeyZ,OAlHf,WACE,MAAwB1c,mBAAS,IAAG,oBAA7BzN,EAAI,KAAEqiB,EAAO,KACpB,EAA0B5U,mBAAS,IAAG,oBAA/BqC,EAAK,KAAE0R,EAAQ,KACtB,EAA8B/T,oBAAS,GAAM,oBAAtCiH,EAAO,KAAE0V,EAAU,KAEpBpa,EAAWnC,cAEXsL,EAAWvL,eAET7K,EAAOib,eAAPjb,GACFsnB,EAAStnB,EACbyF,QAAQC,IAAI,SAAU4hB,GAExB,IAAM9d,EAAc8E,aAAY,SAAC5Q,GAAK,OAAKA,EAAM8L,WAAW,IACpD1H,EAAyB0H,EAAzB1H,KAAMzE,EAAmBmM,EAAnBnM,MAAOD,EAAYoM,EAAZpM,QAEfiN,EAAaiE,aAAY,SAAC5Q,GAAK,OAAKA,EAAM2M,UAAU,IAC3Ckd,EAAgEld,EAAvEhN,MAA6BmqB,EAA0Cnd,EAAnDjN,QAAkCqqB,EAAiBpd,EAA1B/H,QAwCrD,OAtCAmD,QAAQC,IAAI,kBAAmB5D,EAAKqP,KACpC1L,QAAQC,IAAI,oBAAqB5D,EAAK7E,MACtC+N,qBAAU,WAGDyc,GACCxa,EAASka,MACT/Q,EAAS,oBAILtU,EAAK7E,MAAQ6E,EAAKqP,MAAQiM,OAAOkK,IAIjC7hB,QAAQC,IAAI,0BACZ4Z,EAAQxd,EAAK7E,MACbwhB,EAAS3c,EAAKiL,OACdsa,EAAWvlB,EAAK6P,WANhBlM,QAAQC,IAAI,wBACZuH,EAAS+S,GAAehgB,IAYtC,GAAG,CAACiN,EAAUnL,EAAMwlB,EAAQG,EAAerR,IAczC,iCAEI,eAAC,QAAI,CAACxG,GAAG,kBAAiB,qBAG5B,gBAAC,GAAa,WACZ,4CACE4X,GAAiB,eAAC,GAAM,IACxBD,GAAe,eAAC,GAAO,CAAC7a,QAAS,SAAQ,SAAE6a,IAC3CnqB,EAAW,eAAC,GAAM,IACRC,EACC,eAAC,GAAO,CAACqP,QAAS,SAAQ,SAAErP,IAEjC,gBAAC6N,GAAA,EAAI,CAACC,SAzBE,SAACsG,GACrBA,EAAMpG,iBACN4B,EAASia,GAAW,CAChB/V,IAAKrP,EAAKqP,IACVlU,KAAMA,EACN8P,MAAOA,EACP4E,QAASA,IAGf,EAgB4C,UAC1B,gBAACzG,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UAC1B,eAAC3T,GAAA,EAAK4T,MAAK,kBACX,eAAC5T,GAAA,EAAKQ,QAAO,CACXC,KAAK,OACLuL,YAAY,iBACZlL,MAAO/O,EACP6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,OAI5C,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UAC3B,eAAC3T,GAAA,EAAK4T,MAAK,2BACX,eAAC5T,GAAA,EAAKQ,QAAO,CACXC,KAAK,QACLuL,YAAY,mBACZlL,MAAOe,EACPjB,SAAU,SAACV,GAAC,OAAKqT,EAASrT,EAAEW,OAAOC,MAAM,OAI7C,eAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,UAAS,SAC7B,eAAC3T,GAAA,EAAKgY,MAAK,CACTvX,KAAK,WACL0L,MAAM,UACN8L,QAASxR,EACT7F,SAAU,SAACV,GAAC,OAAKic,EAAWjc,EAAEW,OAAOoX,QAAQ,MAMjD,eAAC1W,GAAA,EAAM,CAACd,KAAK,SAASoT,SAAS,UAAS,4BAS5D,E,cC5HA,mmGAAAlS,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAGO,IAAMvC,GAAgB,SAAC1L,EAASsU,GACnC,gDAAO,WAAOjG,EAAUyO,GAAQ,gFA+C6B,OA/C7B,EAKxBA,IADY1a,EAAQ,EAApBsI,UAAYtI,SAGVkM,EAAS,yCAAG,uFAQb,MANc,CACXE,QAAQ,CACJ,eAAe,mBACf6S,cAAc,UAAD,OAAYjf,EAASkf,SAGzC,SACsB7S,KAAM+S,IAAI,wBAAD,OAAyBxhB,EAAQuS,IAAG,KACpEvS,GAAQ,OADI,OACJ,SADA2O,EAAI,EAAJA,KAAI,kBAELA,GAAI,2CACd,kBAZc,mCAcToY,EAAU,yCAAG,WAAOC,EAAY1S,GAAM,gFAgBnC,OAdC2S,EAAQ3S,EACR4S,EAAW,IAAIC,SAElB,QADGC,EAAMhJ,MAAMiJ,KAAKJ,UACpB,IAAHG,KAAKE,SAAQ,SAAAnmB,GAAC,OACV+lB,EAASK,OAAO,SAAUpmB,EAAE,IAGhC+lB,EAASK,OAAO,aAAcP,GAAW,SAG/BzY,EAAS,CACdC,QAAS,CACL,eAAgB,wBAEpB,SAEsBC,KAAMC,KAAK,wBAAyBwY,EAAU3Y,GAAO,gBAAhE,EAAJI,KAAI,4GAKnB,gBAvBe,iDA0BZN,EAASvE,GAAqBJ,wBAAuB,SAC9B4E,IAAW,OAC2B,OADvDqC,EAAQ,OACdtC,EAASvE,GAAqBH,qBAAqBgH,IAAU,UACrCoW,EAAW/mB,EAAQuS,IAAK+B,GAAO,QAAxC,OACfjG,EAAS+H,GAAepW,EAAQuS,MAAK,kDAGrClE,EACIvE,GAAqBF,kBACnB,KAAMiF,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDA/DD,EAgEJ,EASa+Z,GAAuB,SAAC1nB,GACjC,gDAAO,WAAOiN,GAAQ,0EAUuC,OAPnDC,EAAS,yCAAG,uGAESG,KAAMiC,IAAI,iBAAD,OAAkBtP,IAAK,OAA3C,OAA2C,SAA/CuN,EAAI,EAAJA,KAAI,kBACLA,GAAI,2CACd,kBAJc,4CAOXN,EAASvE,GAAqBJ,wBAAuB,SAC9B4E,IAAW,OAA5BqC,EAAQ,OACdtC,EAASvE,GAAqBH,qBAAqBgH,IAAU,gDAG7DtC,EACIvE,GAAqBF,kBACnB,KAAMiF,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,yDAGX,mDAxBD,EAyBJ,E,iBCxFAga,KAAMC,YA4cSC,OA1cf,WAA+B,IAAD,YAElB7nB,EAAOib,eAAPjb,GAGR,EAAwB0K,mBAAS,IAAG,oBAA7BzN,EAAI,KAAEqiB,EAAO,KACpB,EAA4B5U,mBAAS,IAAG,oBAAjCod,EAAM,KAAEC,EAAS,KACxB,EAA2Brd,mBAAS,IAAG,oBAAhCwI,EAAM,KAAE8U,EAAQ,KACvB,EAAsCtd,mBAAS,IAAG,oBAA3C4S,EAAW,KAAE2K,EAAc,KAClC,EAA0Bvd,mBAAS,GAAE,oBAA9BkJ,EAAK,KAAEsU,EAAQ,KACtB,EAAwCxd,mBAAS,GAAE,oBAA5C2I,EAAY,KAAE8U,EAAe,KACpC,EAA0Bzd,mBAAS,IAAG,oBAA/B6I,EAAK,KAAEiK,EAAQ,KACtB,EAAuC9S,mBAAS,IAAG,oBAA5CyM,EAAY,KAAEiR,EAAc,KACnC,EAA0B1d,mBAAS,IAAG,oBAA/B2K,EAAK,KAAEmK,EAAQ,KACtB,EAAoC9U,mBAAS,IAAG,oBAAzCwS,EAAO,KAAEmL,EAAgB,KAChC,EAAoC3d,mBAAS,IAAG,oBAAzCyS,EAAU,KAAEmL,EAAa,KAChC,EAA+C5d,mBAAS,IAAG,qBAApD6d,GAAgB,MAAEC,GAAkB,MAC3C,GAAuC9d,mBAAS,IAAG,sBAA5C+d,GAAY,MAAEC,GAAc,MACnC,GAAsChe,mBAAS,IAAG,sBAA3Cie,GAAW,MAAEC,GAAc,MAClC,GAA6Cle,mBAAS,IAAG,sBAAlDmS,GAAe,MAAEgM,GAAiB,MACzC,GAAwBne,mBAAS,IAAG,sBAA7ByK,GAAI,MAAE2T,GAAO,MACpB,GAA6Cpe,mBAAS,IAAG,sBAAlDqe,GAAe,MAAEC,GAAiB,MACzC,GAAwBte,mBAAS,IAAG,sBAA7BiB,GAAI,MAAEsd,GAAO,MACpB,GAAyCve,mBAAS,IAAG,sBAA9Cwe,GAAa,MAAEC,GAAe,MACrC,GAAgCze,mBAAS,IAAG,sBAArCuG,GAAQ,MAAEmY,GAAW,MAE5B,GAAkC1e,oBAAS,GAAM,sBAA1C2e,GAAS,MAEVpc,IAFwB,MAEbnC,eACXsL,GAAWvL,eAEXL,GAAe8D,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IAC1BpM,IAAqDoM,GAA/EpN,QAA+EoN,GAArDpM,YAAaC,GAAwCmM,GAAxCnM,cAEzCirB,IAFiF9e,GAAzBnN,MAE3CiR,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4M,aAAa,KACnDjN,GAAqCisB,GAArCjsB,MAAOD,GAA8BksB,GAA9BlsB,QAASkF,GAAqBgnB,GAArBhnB,QAAS1D,GAAY0qB,GAAZ1qB,QAGjCoM,qBAAU,WAIM,IAAD,GAFXiC,GAASya,GAAqB1nB,IAE3BsC,MAGCgd,EAAQ1gB,GAAQ3B,MAChB8qB,EAAUnpB,GAAQkpB,QAClBI,EAAStpB,GAAQgV,OACjBoU,EAASppB,GAAQsU,QACjBsK,EAAS5e,GAAQ2U,OACjBiM,EAAS5gB,GAAQme,mBACjBqL,EAAexpB,GAAQuY,cACvBiS,GAA4B,QAAjB,EAACxqB,GAAQqS,gBAAQ,aAAhB,EAAkBD,KAAI,SAAAjR,GAAC,OAAIA,EAAE9C,IAAI,KAC7CkrB,EAAgBvpB,GAAQyU,cACxB4U,EAAerpB,GAAQ0e,aACvBwL,GAAQlqB,GAAQuW,MAChB8T,GAAQrqB,GAAQ0Y,eAChB+Q,EAAiBzpB,GAAQse,SACzBoL,EAAc1pB,GAAQue,YACtBqL,GAAmB5pB,GAAQ2pB,kBAC3BG,GAAe9pB,GAAQ6pB,cACvBG,GAAehqB,GAAQ+pB,aACvBE,GAAkBjqB,GAAQie,iBAC1BmM,GAAkBpqB,GAAQmqB,iBAC1BI,GAAgBvqB,GAAQsqB,eAGhC,GAAG,CAACjc,GAAUmJ,GAAU9T,KAExB,IA4EMiL,GAAoB,OAAblP,SAAa,IAAbA,IAAsB,QAAT,EAAbA,GAAe6e,eAAO,WAAT,EAAb,EAAwBlM,KAAI,SAAAjR,GACrC,MAAO,CACHiM,MAAMjM,EACNsX,MAAMtX,EAEd,IAEMwpB,GAAkB,OAAVnrB,SAAU,IAAVA,QAAU,EAAVA,GAAY4S,KAAI,SAAAjR,GAC1B,MAAO,CACHiM,MAAMjM,EAAE9C,KACRoa,MAAMtX,EAAE9C,KAEhB,IAEA,OACI,iCACA,eAAC,QAAI,CAAC2S,GAAG,qBAAoB,SAAC,YAI9B,gBAAC,GAAa,WACV,8BAAI,kBACHxS,IAAW,eAAC,GAAM,IAClBC,IAAS,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAAErP,KAEpCD,GAAU,eAAC,GAAM,IAAMC,GAAQ,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAAErP,KAEnD,gBAAC6N,GAAA,EAAI,CAACC,SAlGA,SAACC,GACnBA,EAAEC,iBACF4B,GAAS3C,GAAc,CACnB6G,IAAInR,EACJ/C,OACA4f,mBACAiL,SACA5K,UACAC,aACAoL,oBACAE,gBACAE,eACAO,iBACAH,mBACAnV,QACAP,eACAiK,cACA/J,QACA4D,eACA9B,QACA1J,QACAwJ,QACAlE,aACFiC,IACFgI,OAAOC,SAAS,CACZkB,IAAK,EACLC,KAAM,EACNC,SAAU,WA9BdoL,KAAMrlB,QAAQ,4BACX,CAACmW,SAAUkP,KAAM6B,SAASC,UAAWC,UAAU,KAgCtD,EAoE8C,UAEtB,gBAACxe,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,GACZyS,aAAc1sB,EACd6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,OAKhD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,SAAQ,UAC1B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAc7B,EACdhc,SAAU,SAACV,GAAC,OAAK2c,EAAU3c,EAAEW,OAAOC,MAAM,OAKlD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aAUpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTke,UAAU,aACVje,KAAK,OACLke,SAAS,WACT/d,SAAU,SAACV,GAAC,OAAM4c,EAAS5c,EAAEW,OAAO8Z,MAAM,IAI7CwD,IAAa,eAAC,GAAM,OAIzB,gBAACne,GAAA,EAAK0T,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcrM,EACdxR,SAAU,SAACV,GAAC,OAAK6c,EAAe7c,EAAEW,OAAOC,MAAM,OAKvD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,SACLuL,YAAY,GACZyS,aAAc/V,EACd9H,SAAU,SAACV,GAAC,OAAK8c,EAAS9c,EAAEW,OAAOC,MAAM,OAKjD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,SACLuL,YAAY,GACZyS,aAActW,EACdvH,SAAU,SAACV,GAAC,OAAK+c,EAAgB/c,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAEAC,KAAK,OACLuL,YAAY,GACZyS,aAAcpW,EACdzH,SAAU,SAACV,GAAC,OAAKoS,EAASpS,EAAEW,OAAOC,MAAM,OAM1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,mBACpB,eAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXH,aAAcxS,EACdrL,SAAU,SAACV,GAAC,OAAKgd,EAAehd,EAAEW,OAAOC,MAAM,EAAC,SAE3C,OAAb3N,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAe8Y,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAgJ,GAAG,OACjC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,SAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,eAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXH,aAAche,GACdG,SAAU,SAACV,GAAC,OAAK6d,GAAQ7d,EAAEW,OAAOC,MAAM,EAAC,SAEpC,OAAb3N,SAAa,IAAbA,IAA4B,QAAf,EAAbA,GAAeiZ,qBAAa,WAAf,EAAb,EAA8BtG,KAAI,SAAAgJ,GAAG,OAClC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,SAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,qBACpB,eAAC,KAAM,CAAC,aAAW,yBACNvK,SAAO,EAEPF,aAAW,EACXxI,UAAU,WACVqL,YAAY,gBACZpC,mBAAmB,EACnBiV,cAAe,EACfC,iBAAiB,EACjBhe,MAAW,OAAJuB,SAAI,IAAJA,QAAI,EAAJA,GAAMjN,QAAO,SAAAG,GAAG,OAAW,OAAPyc,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,SAAS/a,EAAIuL,MAAM,IACvD0I,QAASnH,GACTzB,SA9KpB,SAACV,GAElBid,EAAiBrL,MAAMC,QAAQ7R,GAAKA,EAAE4F,KAAI,SAAAjR,GAAC,OAAIA,EAAEiM,KAAK,IAAI,GAC9D,OAsLwB,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXH,aAAcxM,EACdrR,SAAU,SAACV,GAAC,OAAKkd,EAAcld,EAAEW,OAAOC,MAAM,EAAC,UACxD,kCAAQ,kBACM,OAAb3N,SAAa,IAAbA,IAAyB,QAAZ,EAAbA,GAAe8e,kBAAU,WAAZ,EAAb,EAA2BnM,KAAI,SAAAgJ,GAAG,OAC/B,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,mBAAkB,UACpC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXH,aAAcpB,GACdzc,SAAU,SAACV,GAAC,OAAKod,GAAmBpd,EAAEW,OAAOC,MAAM,EAAC,UAC7D,kCAAQ,yBACM,OAAb3N,SAAa,IAAbA,IAA+B,QAAlB,EAAbA,GAAekqB,wBAAgB,WAAlB,EAAb,EAAiCvX,KAAI,SAAAgJ,GAAG,OACrC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,mBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXH,aAAclB,GACd3c,SAAU,SAACV,GAAC,OAAKsd,GAAetd,EAAEW,OAAOC,MAAM,EAAC,UACzD,kCAAQ,oBACM,OAAb3N,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAeoqB,oBAAY,WAAd,EAAb,EAA6BzX,KAAI,SAAAgJ,GAAG,OACjC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAchB,GACd7c,SAAU,SAACV,GAAC,OAAKwd,GAAexd,EAAEW,OAAOC,MAAM,OAKvD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,sBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAc9M,GACd/Q,SAAU,SAACV,GAAC,OAAKyd,GAAkBzd,EAAEW,OAAOC,MAAM,OAK1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,cACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcxU,GACdrJ,SAAU,SAACV,GAAC,OAAK0d,GAAQ1d,EAAEW,OAAOC,MAAM,OAKhD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,gBAAe,UACjC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,cACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcT,GACdpd,SAAU,SAACV,GAAC,OAAK+d,GAAgB/d,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,gBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcZ,GACdjd,SAAU,SAACV,GAAC,OAAK4d,GAAkB5d,EAAEW,OAAOC,MAAM,OAQ1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,eAAC,KAAM,CAAC,aAAW,yBACNvK,SAAO,EACPwL,UAAQ,EACR1L,aAAW,EACXxI,UAAU,WACVqL,YAAY,gBACZlL,MAAY,OAALud,SAAK,IAALA,QAAK,EAALA,GAAOjpB,QAAO,SAAAG,GAAG,OAAY,OAARwQ,SAAQ,IAARA,QAAQ,EAARA,GAAUuK,SAAS/a,EAAIuL,MAAM,IACzD8I,mBAAmB,EACnBiV,cAAe,EACfC,iBAAiB,EACjBtV,QAAS6U,GACTzd,SAvSnB,SAACV,GAEnBge,GAAYpM,MAAMC,QAAQ7R,GAAKA,EAAE4F,KAAI,SAAAjR,GAAC,OAAIA,EAAEiM,KAAK,IAAI,GACzD,OA8SwB,eAACS,GAAA,EAAM,CAACd,KAAK,SAASe,QAAQ,UAAS,SAAC,0BAWpE,EClceud,OAxBf,SAAuB,GAAU,IAAT/W,EAAM,EAANA,OAEdgX,EAAmB,SAAC9e,GACtB3F,QAAQC,IAAI,QAAS0F,EACzB,EAEA,OACI,sBAAKS,UAAU,MAAK,SAEpBqH,EAAOlC,KAAI,SAACmZ,GACR,OACI,sBAAKte,UAAU,WAAU,SACzB,sBAAKA,UAAU,OAAM,SACrB,sBAAKoH,IAAKkX,EAAK1N,IAAI,UAAUvN,QAASgb,OAI9C,KAKR,ECHAvC,KAAMC,YAgdSwC,OA7cf,WAAiC,IAAD,YAE5B,EAAwB1f,mBAAS,IAAG,oBAA7BzN,EAAI,KAAEqiB,EAAO,KACpB,EAA4B5U,mBAAS,IAAG,oBAAjCod,EAAM,KAAEC,EAAS,KACxB,EAA2Brd,mBAAS,IAAG,oBAAhCwI,EAAM,KAAE8U,EAAQ,KACvB,EAAoCtd,mBAAS,IAAG,oBAAzC2f,EAAU,KAAEC,EAAa,KAChC,EAAsC5f,mBAAS,IAAG,oBAA3C4S,EAAW,KAAE2K,EAAc,KAClC,EAA0Bvd,mBAAS,GAAE,oBAA9BkJ,EAAK,KAAEsU,EAAQ,KACtB,EAAwCxd,mBAAS,GAAE,oBAA5C2I,EAAY,KAAE8U,EAAe,KACpC,EAA0Bzd,mBAAS,IAAG,oBAA/B6I,EAAK,KAAEiK,EAAQ,KACtB,EAAuC9S,mBAAS,IAAG,oBAA5CyM,EAAY,KAAEiR,EAAc,KACnC,EAA0B1d,mBAAS,IAAG,oBAA/B2K,EAAK,KACZ,GADsB,KACc3K,mBAAS,KAAG,oBAAzCwS,EAAO,KAAEmL,EAAgB,KAChC,EAAoC3d,mBAAS,IAAG,oBAAzCyS,EAAU,KAAEmL,GAAa,KAChC,GAA+C5d,mBAAS,IAAG,sBAApD6d,GAAgB,MAAEC,GAAkB,MAC3C,GAAuC9d,mBAAS,IAAG,sBAA5C+d,GAAY,MAAEC,GAAc,MACnC,GAAsChe,mBAAS,IAAG,sBAA3Cie,GAAW,MAAEC,GAAc,MAClC,GAA6Cle,mBAAS,IAAG,sBAAlDmS,GAAe,MAAEgM,GAAiB,MACzC,GAAwBne,mBAAS,IAAG,sBAA7ByK,GAAI,MAAE2T,GAAO,MACpB,GAA6Cpe,mBAAS,IAAG,sBAAlDqe,GAAe,MAAEC,GAAiB,MACzC,GAAwBte,mBAAS,IAAG,sBAA7BiB,GAAI,MAAEsd,GAAO,MACpB,GAAyCve,mBAAS,IAAG,sBAA9Cwe,GAAa,MAAEC,GAAe,MACrC,GAAgCze,mBAAS,iBAAW,sBAA7CuG,GAAQ,MAAEmY,GAAW,MAE5B,GAAkC1e,oBAAS,GAAM,sBAA1C2e,GAAS,MAEVpc,IAFwB,MAEbnC,eACXsL,GAAWvL,eAEXL,GAAe8D,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IAC3C0P,GAAsE1P,GAA/EpN,QAA0BgB,GAAqDoM,GAArDpM,WAAaC,GAAwCmM,GAAxCnM,cAAsB4b,GAAkBzP,GAAzBnN,MAGxDktB,GAAY3T,mBACZ4T,GAAY5T,mBAsBlB5L,qBAAU,WAENiC,GAASoC,KAEb,GAAG,CAACpC,GAAUmJ,KAEd,IA2BMqU,GAAS,WAEX9C,KAAMrlB,QAAQ,2BACX,CAACmW,SAAUkP,KAAM6B,SAASC,UAAWC,UAAU,KACtD,EA6CMnc,GAAoB,OAAblP,SAAa,IAAbA,IAAsB,QAAT,EAAbA,GAAe6e,eAAO,WAAT,EAAb,EAAwBlM,KAAI,SAAAjR,GACrC,MAAO,CACHiM,MAAMjM,EACNsX,MAAMtX,EAEd,IAEMwpB,GAAkB,OAAVnrB,SAAU,IAAVA,QAAU,EAAVA,GAAY4S,KAAI,SAAAjR,GAC1B,MAAO,CACHiM,MAAMjM,EAAE9C,KACRoa,MAAMtX,EAAE9C,KAEhB,IAEA,OACI,iCACI,eAAC,QAAI,CAAC2S,GAAG,qBAAoB,SAAC,YAI9B,gBAAC,GAAa,WACV,8BAAI,qBACHsK,IAAmB,eAAC,GAAM,IAC1BD,IAAiB,eAAC,GAAO,CAACvN,QAAQ,SAAQ,SAAEuN,KAE5CC,GAAkB,eAAC,GAAM,IAAMD,GAAgB,eAAC,GAAO,CAACvN,QAAQ,SAAQ,SAAEuN,KAEnE,gBAAC/O,GAAA,EAAI,CAACC,SAvGJ,SAACC,GACnBA,EAAEC,iBACF4B,GAAS7C,GAAc,CACnBnN,OACA4f,mBACAiL,SACA5K,UACAC,aACAoL,oBACAE,gBACAE,eACAO,iBACAH,mBACAnV,QACAP,eACAiK,cACA/J,QACA4D,eACA9B,QACA1J,QACAwJ,QACAlE,aACDiC,IACHkD,GAAS,sBACTqU,IACJ,EA8EkD,UAE1B,gBAACvf,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,OACLuL,YAAY,GACZyS,aAAc1sB,EACd6O,SAAU,SAACV,GAAC,OAAKkU,EAAQlU,EAAEW,OAAOC,MAAM,EACxC0e,WAAY,SAACtf,GAAC,OA/H9C,SAAoBA,GAEH,UAAVA,EAAE+G,KAEDqY,GAAU3T,QAAQ8T,OAE1B,CAyHmDC,CAAWxf,EAAE,EAChC8N,IAAKqR,QAKb,gBAACrf,GAAA,EAAK0T,MAAK,CAACC,UAAU,SAAQ,UAC1B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAc7B,EACdhc,SAAU,SAACV,GAAC,OAAK2c,EAAU3c,EAAEW,OAAOC,MAAM,EAC1CkN,IAAKsR,QAKb,gBAACtf,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aAUpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTke,UAAU,aACVje,KAAK,OACLke,SAAS,WAET/d,SA9KJ,SAAC+e,GACzBplB,QAAQC,IAAI,YAAamlB,GACzB,IAAMC,EAAe,GACfC,EAAaF,EAAK9e,OAAO8Z,MACP,aAAKkF,GACX/Z,KAAI,SAACga,GACpB,OAAOF,EAAc3qB,KAAK8qB,IAAIC,gBAAgBF,GACjD,IACAV,EAAcQ,GACd9C,EAAS6C,EAAK9e,OAAO8Z,MACvB,EAqK8BlZ,MAAO,CAAE8G,aAAa,WAK1B,eAAC,GAAa,CAAEP,OAAQmX,IAEvBhB,IAAa,eAAC,GAAM,OAIzB,gBAACne,GAAA,EAAK0T,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTiI,GAAG,WAAWwX,KAAM,EACpBxf,KAAK,WACLuL,YAAY,GACZyS,aAAcrM,EACdxR,SAAU,SAACV,GAAC,OAAK6c,EAAe7c,EAAEW,OAAOC,MAAM,OAKvD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,SACLuL,YAAY,GACZyS,aAAa,GACb7d,SAAU,SAACV,GAAC,OAAK8c,EAAS9c,EAAEW,OAAOC,MAAM,OAKjD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,aACpB,eAAC5T,GAAA,EAAKQ,QAAO,CACTqU,UAAQ,EACRpU,KAAK,SACLuL,YAAY,GACZyS,aAAa,GACb7d,SAAU,SAACV,GAAC,OAAK+c,EAAgB/c,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,QAAO,UACzB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,WACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAEAC,KAAK,OACLuL,YAAY,GACZyS,aAAa,GACb7d,SAAU,SAACV,GAAC,OAAKoS,EAASpS,EAAEW,OAAOC,MAAM,OAM1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,mBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXhe,SAAU,SAACV,GAAC,OAAKgd,EAAehd,EAAEW,OAAOC,MAAM,EAAC,UACzD,4BACc,OAAb3N,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAe8Y,oBAAY,WAAd,EAAb,EAA6BnG,KAAI,SAAAgJ,GAAG,OACjC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXhe,SAAU,SAACV,GAAC,OAAK6d,GAAQ7d,EAAEW,OAAOC,MAAM,EAAC,UAClD,4BACc,OAAb3N,SAAa,IAAbA,IAA4B,QAAf,EAAbA,GAAeiZ,qBAAa,WAAf,EAAb,EAA8BtG,KAAI,SAAAgJ,GAAG,OAClC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAkB9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,iBAAgB,UAClC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,qBACpB,eAAC,KAAM,CAAC,aAAW,yBACNvK,SAAO,EAEPF,aAAW,EACXxI,UAAU,WACVqL,YAAY,gBACZlL,MAAW,OAAJuB,SAAI,IAAJA,QAAI,EAAJA,GAAMjN,QAAO,SAAAG,GAAG,OAAW,OAAPyc,QAAO,IAAPA,OAAO,EAAPA,EAAS1B,SAAS/a,EAAIuL,MAAM,IACvD8I,mBAAmB,EACnBJ,QAASnH,GACTzB,SA9LpB,SAACV,GAElBid,EAAiBrL,MAAMC,QAAQ7R,GAAKA,EAAE4F,KAAI,SAAAjR,GAAC,OAAIA,EAAEiM,KAAK,IAAI,GAC9D,OAqMwB,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,aAAY,UAC9B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXhe,SAAU,SAACV,GAAC,OAAKkd,GAAcld,EAAEW,OAAOC,MAAM,EAAC,UACxD,4BACc,OAAb3N,SAAa,IAAbA,IAAyB,QAAZ,EAAbA,GAAe8e,kBAAU,WAAZ,EAAb,EAA2BnM,KAAI,SAAAgJ,GAAG,OAC/B,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,mBAAkB,UACpC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXhe,SAAU,SAACV,GAAC,OAAKod,GAAmBpd,EAAEW,OAAOC,MAAM,EAAC,UAC7D,4BACc,OAAb3N,SAAa,IAAbA,IAA+B,QAAlB,EAAbA,GAAekqB,wBAAgB,WAAlB,EAAb,EAAiCvX,KAAI,SAAAgJ,GAAG,OACrC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,eAAc,UAChC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,mBACpB,gBAAC5T,GAAA,EAAK4e,OAAM,CAAC,aAAW,yBACXhe,SAAU,SAACV,GAAC,OAAKsd,GAAetd,EAAEW,OAAOC,MAAM,EAAC,UACzD,4BACc,OAAb3N,SAAa,IAAbA,IAA2B,QAAd,EAAbA,GAAeoqB,oBAAY,WAAd,EAAb,EAA6BzX,KAAI,SAAAgJ,GAAG,OACjC,yBAAQhO,MAAOgO,EAAI,SAAEA,GAAa,UAM9C,gBAAC9O,GAAA,EAAK0T,MAAK,CAACC,UAAU,cAAa,UAC/B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,kBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAchB,GACd7c,SAAU,SAACV,GAAC,OAAKwd,GAAexd,EAAEW,OAAOC,MAAM,OAKvD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,sBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAc9M,GACd/Q,SAAU,SAACV,GAAC,OAAKyd,GAAkBzd,EAAEW,OAAOC,MAAM,OAK1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,OAAM,UACxB,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,cACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcxU,GACdrJ,SAAU,SAACV,GAAC,OAAK0d,GAAQ1d,EAAEW,OAAOC,MAAM,OAKhD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,gBAAe,UACjC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,cACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcT,GACdpd,SAAU,SAACV,GAAC,OAAK+d,GAAgB/d,EAAEW,OAAOC,MAAM,OAKxD,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,kBAAiB,UACnC,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,gBACpB,eAAC5T,GAAA,EAAKQ,QAAO,CAETC,KAAK,OACLuL,YAAY,GACZyS,aAAcZ,GACdjd,SAAU,SAACV,GAAC,OAAK4d,GAAkB5d,EAAEW,OAAOC,MAAM,OAQ1D,gBAACd,GAAA,EAAK0T,MAAK,CAACC,UAAU,YAAW,UAC7B,eAAC3T,GAAA,EAAK4T,MAAK,UAAC,kCAAQ,iBACpB,eAAC,KAAM,CAAC,aAAW,yBACNvK,SAAO,EACPwL,UAAQ,EACR1L,aAAW,EACXxI,UAAU,WACVqL,YAAY,gBACZlL,MAAY,OAALud,SAAK,IAALA,QAAK,EAALA,GAAOjpB,QAAO,SAAAG,GAAG,OAAY,OAARwQ,SAAQ,IAARA,QAAQ,EAARA,GAAUuK,SAAS/a,EAAIuL,MAAM,IACzD8I,mBAAmB,EACnBJ,QAAS6U,GACTzd,SAjTnB,SAACV,GAEnBge,GAAYpM,MAAMC,QAAQ7R,GAAKA,EAAE4F,KAAI,SAAAjR,GAAC,OAAIA,EAAEiM,KAAK,IAAI,GACzD,OAwTwB,eAACS,GAAA,EAAM,CAACd,KAAK,SAASe,QAAQ,UAAS,SAAC,2BAWpE,E,cCheA,mmGAAAG,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAEO,IAAMue,GAAa,WACtB,gDAAO,WAAOne,EAAUyO,GAAQ,8EAoBqB,OApBrB,EAEIA,IAAb1a,EAAQ,EAApBsI,UAAYtI,SAEbkM,EAAS,yCAAG,yFAOb,OALKC,EAAS,CACXC,QAAQ,CACJ,eAAe,oBACf6S,cAAc,UAAD,OAAWjf,EAASkf,SAExC,SAGsB7S,KAAMiC,IAAI,eAAgBnC,GAAO,OACvC,OADuC,SAAhDI,EAAI,EAAJA,KACR9H,QAAQC,IAAI6H,GAAK,kBACVA,GAAI,2CACd,kBAbc,4CAgBXN,EAASjE,GAAiBH,oBAAmB,SACtBqE,IAAW,OAA5BqC,EAAQ,OACdtC,EAASjE,GAAiBF,iBAAiByG,IAAU,kDAGrDtC,EACIjE,GAAiBD,cACf,KAAM0E,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAEV,0DAGX,qDAlCD,EAmCJ,ECyEe0d,OAlGf,WAEI,IAAMpe,EAAWnC,cACXwgB,EAAWhd,aAAY,SAAA5Q,GAAK,OAAIA,EAAM6M,SAAS,IAC7CnN,EAA0BkuB,EAA1BluB,QAASC,EAAiBiuB,EAAjBjuB,MAAOwH,EAAUymB,EAAVzmB,OAGhB7D,EADUsN,aAAY,SAAA5Q,GAAK,OAAIA,EAAM4L,SAAS,IAC9CtI,SAEFoV,EAAWvL,eAgBnB,OAdEG,qBAAU,WAEHhK,GAAYA,EAAS2Q,QACpB1E,EAASme,MAGThV,EAAS,SAIjB,GAAG,CAACnJ,EAAUmJ,EAAUpV,IAKxB,iCACI,yCACC5D,EAEW,eAAC,GAAM,IAITC,EACU,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAChBrP,IAIjB,gBAACsjB,GAAA,EAAK,CAACC,SAAO,EAAC4E,UAAQ,EAACC,OAAK,EAAC5E,YAAU,EAAChV,UAAU,WAAU,UACrD,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,iCACW,OAANhH,QAAM,IAANA,OAAM,EAANA,EAAQmM,KAAI,SAAAxN,GAAK,eAEd,gCACI,8BAAKA,EAAM2N,MACX,8BAAK3N,EAAM1B,MAAQ0B,EAAM1B,KAAK7E,OAC9B,8BAAoB,QAApB,EAAKuG,EAAMsd,iBAAS,aAAf,EAAiBC,UAAU,EAAE,MAClC,sCAAQvd,EAAMwd,cACd,8BAAKxd,EAAMyd,OACPzd,EAAMyd,OAGN,oBAAGpV,UAAU,eAAec,MAAO,CAAE4G,MAAO,WAKhD,8BAAK/P,EAAMohB,YACS,QADE,EAClBphB,EAAM+nB,kBAAU,aAAhB,EAAkBxK,UAAU,EAAE,IAG9B,oBAAGlV,UAAU,eAAec,MAAO,CAAE4G,MAAO,WAKhD,8BAAI,eAAC,iBAAa,CAAC3D,GAAE,iBAAYpM,EAAM2N,IAAG,KAAI,SAEtC,eAAC1E,GAAA,EAAM,CAACC,QAAU,QAAQb,UAAU,MAAK,2BAzB5CrI,EAAM2N,IA+BV,WAUzC,ECtCeqa,OAvDf,WAEE,IAAMve,EAAWnC,cACXqP,EAAO7L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM0L,WAAW,IAC3C/L,EAA6B8c,EAA7B9c,MAAOD,EAAsB+c,EAAtB/c,QAASD,EAAagd,EAAbhd,SAClB6c,EAAM1L,aAAY,SAAA5Q,GAAK,OAAIA,EAAM8M,YAAY,IAEnD,GAD0EwP,EAAlE3c,MAAkE2c,EAAjD5c,QAAiD4c,EAA5B5b,WAClBkc,8BAAiB,oBAGvCtI,GAHO,KAAW,KACTiJ,eAAPjb,GAES+K,gBAYjB,OAVEC,qBAAU,WAENiC,EAASgI,GAAmBjD,EAAStU,OAEzC,GAAG,CAACuP,EAAU+E,EAAStU,QAOvB,kCACM,EAEF,wDACEN,EAAU,eAAC,GAAM,IACRC,EAAQ,eAAC,GAAO,CAACqP,QAAQ,SAAQ,SAAErP,IAErC,+BACG,eAACiO,GAAA,EAAS,CAAC6N,OAAK,WAChB,gBAAC5N,GAAA,EAAG,WACF,eAACC,GAAA,EAAG,CAACoP,GAAI,EAAGnP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,EAAE,SACrC,eAACvP,GAAA,EAAG,UACO,OAARpO,QAAQ,IAARA,OAAQ,EAARA,EAAU6T,KAAI,SAAApS,GAAO,OACtB,eAAC4M,GAAA,EAAG,CAAmBoP,GAAI,GAAInP,GAAI,EAAGoP,GAAI,EAAG9D,GAAI,EAAG+D,GAAI,GAAIjP,UAAU,SAAQ,SAC1E,eAAC,GAAO,CAACjN,QAASA,KADZA,EAAQuS,IAEZ,QAKV,eAAC3F,GAAA,EAAG,UACA,eAAC,GAAM,CAACiK,SA1BP,SAACzJ,GAErB,eAiCP,E,8DClEMyf,GAAW,SAAAlf,GAEb,OAAO,sBAAKV,UAAW8C,KAAQ+c,SAAUxc,QAAS3C,EAAMof,SAC5D,EACMC,GAAe,SAAArf,GACjB,OAAO,sBAAKV,UAAW8C,KAAQkd,MAAM,SACjC,sBAAKhgB,UAAW8C,KAAQmd,QAAQ,SAAEvf,EAAMsL,YAEhD,EAEMkU,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAAC3f,GAEX,OAAO,gBAAC,WAAQ,WACX4f,KAASC,aAAa,eAAC,GAAQ,CAACT,QAASpf,EAAMof,UAAqBI,IACpEI,KAASC,aAAa,eAAC,GAAY,UAAE7f,EAAMsL,WAA0BkU,MAI9E,E,qBCDeM,GArBE,SAAC9f,GAChB,IAAMqH,EAAK,cAAUrH,EAAMqH,OAE3B,OACE,sBAAI/H,UAAW8C,KAAQ,aAAa,UAClC,iCACE,8BAAKpC,EAAMtP,OACX,uBAAK4O,UAAW8C,KAAQ2d,QAAQ,UAC9B,uBAAMzgB,UAAW8C,KAAQiF,MAAM,SAAEA,IACjC,wBAAM/H,UAAW8C,KAAQqW,OAAO,UAAC,KAAGzY,EAAMrM,aAG9C,uBAAK2L,UAAW8C,KAAQ3Q,QAAQ,UAC9B,yBAAQkR,QAAS3C,EAAMggB,SAAUhV,SAAwB,IAAdhL,EAAMrM,IAAU,SAAC,WAC5D,yBAAQgP,QAAS3C,EAAMigB,MAAM,SAAC,MAC9B,yBAAQtd,QAAS3C,EAAMsB,WAAW,SAAC,WAI3C,ECmDe4e,GAjEF,SAAClgB,GAEV,IAAMlD,EAAOiF,aAAY,SAAC5Q,GAAK,OAAKA,EAAM2L,IAAI,IACxC+M,EAAWvL,eAETrL,EAAc6J,EAAd7J,UAEFyN,EAAWnC,cAEX4hB,EAAuB,OAATltB,QAAS,IAATA,OAAS,EAATA,EAAWgP,QAAO,SAACme,EAAO1sB,GAEtC,OAAO0sB,EAAQ1sB,EAAKC,IAAMD,EAAK2T,KACnC,GAAG,GAEDgZ,GAAoB,OAATptB,QAAS,IAATA,OAAS,EAATA,EAAWsP,QAAQ,EAE9B+d,EAAuB,SAAA7sB,GAEzBiN,EzCiCkB,SAACjN,GACvB,OAAQ,SAACiN,EAAUyO,GAEXzO,EAASrM,EAAYF,oBAAoBV,IAEzCb,aAAa8L,QAAQ,YAAa5L,KAAKmO,UAAUkO,IAAWrS,KAAK7J,WAEzE,CACJ,CyCzCiBqO,CAAW7N,GACxB,EAEM8sB,EAAqB,SAAA9sB,GAEvBiN,EzCsCe,SAACjN,GACpB,OAAQ,SAACiN,EAAUyO,GAEXzO,EAASrM,EAAYD,iBAAiBX,IAEtCb,aAAa8L,QAAQ,YAAa5L,KAAKmO,UAAUkO,IAAWrS,KAAK7J,WAEzE,CACJ,CyC9CiButB,CAAQ/sB,GACrB,EAUMgtB,EACN,qBAAInhB,UAAW8C,KAAQ,cAAc,SACvB,OAATnP,QAAS,IAATA,OAAS,EAATA,EAAWc,QAAO,SAAAP,GAAC,OAAIA,EAAEG,IAAM,CAAC,IAAE8Q,KAAI,SAAAxN,GAAK,OACvC,eAAC,GAAQ,CACCvG,KAAMuG,EAAMvG,KACZiD,IAAKsD,EAAMtD,IACX0T,MAAOpQ,EAAMoQ,MAAMgK,QAAQ,GAC3B2O,SAAU,kBAAMM,EAAsBrpB,EAAMxD,GAAG,EAC/CwsB,MAAO,kBAAMM,EAAmBtpB,EAAMxD,GAAG,EACzC6N,WAAY,kBAjBJ7N,EAiB6BwD,EAAMxD,QAhB1DiN,EAAS0O,GAAe3b,IADD,IAAAA,CAiBsC,GANzCwD,EAAMxD,GAQX,MAMnB,OAAO,gBAACitB,GAAS,CAACtB,QAASpf,EAAMof,QAAQ,UACpCqB,EACD,uBAAKnhB,UAAW8C,KAAQge,MAAM,UAC1B,gCAAM,iBACN,kCAAM,OAAKD,EAAY9O,QAAQ,SAEnC,uBAAK/R,UAAW8C,KAAQ3Q,QAAQ,UAC5B,yBAAQ6N,UAAW8C,KAAQ,eAAgBO,QAAS,WAAQkH,GAAU,GAAI7J,EAAMof,SAAW,EAAE,SAAC,uBAC9F,yBAAQ9f,UAAW8C,KAAQ,eAAgBO,QAAS3C,EAAMof,QAAQ,SAAC,UAClEiB,GAAY,yBAAQ/gB,UAAW8C,KAAQC,OAAQM,QA9BrC,WACfkH,EAAS,SACT7J,EAAMof,SACV,EA2B4E,SAAC,iCAGjF,E,oBClEMF,GAAW,SAAAlf,GAEb,OAAO,sBAAKV,UAAW8C,KAAQ+c,SAAUxc,QAAS3C,EAAMof,SAC5D,EACMC,GAAe,SAAArf,GACjB,OAAO,sBAAKV,UAAW8C,KAAQkd,MAAM,SACjC,sBAAKhgB,UAAW8C,KAAQmd,QAAQ,SAAEvf,EAAMsL,YAEhD,EAEMkU,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAAC3f,GAEX,OAAO,gBAAC,WAAQ,WACX4f,KAASC,aAAa,eAAC,GAAQ,CAACT,QAASpf,EAAMof,UAAqBI,IACpEI,KAASC,aAAa,eAAC,GAAY,UAAE7f,EAAMsL,WAA0BkU,MAI9E,EC4CemB,GA/DD,SAAC3gB,GAES+B,aAAY,SAAC5Q,GAAK,OAAKA,EAAM8F,KAAK,IAC9CA,MAASogB,WAELtV,aAAY,SAAC5Q,GAAK,OAAKA,EAAM8F,KAAK,IACtCA,MANc,IAAD,IAQfkpB,EAAgC,QAArB,EAAGngB,EAAMP,MAAMgY,cAAM,aAAlB,EAAoBxV,QAAO,SAACme,EAAO1sB,GAE/C,OAAO0sB,EAAQ1sB,EAAKC,IAAMD,EAAK2T,KACnC,GAAG,GAIDiZ,EAAuB,SAAA7sB,GAEzB,EAGE8sB,EAAqB,SAAA7sB,GAEvB,EAIW0O,KAAQ,cAED,QAFe,EAEjCpC,EAAMP,MAAMgY,cAAM,OAAlB,EAAoBhT,KAAI,SAAAxN,GAAK,OACxB,eAAC,GAAQ,CACCvG,KAAMuG,EAAMvG,KACZiD,IAAKsD,EAAMtD,IACX0T,MAAOpQ,EAAMoQ,MACb2Y,SAAUM,EAAsBM,KAAK,KAAM3pB,EAAM2N,KACjDqb,MAAOM,EAAmBK,KAAK,KAAM3pB,IAL3B,OAALA,QAAK,IAALA,OAAK,EAALA,EAAO2N,IAOZ,IAOnB,OAAO,gBAACic,GAAU,CAACzB,QAASpf,EAAMof,QAAQ,UAEtC,uBAAK9f,UAAW8C,KAAQge,MAAM,UAC1B,mEACA,gCAAM,2CAAwB,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAa9O,QAAQ,WAE5C,uBAAK/R,UAAW8C,KAAQge,MAAM,UAC1B,sDACA,gCAAM,kCAASpgB,EAAMP,MAAM+X,eAE/B,+BACI,0JAEJ,sBAAKlY,UAAW8C,KAAQ3Q,QAAQ,SAC5B,yBAAQ6N,UAAW8C,KAAQ,eAAgBO,QAAS3C,EAAMof,QAAQ,uBAI9E,EC8Be0B,OAnEf,WAEE,MAAsC3iB,oBAAS,GAAM,oBAA9C4iB,EAAW,KAAEC,EAAc,KAClC,EAAwC7iB,oBAAS,GAAM,oBAAhD8iB,EAAY,KAAEC,EAAe,KAEpC,EAA0B/iB,mBAAS,CAAC,GAAE,oBAA/BsB,EAAK,KAAEyV,EAAQ,KAmBtB,OACE,gBAAC,cAAM,WACH6L,GAAgB,eAAC,GAAI,CAAC3B,QAfJ,WACtB4B,GAAe,EACjB,IAcMC,GAAiB,eAAC,GAAK,CAAC7B,QAPL,SAACla,GACxBgc,GAAgB,EAClB,EAKyDzhB,MAAOA,IAC3D,eAAC,GAAM,CAACqE,WArBW,WACtBkd,GAAe,EACjB,IAoBI,gCAEE,sBAAK1hB,UAAU,kBAAkBc,MAAO,CAAI+F,gBAAiB,OAASI,MAAM,OAAO,SACjF,gBAAC,KAAM,WACL,eAAC,KAAK,CAAC4a,KAAK,IAAIC,QAAS,eAAC,GAAU,IAAKC,OAAK,IAC9C,eAAC,KAAK,CAACF,KAAK,gBAAgBC,QAAS,eAAC,GAAa,MACnD,eAAC,KAAK,CAACD,KAAK,kBAAkBC,QAAS,eAAC,GAAc,MACtD,eAAC,KAAK,CAACD,KAAK,UAAUC,QAAS,eAAC,GAAY,MAC5C,gBAAC,KAAK,CAACD,KAAK,QAAO,UACjB,eAAC,KAAK,CAACA,KAAK,OAAOC,QAAS,eAAC,GAAU,MACvC,eAAC,KAAK,CAACD,KAAK,MAAMC,QAAS,eAAC,GAAU,MACtC,eAAC,KAAK,CAACD,KAAK,GAAGC,QAAS,eAAC,GAAU,SAErC,eAAC,KAAK,CAACD,KAAK,SAASC,QAAS,eAAC,GAAW,MAC1C,eAAC,KAAK,CAACD,KAAK,YAAYC,QAAS,eAAC,GAAc,MAChD,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,YAAYC,QAAS,eAAC,GAAc,MAChD,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,cAAcC,QAAS,eAAC,GAAgB,CAAC9J,YAhCrC,SAACpS,GACzBgQ,EAAShQ,GACTgc,GAAgB,EAClB,MA8BU,eAAC,KAAK,CAACC,KAAK,aAAaC,QAAS,eAAC,GAAW,MAC9C,eAAC,KAAK,CAACD,KAAK,kBAAkBC,QAAS,eAAC,GAAc,MACtD,eAAC,KAAK,CAACD,KAAK,qBAAqBC,QAAS,eAAC,GAAiB,MAC5D,eAAC,KAAK,CAACD,KAAK,uBAAuBC,QAAS,eAAC,GAAmB,MAChE,eAAC,KAAK,CAACD,KAAK,QAAQC,QAAS,eAAC,GAAU,MACxC,eAAC,KAAK,CAACD,KAAK,SAASC,QAAS,eAAC,GAAW,MAC1C,eAAC,KAAK,CAACD,KAAK,WAAWC,QAAS,eAAC,GAAa,MAC9C,eAAC,KAAK,CAACD,KAAK,uBAAuBC,QAAS,eAAC,GAAc,MAC3D,eAAC,KAAK,CAACD,KAAK,0BAA0BC,QAAS,eAAC,GAAiB,MACjE,eAAC,KAAK,CAACD,KAAK,mBAAmBC,QAAS,eAAC,GAAe,aAK9D,eAAC,GAAM,MAGb,EClFeE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECEaQ,IAASC,WAAWvC,SAASC,eAAe,SACpDuC,OACH,eAAC,IAAQ,CAACtlB,MAASA,GAAM,SAErB,eAAC,GAAG,OAQV2kB,I,qBCvBAhxB,EAAOC,QAAU,CAAC,SAAW,6BAA6B,MAAQ,0BAA0B,aAAa,+B","file":"static/js/main.9fd775e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('keyword', keyword)\r\n    },[keyword])\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch(listCategories())\r\n\r\n  }, []);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect className={classes[\"color-navbar\"]}>\r\n        <Container  >\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div >0652077257</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          <Row >\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Col md={6} style={{ pading:10, margin:10, size:20}} >\r\n                \r\n                <NavDropdown title=\"Prodavnica\" \r\n                             id=\"basic-nav-dropdown\"  \r\n                             border='primary'\r\n                             style={{\r\n                                    fontSize: '1.4rem',\r\n                                     \r\n                                    border:'1px solid black',\r\n                                     display: 'inline-block',\r\n                                     background: 'rgb(97, 240, 7)'}}>\r\n                  {categories?.map( (category) => (\r\n                    <NavDropdown.Item  key={category._id}>\r\n                      <LinkContainer to={`/categories/${category._id}`} >\r\n                          <Nav.Link >\r\n                          { category.name }\r\n                          </Nav.Link>\r\n                      </LinkContainer>\r\n                        \r\n                    </NavDropdown.Item>\r\n                  ))}\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">\r\n                    Action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">\r\n                    Separated link\r\n                  </NavDropdown.Item> */}\r\n                </NavDropdown>\r\n              </Col>\r\n              <Col md={{ span: 10, offset: 10 }}>\r\n                <Nav>\r\n                  {/* <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faCartFlatbed} />     Korpa</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer> */}\r\n\r\n                  {/* <LinkContainer\r\n                    to=\"/info\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faInfo} />  Info</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer> */}\r\n\r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","\r\nimport { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/map-marker'\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n    <div className=\"pin\">\r\n      <Icon icon={locationIcon} className=\"pin-icon\" />\r\n      <p className=\"pin-text\">{text}</p>\r\n    </div>\r\n  )\r\nexport default LocationPin","import React from 'react'\r\nimport GoogleMapReact from 'google-map-react'\r\nimport './map.css'\r\nimport LocationPin from './LocationPin'\r\n\r\n\r\nconst GoogleMap = ({ location, zoomLevel }) => (\r\n    <div className=\"map\">\r\n      <h2 className=\"map-h2\">Dobro došli!</h2>\r\n  \r\n      <div className=\"google-map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: 'AIzaSyAC95KmBynfBYg_TjE61h1r7ELRN2V6mgA' }}\r\n          defaultCenter={location}\r\n          defaultZoom={zoomLevel}\r\n        >\r\n          <LocationPin\r\n            lat={location.lat}\r\n            lng={location.lng}\r\n            text={location.address}\r\n          />\r\n        </GoogleMapReact>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  export default GoogleMap","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                <GoogleMap location={location} zoomLevel={17} /> \r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className={`my-2 p-2 rounded ${classes[\"img-hover-zoom\"]}`} border=\"primary\"  style={{ width: '18rem', height: '26rem' }}>\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.images[0]?.image} style={{width: '16.4rem', height: '18rem' }}></Card.Img>\r\n            <Card.ImgOverlay>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '5px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: '1.6rem'}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black', fontSize: '1.8rem'}}>\r\n                    {product.price} rsd\r\n            </Card.Text>\r\n            <Card.Text as=\"h7\">\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-1 p-1  ${classes[\"img/-hover-zoom\"]} h-100 `} border=\"dark\"  style={{ width: '18rem', height: '25rem' }}>\r\n        <Card.Header as=\"h7\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: '1.6rem'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            <Card.Text as=\"h7\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    console.log('Input e:',inputValue)\r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 100);\r\n    const initialRender = useRef(true);\r\n    \r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        console.count(debouncedSearchTerm)\r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [dispatch, debouncedSearchTerm, keyword]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{ padding: '0.2rem'}}>\r\n           \r\n            <h7><strong>Pretraga Proizvoda:</strong></h7>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex',  justifyContent:'center', alignItems:'center', }}>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='pretraga'\r\n                        inline ='true'\r\n                        placeholder='Trazeni proizvod...'\r\n                        onChange={(e) => setPretraga(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Pozicija za sadnju</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setPozicija}></CustomSelect>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                <h7><strong>Boja cveta</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.color?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setBoja}></CustomSelect>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Tip biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setTip}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                \r\n                {/* <h7><strong>Visina biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.high?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setHigh}></CustomSelect>\r\n                    </Row>\r\n                <hr/> */}\r\n                \r\n                <h7><strong>Kategorija biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect  values={ allcategories?.categories?.map(col => (\r\n                            { value: col.name, label: col.name}\r\n                        ))} onAction={setKategorija}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n//import { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\nimport {\r\n    MDBCarousel,\r\n    MDBCarouselItem,\r\n  } from 'mdb-react-ui-kit';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport {  Image} from 'react-bootstrap'\r\n\r\nimport { Rerousel } from 'rerousel';\r\n\r\nfunction MDBCarusel( {itemRef}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n    \r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Rerousel itemRef={itemRef} interval={5000}>\r\n                {slike.map((c) => {\r\n                    return <Image key={c.id} src={c.src} ref={itemRef} fluid  rounded   style={{ offsetPosition: 'auto', position: 'relative' , right:'1.4rem',  width:'100%',\r\n                        height: '28rem', objectFit:'fill', margin:'auto', padding:'0.2rem 0.8rem'}}/>\r\n                })}\r\n                </Rerousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default MDBCarusel","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n  const [ val, setVal ] = useState({\r\n    color: [],\r\n    high: [],\r\n    type: [],\r\n    category: [],\r\n    flow: [],\r\n    search: ''\r\n})\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n        \r\n }, [dispatch, keyword]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n  setVal(value)\r\n  if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n    setToggle(false)\r\n    setCarucel(false)\r\n  } else{\r\n    setToggle(true)\r\n    setCarucel(true)\r\n  }\r\n }\r\n \r\n  return (\r\n    <div>\r\n        { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>} \r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        <h1> {carucel ? 'Kategorije:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (\r\n                        <Row  className={'gy-2'}>\r\n                          {categories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row className={'gy-2'}>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo(0, 0)\r\n    dispatch(listProducts())\r\n        \r\n }, [dispatch, id]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        <h1>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\n\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n       dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/#/\"><i class=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item href={`#/categories/${product?.category?.map(x => x._id)[0]}`}>\r\n                \r\n          { product?.category?.map(x => x.name)[0]}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            { product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        \r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={3} xs={6} >\r\n                                    <Row>\r\n                                    <Image src={product?.images?.find(x => true)?.image} alt={product.name} fluid>\r\n\r\n                                    </Image>\r\n                                    </Row>\r\n                                    <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={6} xl={6} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ fontSize:'2.8rem', fontFamily: 'Oswald, sans-serif;'}}>{product.name}</strong> <i style={{fontSize:'1.4rem'}}>{product.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Lokacija sadnje:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product.vre_cve) ? product.vre_cve?.join(', ') : \"\"}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product.orezivanje}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Botanicki naziv:</strong> {product.botanicki_naziv}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product.high}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={6} lg={4} xl={3} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const files = img //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td style={{whiteSpace: \"nowrap\"}}>{product.countInStock}</td>\r\n                                        <td><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n        \r\n        if(success){\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, success])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category\r\n        },images))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n          notify()\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        <Link to='/admin/productlist'>\r\n            Go Back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    onChange={(e) =>  setImage(e.target.files)}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    {/* <option>Odaberi mesto sadnje...</option> */}\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>Orezivanje...</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>Privlaci instekte...</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>Brzina rasta...</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","function ImagesGallery({images}){\r\n\r\n    const handleFirstImage = (e) => {\r\n        console.log('text:', e)\r\n    }\r\n\r\n    return(\r\n        <div className=\"row\">\r\n        {\r\n        images.map((url)=>{\r\n            return (\r\n                <div className=\"col-sm-2\">\r\n                <div className=\"card\">\r\n                <img src={url} alt='Slikica' onClick={handleFirstImage} />\r\n                </div>\r\n                </div>\r\n            )\r\n        })\r\n        }\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagesGallery","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\ntoast.configure()\r\n\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [prevImages, setPrevImages] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        console.log('original:', evnt)\r\n        const selectedFIles =[];\r\n        const targetFiles =evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        setPrevImages(selectedFIles);\r\n        setImage(evnt.target.files)\r\n      }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories())  \r\n        \r\n    }, [dispatch, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category  \r\n        }, images))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                <ImagesGallery  images={prevImages} />\r\n   \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='number'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={{   backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}