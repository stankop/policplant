{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","store/cart-actions.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/StaticCarusel.jsx","compontents/MultiCaroseul.jsx","screens/HomeScreen.js","screens/CategoryScreen.js","store/review-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","compontents/Photo.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","screens/InformacijeIsporuka.jsx","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","success","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","useNavigate","useDispatch","useLocation","useEffect","setItem","Form","onSubmit","e","preventDefault","Container","style","padding","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","background","i","login","email","password","dispatch","fetchData","config","headers","axios","post","data","stringify","response","detail","message","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","get","cartData","Header","listKagetorija","useRef","cat","setCat","current","Navbar","expand","collapseOnSelect","height","overflow","to","Brand","Image","fluid","src","width","marginTop","alt","Text","textAlign","fontSize","color","faPhone","Nav","Link","margin","HeaderCardButton","onShowCart","bg","display","Toggle","Collapse","span","offset","faStore","NavDropdown","title","slice","sort","a","b","map","category","_id","Item","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","WebFont","load","google","families","backgroundColor","xs","responsive","href","TITLE","class","fontFamily","textDecoration","Rating","addToCart","getState","image","images","price","countInStock","removeFromCart","addDostavaAndPlacanjeCart","Product","navigate","Card","border","Img","findLast","ImgOverlay","Title","marginBottom","prodajno_mesto","Body","as","fontStyle","botanicki_naziv","disabled","Number","Kategorija","objectFit","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","pk","productDetails","listFilterProducts","val","high","flow","place","search","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","memoizedValue","useMemo","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","initialRender","xl","justifyContent","col","label","type_of_plant","mesto_sadnje","placeholder","Loader","Spinner","animation","role","Message","children","Alert","Heading","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","CarouselFadeExample","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MultiCaroseul","image1","rounded","image2","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","img","zoomOnHover","buttonPosition","alwaysShowButton","primary","HomeScreen","carucel","setCarucel","toggle","setToggle","screenType","useScreenType","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","setSearchValue","orderCategories","isMobile","isDesktop","isLargeDesktop","sm","lg","CategoryScreen","catProducts","useParams","window","scrollTo","top","left","behavior","htmlString","__html","DOMPurify","sanitize","toString","description","Breadcrumb","paddingTop","active","dangerouslySetInnerHTML","includes","ProductScreen","match","setQty","productDet","original","thumbnail","marginLeft","lazyLoad","ListGroup","join","Array","isArray","place_of_planting","vre_cve","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","sirina_biljke","velicina_slanja","keys","open","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","Table","striped","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","files","formData","FormData","arr","from","forEach","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","whiteSpace","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","File","updateProductDetails","imgWithClick","cursor","Photo","photo","direction","imgStyle","onDoubleClick","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","setItems","setFlick","setProdajnoMesto","uploading","productUpd","prodSuccess","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","prvaSlika","targetFilesObject","y","targetFilesObjectWithoutLast","unshift","Set","data_mesto_sadnje","data2","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","memoizedImageCard","axis","onContextMenu","newItems","newImages","POSITION","TOP_RIGHT","autoClose","defaultValue","defaultChecked","controlid","multiple","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","rows","minMenuHeight","openMenuOnFocus","Select","ProductCreateScreen","inputName","inputHesh","notify","mesta_sadnje","onKeyPress","key","focus","checkPress","ref","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","InformacijeIsporuka","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.5228d669.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            success: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        productDetailsReset(state) {\r\n            \r\n           \r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('keyword', keyword)\r\n    },[keyword])\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{padding:'4rem'}}>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        //dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 400)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n  const listKagetorija= useRef([])\r\n\r\n  const [cat, setCat] = useState(categories)\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n \r\n    \r\n    //dispatch(listCategories())\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    localStorage.setItem('categories', JSON.stringify(categories))\r\n    listKagetorija.current = JSON.parse(localStorage.getItem('categories'))\r\n    setCat(listKagetorija.current)\r\n    \r\n  }, [categories]);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Row>\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        <Container  style={{ overflow:'hidden'}}>\r\n        \r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand >\r\n                  {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                  <Image fluid  src={image} loading=\"eager\" style={{ width:'22rem', height:'22rem',marginTop: '+2rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link style={{ margin:'1rem'}}>\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      </Row>\r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row style={{width:'auto', display: 'flex'}}>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{width:'100%'}}>\r\n              \r\n              <Col md={{ span: 12, offset: 14 }}>\r\n                <Nav style={{width:'100%'}}>\r\n                    \r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {cat?.slice().sort((a, b) =>{return a.order - b.order}).map( (category) => (\r\n                              <LinkContainer to={`/categories/${category._id}`} key={category._id}>\r\n                                  <NavDropdown.Item  key={category._id}>\r\n                                      { category.name }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                  \r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport  {useEffect} from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\nimport Image from 'react-bootstrap/Image'\r\nimport WebFont from 'webfontloader';\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Poppins', 'Chilanka']\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <hr></hr>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n            <Row>\r\n              <Col style={{ margin:'1rem'}}>\r\n                <Image xs={6} md={4} src={image}\r\n                       \r\n                       fluid\r\n                       responsive\r\n                       style={{width:'50%', height:'80%'}}  >\r\n                       \r\n                </Image>\r\n                <div>\r\n                  Adresa: Prnjavorska 114, Budisava\r\n                </div>\r\n                <div>\r\n                  Telefon: 0652077257\r\n                </div>\r\n                <div>\r\n                  Email: emapolic021@gmail.com\r\n                </div>\r\n                <div style={{padding:'.5rem'}}>\r\n                    \r\n                    <a href='https://www.facebook.com/rasadnikema ' style={{margin:'0.5rem' }} TITLE=\"Face\">\r\n                            <i class=\"fa-brands fa-facebook fa-2x\"></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Twitter\">\r\n                            <i class=\"fa-brands fa-twitter\"></i>\r\n                    </a> */}\r\n                    <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Instagram\">\r\n                            <i class=\"fa-brands fa-instagram fa-2x\"></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Messenger\">\r\n                            <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                    </a>\r\n                    <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Mail\">\r\n                            <i class=\"fa-regular fa-envelope\"></i>\r\n                    </a> */}\r\n                </div>\r\n              </Col>\r\n              <Col style={{ padding:'2rem'}}>\r\n                <h4 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}><strong>Korisni linkovi</strong></h4>\r\n                <h5 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Kako poručiti putem sajta</h5>\r\n                <h5 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Izrada plana sadnje</h5>\r\n                <h5 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Najčešća pitanja</h5>\r\n                <h5 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Način plaćanja</h5>\r\n                <Link to=\"/isporuka\" style={{ textDecoration: 'none' }}>\r\n                  <h5 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Isporuka</h5>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { useParams } from 'react-router';\r\nimport WebFont from 'webfontloader';\r\nimport '../compontents/Product.css'\r\n\r\nfunction Product({product}) {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n\r\n    const addToCartHandler = () => {\r\n        console.log('Klik')\r\n        dispatch(addToCart(Number(product._id), Number(1)));\r\n        navigate(`/cart/?id=${product._id}&qty=${1}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n          google: {\r\n            families: ['Poppins', 'Chilanka']\r\n          }\r\n        });\r\n    }, [])\r\n\r\n  return (\r\n    <Card className={`my-1 p-1 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"primary\"  style={{ width: '17.5rem', height: 'auto' }}>\r\n        <Link to={`/products/${product._id}`}> \r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} loading='lazy' style={{width: '100%', height: '14rem' }}></Card.Img>\r\n            <Card.ImgOverlay style={{width: '95%', height: '14rem' }}>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '4px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n            <Card.ImgOverlay className=\"card-img-overlay d-flex align-items-end flex-column bd-highlight mb-3\" style={{width: '100%', height: '14rem' }}>\r\n                {product?.prodajno_mesto && \r\n                    <Card.Img src='https://policplantblob.blob.core.windows.net/policplant-banner/samo_na_projadnom_mestu1.png' \r\n                              loading='lazy'\r\n                              style={{width: '40%', height: '50%' }}>\r\n                    </Card.Img>}\r\n            </Card.ImgOverlay> \r\n        </Link> \r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link style={{ textDecoration: 'none' }} to={`/products/${product._id}`}> \r\n             <Card.Title as=\"h3\" >\r\n                 <div className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>{product?.name}</div>\r\n                 <div className='click' style={{ fontSize: '1rem', fontStyle: 'italic', color:'#333333', fontFamily: 'Poppins'}}>{product?.botanicki_naziv}</div>\r\n             </Card.Title>\r\n             </Link> \r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h4\" style={{ color:'#83b735', fontSize: '1rem'}}>\r\n                    {product.price} RSD\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h6\"> */}\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            {/* </Card.Text> */}\r\n            <Button     variant=\"primary\" \r\n                        disabled={product.countInStock < 1} \r\n                        type='button'\r\n                        onClick= {addToCartHandler}>\r\n                                Dodaj u Korpu\r\n            </Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-1 p-1  ${classes[\"img/-hover-zoom\"]} h-100 `} border=\"dark\"  style={{ width: '100%', height: '25rem' }}>\r\n        <Card.Header as=\"h6\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image} loading='lazy' style={{ width: '100%', height: '32vh', objectFit: 'cover' }}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\", textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block',fontSize: '1.6rem'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (pk=null, keyword = '', page='') => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            // const { data } = await axios.get(`/api/products/?pk=${pk}&keyword=${keyword}&page=${page}`)\r\n            // return data;\r\n            if(pk === null){\r\n                const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n                return data;\r\n            }else{\r\n                const { data } = await axios.get(`/api/products/categoryProducts/${pk}`)\r\n                return data;\r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    \r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        \r\n        //onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 500);\r\n    const initialRender = useRef(true);\r\n    \r\n\r\n    useEffect(()=>{\r\n\r\n        onSearch(memoizedValue)\r\n\r\n     }, [memoizedValue, onSearch]);\r\n\r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        \r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [dispatch, debouncedSearchTerm, keyword]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid style={{display: 'flex', padding: '0.2rem'}}>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex', textAlign:'left' , justifyContent:'left' , width:'100%' }}>\r\n                \r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <h6><strong>Kategorija biljke</strong></h6>\r\n                        <CustomSelect  values={ allcategories?.categories?.map(col => (\r\n                            { value: col.name, label: col.name}\r\n                            ))} onAction={setKategorija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n\r\n                    <h6><strong>Tip biljke</strong></h6>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setTip}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                \r\n                    <h6><strong>Pozicija za sadnju</strong></h6>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setPozicija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{}}>\r\n                    \r\n                    \r\n                    <h6><strong>Boja cveta</strong></h6>\r\n                        <Form.Control \r\n                            type='search'\r\n                            name='pretraga'\r\n                            inline ='true'\r\n                            placeholder='Unesite boju...'\r\n                            onChange={(e) => setBoja(e.target.value) }>\r\n                        </Form.Control>\r\n                   \r\n                </Row>\r\n                {/* style={{ display: 'flex', padding:'0.5rem', width: '100%'}} */}\r\n                <Row md={12} xl={12} style={{ }}> \r\n                        \r\n                        <h6><strong>Pretraga Proizvoda:</strong></h6>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Trazeni proizvod...'\r\n                                onChange={(e) => setPretraga(e.target.value) }>\r\n                            </Form.Control>     \r\n                </Row>\r\n\r\n                {/* <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row> */}\r\n            \r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import Carousel from 'react-bootstrap/Carousel';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CarouselFadeExample() {\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n  return (\r\n    <Carousel fade>\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselFadeExample;","import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport ImageButton from 'react-image-button';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 2 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n  };\r\n\r\nfunction MultiCaroseul(props) {\r\n    const image1 = <Image\r\n            className='img-fluid shadow-5'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/banner-1.jpg\"\r\n            alt=\"First slide\"\r\n            rounded\r\n            responsive={true} \r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image2 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/banner2.jpg\"\r\n            alt=\"Second slide\"\r\n            rounded\r\n            style={{ height:'50%'}}\r\n            />\r\n    return (\r\n        <Carousel\r\n            swipeable={false}\r\n            draggable={false}\r\n            showDots={true}\r\n            responsive={responsive}\r\n            ssr={true} // means to render carousel on server-side.\r\n            infinite={true}\r\n            //autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\r\n            autoPlaySpeed={1000}\r\n            keyBoardControl={true}\r\n            customTransition=\"all .5\"\r\n            transitionDuration={500}\r\n            containerClass=\"carousel-container\"\r\n            removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n            //deviceType={this.props.deviceType}\r\n            dotListClass=\"custom-dot-list-style\"\r\n            itemClass=\"carousel-item-padding-40-px\"\r\n            >\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image1}\r\n                             zoomOnHover={0}\r\n                             buttonPosition=\"bottom\"\r\n                             alwaysShowButton={true} >\r\n                    <button primary={true}  className=\"btn success\" style={{ border: '2px solid black'}} > Cetinari pogledajte  </button>\r\n                </ImageButton>\r\n            </div>\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image2}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button primary={true} className=\"btn success\" style={{ border: '2px solid black'}} > Puzavice pogledajte </button>\r\n                </ImageButton>\r\n            </div> \r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default MultiCaroseul\r\n","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport CarouselFadeExample from '../compontents/StaticCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sliderClasses } from '@mui/material'\r\nimport { SimpleCarouselSlider } from 'react-simple-carousel-image-slider'\r\nimport Carousel from 'flat-carousel';\r\nimport MultiCaroseul from '../compontents/MultiCaroseul'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n//   const [ val, setVal ] = useState({\r\n//     color: '',\r\n//     high: [],\r\n//     type: [],\r\n//     category: [],\r\n//     flow: [],\r\n//     search: ''\r\n// })\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n    //setVal(value)\r\n    if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n     setToggle(false)\r\n     setCarucel(false)\r\n   } else{\r\n     setToggle(true)\r\n     setCarucel(true)\r\n   }\r\n }\r\n \r\n  const orderCategories = categories?.slice().sort((a, b) =>{return a.order - b.order})\r\n  const slike = [\r\n    \r\n      \"https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg\",\r\n    \r\n      \"https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg\"\r\n    ]\r\n  \r\n\r\n  return (\r\n    <div>\r\n        {/* { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}   */}\r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        {/* { carucel && <CarouselFadeExample></CarouselFadeExample>}  */}\r\n        {/* { carucel && <SimpleCarouselSlider images={slike} autoplay={false} width= \"100%\" height=\"450px\"/>} */}\r\n        {/* {  carucel && <DragCoruseal></DragCoruseal>} */}\r\n        { carucel && <MultiCaroseul></MultiCaroseul>}\r\n\r\n        <h1> {carucel ? 'Detaljna pretraga:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (\r\n                        <Row  className={'gy-2'}>\r\n                          {orderCategories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row className={'gy-2'}>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from 'dompurify';\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n      })\r\n    dispatch(listProducts(id))\r\n        \r\n }, [dispatch, id]);\r\n\r\n const htmlString = {__html: DOMPurify.sanitize(catProducts?.find( cat => cat._id?.toString() === id)?.description)}\r\n \r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        <h1>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        \r\n        {/* <p>{ catProducts?.find( cat => cat._id?.toString() === id)?.description}</p> */}\r\n        <p dangerouslySetInnerHTML={htmlString}></p>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\nimport XMLToReact from 'xml-to-react';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n       dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      \r\n      //navigate(`/cart/?id=${id}&qty=${qty}`)\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n const images = product?.images?.map(image => {\r\n    return {\r\n        original: image.image,\r\n        thumbnail: image.image\r\n    }\r\n })\r\n\r\n const htmlString = {__html: DOMPurify.sanitize(product?.description)}\r\n\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/#/\"><i className=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item href={`#/categories/${product?.category?.map(x => x._id)[0]}`}>\r\n                \r\n          { product?.category?.map(x => x.name)[0]}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            { product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        {userInfo && <Link to={`/admin/product/${id}/edit`} className='btn btn-primary my-3' style={{ marginLeft:'3rem'}}> Edit Biljke</Link>}\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={6} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ fontSize:'2.8rem', fontFamily: 'Oswald, sans-serif'}}>{product.name}</strong> <i style={{fontSize:'1.4rem'}}>{product.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {/* {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>} */}\r\n                                        {product.mesto_sadnje?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {Array.isArray(product.mesto_sadnje) ? product.mesto_sadnje?.join(', ') : product.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product.vre_cve) ? product.vre_cve?.join(', ') : product.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product.type_of_plant && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product.privlaci_insekte && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product.brzina_rasta && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product.prezimljava && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product.sirina_biljke && <ListGroup.Item>\r\n                                            <strong> Sirina:</strong> {product.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product.velicina_slanja && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item>\r\n                                            \r\n                                                \r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <br />\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {product.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )}\r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product.countInStock < 1} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product.countInStock < 1}\r\n                                                                    onClick={() => window.open('#/cart',\"_self\")}>\r\n                                                                        Poruči\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <div style={{margin:'0.3rem'}}>\r\n                                        Share:\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Face\">\r\n                                                <i class=\"fa-brands fa-facebook\"></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Twitter\">\r\n                                                <i class=\"fa-brands fa-twitter\"></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Instagram\">\r\n                                                <i class=\"fa-brands fa-instagram\"></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Messenger\">\r\n                                                <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Mail\">\r\n                                                <i class=\"fa-regular fa-envelope\"></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    \r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                {/* <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup> */}\r\n                                {/* {product?.description && description} */}\r\n                                {/* <Container child={ doc}/> \r\n                                {doc} */}\r\n                                <p dangerouslySetInnerHTML={htmlString}></p>\r\n                                \r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const files = img //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            const arr = Array.from(files)\r\n            arr?.forEach(x => \r\n                formData.append('images', x)\r\n            )\r\n            //formData.append('image', files)\r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td style={{whiteSpace: \"nowrap\"}}>{product.countInStock}</td>\r\n                                        <td><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const formData = new FormData()\r\n            console.log('Type', images)\r\n            if(images[0] instanceof File ){\r\n                \r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n                //formData.append('image', files)\r\n                formData.append('product_id', product_id)\r\n            }else{\r\n                \r\n                const arr = Array.from(files?.map(x => x.id))\r\n                \r\n                formData.append('images', arr)\r\n                //formData.append('image', files)\r\n                formData.append('product_id', product_id)\r\n            }\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    \r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      onDoubleClick={()=> console.log('Double click')}\r\n      alt=\"img\"/>\r\n   \r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef, useMemo  } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\ntoast.configure()\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n    const [items, setItems] = useState([]);\r\n    const [flick, setFlick] = useState(false);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    const prod = useSelector(state => state.product)\r\n    const { product: prodProduct,  success : prodSuccess} = prod\r\n\r\n    const ukupno = useRef([])\r\n\r\n    const SortablePhoto = SortableElement(item => <Photo {...item} />);\r\n    const SortableGallery = SortableContainer(({ items }) => (\r\n            <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n        \r\n        ));\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        const newItems = items?.map(image => {\r\n            return {\r\n                src:image.src,\r\n                width:1,\r\n                height:1\r\n            }\r\n        })\r\n        setItems([...newItems, ...photos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        console.log('Renderovanje')\r\n        if(success){\r\n            const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n            const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n                return {\r\n                    image: image?.image,\r\n                    id: image?.id\r\n                }\r\n            })\r\n            const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n            if(prvaSlika){\r\n                targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id})\r\n            }\r\n\r\n        const photos = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n              return {\r\n                  src:image.image,\r\n                  id:image.id,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        setItems(photos) \r\n        }   \r\n    }, [success,product?.name, product?.images])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n\r\n        \r\n        if(success){\r\n            console.log('Flicking')\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n            setProdajnoMesto(product.prodajno_mesto)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, product?.name, success, prodSuccess])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        ukupno.current = items\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto\r\n        }, images))\r\n        setItems(ukupno.current)\r\n        // setImage(ukupno.current.map((index,item) => {\r\n        //     return {\r\n        //         id:item.id,\r\n        //         image:item.src,\r\n        //         order: index,\r\n        //         product:id\r\n        //     }\r\n        // }))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n        notify()\r\n        setImage([])\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_mesto_sadnje = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data_mesto_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n  \r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex},e) => {\r\n\r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(Array.from(items?.map((item, index) => {\r\n            return {\r\n                id: item.id,\r\n                image: item.src,\r\n                order:index,\r\n                product: id\r\n            }\r\n        })), oldIndex, newIndex));\r\n        console.log('Items sort order', items);\r\n        console.log('Image sort order', images);\r\n    };\r\n\r\n    const memoizedImageCard = useMemo(() => {\r\n        return (\r\n            <Row>\r\n                <SortableGallery items={items}   onSortEnd={onSortEnd} axis={\"xy\"} />\r\n            </Row>\r\n        )\r\n    },[items]);\r\n\r\n    return (\r\n        <div className=\"ProductEditScreen\"\r\n            onContextMenu={(e) => {\r\n            e.preventDefault(); // prevent the default behaviour when right clicked\r\n            const image = JSON.stringify(e.target.src)\r\n            const newItems = items.filter(item => JSON.stringify(item.src) !== image)\r\n            setItems(newItems)\r\n            console.log('Items:', newItems)\r\n            const newImages= newItems.map((item, index) => {\r\n                return {\r\n                    image: item.src,\r\n                    order: index,\r\n                    product: id,\r\n                    id: item.id\r\n                }\r\n            })\r\n            console.log('Images:', newImages)\r\n            setImage(newImages)\r\n            setFlick(true)\r\n            // const slanje= []\r\n            // newImages.forEach(x => {\r\n            //     var file = new File([\"hello\"], x.image\r\n            //     , {type:\"image/png\", lastModified: new Date().getTime()})\r\n            //     slanje.append(file)\r\n            // })\r\n            // console.log('Za slanje:', slanje)\r\n        }}>\r\n        <Link to={-1}> \r\n            Nazad\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='id'>\r\n                                <Form.Label><strong>ID</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={id}\r\n                                    disabled\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto'>\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    type='checkbox'\r\n                                    id='prodaja'\r\n                                    defaultChecked={prodajno_mesto}\r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                {memoizedImageCard} \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option>{mesto_sadnje}</option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data_mesto_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             options={data_mesto_sadnje}\r\n                                             onChange={handleChange_mesto_sadnje}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>{type}</option>\r\n                                    {!allcategories ? [...Array.from(...allcategories?.type_of_plant), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option key={0}>{type}</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>{orezivanje}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.orezivanje), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option key={0}>{orezivanje}</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>   \r\n\r\n                            {/* <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>{privlaci_insekte}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.privlaci_insekte), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option key={0}>{privlaci_insekte}</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>{brzina_rasta}</option>\r\n                                    {!allcategories ? [...Array.from(allcategories?.brzina_rasta),\"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option key={0}>{brzina_rasta}</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push(URL.createObjectURL(file))\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto  \r\n        }, images))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_Mesto = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    const mesta_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto'>\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    type='checkbox'\r\n                                    id='prodaja'\r\n                                    onChange={(e) => setProdajnoMesto(e.target.value)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={mesta_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={mesta_sadnje}\r\n                                             onChange={handleChange_Mesto}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","\r\n\r\nfunction InformacijeIsporuka() {\r\n\r\nwindow.scrollTo({\r\n    top: 100,\r\n    left: 100,\r\n    behavior: 'smooth'\r\n    });\r\n  return (\r\n    <div>\r\n      <h3>Isporuka</h3>\r\n        <div>\r\n            Minimalni iznos porudžbine ne može da bude manji od 1000rsd. Porudžbine koje nemaju naveden minimum neće se isporučivati. \r\n            Troškovi isporuke na celoj teritoriji Srbije posebno se zaračunavaju i plaćaju, u skladu sa cenovnikom Post Express službe i iznose od 450,00 dinara, pa naviše,\r\n            zavisno od težine i vrednosti pošiljke. Maksimalna težina paketa za slanje PostExpress službom je 20 kg, u kutijama čije dimenzije ne prelaze 60x50x50cm.\r\n            U suprotnom se pošiljka šalje kao CC paket, koja ima malo duži rok isporuke. Ukoliko ima više paketa za svaki se plaćaju troškovi isporuke.\r\n            Prilikom prijema plaća se vrednost robe + troškovi isporuke. Kako bi pošiljka bila sigurno i brzo dostavljena do kupca, potrebno je da kupac navede tačne podatke \r\n            prilikom formiranja porudžbine. Vreme isporuke je od 2-5 radnih dana. \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InformacijeIsporuka;\r\n","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\nimport InformacijeIsporuka from './screens/InformacijeIsporuka'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={{   backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n            <Route path=\"/isporuka\" element={<InformacijeIsporuka />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}