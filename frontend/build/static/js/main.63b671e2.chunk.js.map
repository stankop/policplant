{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","store/product-actions.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","store/cart-actions.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/StaticCarusel.jsx","compontents/MultiCaroseul.jsx","screens/HomeScreen.js","screens/CategoryScreen.js","store/review-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","compontents/Photo.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","screens/InformacijeIsporuka.jsx","screens/InformacijePorucivanje.jsx","screens/InformacijePitanja.jsx","screens/InformacijeReklamacije.jsx","screens/InformacijePrivatnost.jsx","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","success","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsReset","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","i","listProducts","pk","keyword","dispatch","fetchData","axios","get","data","cartData","response","detail","message","productDetails","listFilterProducts","value","val","color","high","type","category","flow","place","search","console","log","post","prodData","SearchBox","useState","setKeyword","useNavigate","useDispatch","useLocation","Form","onSubmit","e","preventDefault","Container","style","padding","Row","Col","md","Control","placeholder","inline","className","onChange","target","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","background","login","email","password","config","headers","setItem","stringify","logout","removeItem","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","screenType","useScreenType","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","width","height","onClick","icon","badge","listCategories","Header","image","listKagetorija","useRef","cat","setCat","current","info","src","Navbar","expand","collapseOnSelect","isMobile","overflow","to","Brand","Image","fluid","alt","Text","textAlign","Nav","Link","margin","HeaderCardButton","onShowCart","fontSize","faPhone","marginTop","bg","display","Toggle","Collapse","span","offset","paddingRight","faStore","NavDropdown","title","slice","sort","a","b","map","_id","Item","faInfo","faAnchor","faContactBook","user_name","event","faUser","isAdmin","Footer","WebFont","load","google","families","backgroundColor","xs","responsive","objectFit","href","paddingTop","fontFamily","marginBottom","textDecoration","Rating","addToCart","getState","images","price","countInStock","removeFromCart","addDostavaAndPlacanjeCart","Product","catId","navigate","Card","border","Img","findLast","ImgOverlay","Title","prodajno_mesto","Body","as","fontStyle","botanicki_naziv","disabled","Number","Kategorija","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","Search","onSearch","pretraga","pozicija","setPozicija","boja","setBoja","tip","setTip","kategorija","setKategorija","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","useMemo","initialRender","xl","justifyContent","col","label","type_of_plant","mesto_sadnje","Loader","Spinner","animation","role","Message","children","Alert","Heading","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","CarouselFadeExample","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","MultiCaroseul","image1","rounded","image2","image3","swipeable","draggable","showDots","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","img","buttonPosition","alwaysShowButton","primary","HomeScreen","carucel","setCarucel","toggle","setToggle","categoryError","categoryLoading","prod","useSearchParams","customerLogo","searchFunc","orderCategories","alignItems","isDesktop","isLargeDesktop","paddingBottom","paddingLeft","sm","lg","CategoryScreen","catProducts","useParams","window","scrollTo","top","left","behavior","htmlString","__html","DOMPurify","sanitize","toString","description","Breadcrumb","active","dangerouslySetInnerHTML","includes","ProductScreen","match","setQty","productDet","setImages","prvaSlika","Array","from","targetFilesObject","y","targetFilesObjectWithoutLast","unshift","imgs","Set","original","thumbnail","incrementHandle","decrementHandle","textDecorationLine","marginLeft","lazyLoad","ListGroup","join","isArray","place_of_planting","vre_cve","orezivanje","privlaci_insekte","brzina_rasta","prezimljava","sirina_biljke","velicina_slanja","size","InputGroup","open","CartScreen","setColor","setDostava","setPlacanje","hidden","toFixed","removeFromCartHandler","faTrash","m","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","FormContainer","LoginScreen","setEmail","setPassword","redirect","Group","controlId","Label","varaiant","register","username","fullname","address","self_phone","fix_phone","RegisterScreen","setName","setUserName","setPlace","setAddress","setSelfPhone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","required","getUserDetails","Authorization","token","updateUserProfile","put","userUpdateProfileSuccess","listMyOrders","ProfileScreen","loadingOrders","errorOrders","Object","keys","Table","striped","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","textDocorationColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","createOrder","resetOrder","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","ukupno","getOrderDetails","payOrder","paymentResult","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","listUsers","deleteUser","delete","deleteUserReset","UserListScreen","uDelete","bordered","hover","confirm","uploadData","product_id","itms","files","formData","FormData","append","arr","forEach","productData","changeStanjeValue","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","setVal","order_set","changingValueHandler","reverse","novo","popust","defaultValue","InfoScreen","ONamaScreen","KontakScreen","updateUser","updateUserReset","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateProductDetails","imgWithClick","cursor","Photo","photo","direction","imgStyle","onDoubleClick","toast","configure","ProductEditScreen","hesteg","setHesteg","setImage","setDescription","setPrice","setCountInStock","setMestoSadnje","setVremeCvetanja","setOrezivanje","setPrivlaciInsekte","setBrzinaRasta","setPrezimljava","setBotanickiNaziv","setHigh","setVelicinaSlanja","setType","setSirinaBiljke","setCategory","setItems","setProdajnoMesto","setNovo","setPopust","uploading","productUpd","prodSuccess","SortablePhoto","SortableElement","SortableGallery","SortableContainer","photos","renderImage","image_name","data_mesto_sadnje","data2","onSortEnd","oldIndex","newIndex","arrayMoveImmutable","memoizedImageCard","axis","POSITION","TOP_RIGHT","autoClose","isValid","defaultChecked","row","onContextMenu","newItems","controlid","multiple","evnt","selectedFIles","targetFiles","file","URL","createObjectURL","rows","minMenuHeight","openMenuOnFocus","Select","ProductCreateScreen","inputName","inputHesh","notify","mesta_sadnje","onKeyPress","key","focus","checkPress","ref","listOrders","OrderListScreen","listOrds","deliverdAt","FilterScreen","location","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","InformacijeIsporuka","InformacijePorucivanje","InformacijePitanja","InformacijeReklamacije","InformacijePrivatnost","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.63b671e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        success: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.success = true\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: null,\r\n            loading: false,\r\n            success: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            state.success = false\r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        productDetailsReset(state) {\r\n            \r\n           \r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n                state.error = ''\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n               \r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            //state.success = false\r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.error = ''\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (pk=null, keyword = '', page='') => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            // const { data } = await axios.get(`/api/products/?pk=${pk}&keyword=${keyword}&page=${page}`)\r\n            // return data;\r\n            if(pk === null){\r\n                const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n                return data;\r\n            }else{\r\n                const { data } = await axios.get(`/api/products/categoryProducts/${pk}`)\r\n                return data;\r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search,\r\n                keyword: value.keyword\r\n            }\r\n            \r\n        console.log('Ulaz:', val)\r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState,useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport { listFilterProducts } from '../store/product-actions'\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Keyword:', keyword)\r\n        dispatch(listFilterProducts({\r\n            color: '',\r\n            high: '',\r\n            type: '',\r\n            category: '',\r\n            flow: '',\r\n            search: keyword,\r\n            keyword: ''}))\r\n        \r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     localStorage.setItem('keyword', keyword)\r\n    // },[keyword])\r\n\r\n\r\n    const btnStyle = {\r\n        background: 'rgb(131, 183, 53)',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{padding:'4rem'}}>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        placeholder='Unesi pojam'\r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        //dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n    const screenType = useScreenType();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 400)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button  style={ screenType ? { width:'8rem', height:'4rem'} : {}}  className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n  faStore\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect, useRef, useState } from 'react'\r\nimport { LinkContainer, Link } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Image from 'react-bootstrap/Image'\r\nimport '../compontents/Header.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n  const listKagetorija= useRef([])\r\n\r\n  const [cat, setCat] = useState(categories)\r\n\r\n  const dispatch = useDispatch();\r\n  const screenType = useScreenType();\r\n\r\n  useEffect(() => {\r\n \r\n    \r\n    //dispatch(listCategories())\r\n\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    localStorage.setItem('categories', JSON.stringify(categories))\r\n    listKagetorija.current = JSON.parse(localStorage.getItem('categories'))\r\n    setCat(listKagetorija.current)\r\n    \r\n  }, [categories]);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const info = [\r\n    // {\r\n    //   id:0,\r\n    //   value: 'Informacije',\r\n    //   src: 'a'\r\n    // },\r\n    { \r\n      id:1,\r\n      value: 'Poručivanje',\r\n      src: 'porucivanje'},\r\n    {\r\n      id:2,\r\n      value: 'Način plaćanja i isporuke ',\r\n      src: 'isporuke'\r\n    },\r\n    {\r\n      id:3,\r\n      value:'Najčešća pitanja ',\r\n      src: 'pitanja'\r\n    },\r\n    {\r\n      id:4,\r\n      value:'Reklamacije',\r\n      src: 'reklamacije'\r\n    },\r\n    {\r\n      id:5,\r\n      value:'Politika privatnosti',\r\n      src: 'privatnost'\r\n    }]\r\n\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      \r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect style={{ height:'12rem'}} className={classes[\"color-navbar\"]}>\r\n        { screenType.isMobile ? \r\n              <Container  style={{ overflow:'hidden'}}>\r\n                  <Row>\r\n                    <Col>\r\n                      <LinkContainer to=\"/\">\r\n                        <Navbar.Brand >\r\n                          {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                          <Image fluid  src={image} loading=\"eager\" style={{ width:'16rem', height:'14rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                        </Navbar.Brand>\r\n                      </LinkContainer>\r\n                    </Col>\r\n                    {/* <Navbar.Text style={{ textAlign: 'center'}}>\r\n                        {<div>                     \r\n                          <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                            \r\n                          <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                        </div>}\r\n\r\n                    </Navbar.Text> */}\r\n                    \r\n                      {/* <SearchBox ></SearchBox> */}\r\n                    <Col>\r\n                      <Navbar.Text style={{ textAlign: 'center'}}>\r\n                      <LinkContainer to=\"/cart\" >\r\n                            <Nav.Link style={{ margin:'1rem'}}>\r\n                              <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                            </Nav.Link>\r\n                          </LinkContainer>\r\n                      </Navbar.Text>\r\n                      <Navbar.Text style={{ textAlign: 'center'}}>\r\n                        {<div>                     \r\n                          <div style={{fontSize: '1.2rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                            \r\n                          <div style={{color:'black',fontSize: '1.2rem'}}>0652077257</div>\r\n                        </div>}\r\n\r\n                    </Navbar.Text>\r\n                    </Col>\r\n                  </Row>\r\n              </Container> \r\n              :\r\n              <Container  style={{ overflow:'hidden'}}>\r\n              \r\n                <LinkContainer to=\"/\">\r\n                  <Navbar.Brand >\r\n                    {/* <h1 className={classes[\"h1\"]}>Rasadnik Ema</h1> */}\r\n                    <Image fluid  src={image} loading=\"eager\" style={{ width:'22rem', height:'22rem',marginTop: '+2rem', overflow:'hidden'}} alt=\"Rasadnik Ema\"/>\r\n                  </Navbar.Brand>\r\n                </LinkContainer>\r\n                \r\n                <Navbar.Text style={{ textAlign: 'center'}}>\r\n                    {<div>                     \r\n                      <div style={{fontSize: '1.6rem', color:'black'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                        \r\n                      <div style={{color:'black',fontSize: '1.4rem'}}>0652077257</div>\r\n                    </div>}\r\n\r\n                </Navbar.Text>\r\n                \r\n                  <SearchBox ></SearchBox>\r\n\r\n                <Navbar.Text style={{ textAlign: 'center'}}>\r\n                <LinkContainer to=\"/cart\" >\r\n                      <Nav.Link style={{ margin:'1rem'}}>\r\n                        <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                </Navbar.Text>\r\n              </Container>}\r\n      </Navbar>\r\n      \r\n      \r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          \r\n          <Row style={{width:'auto', display: 'flex'}}>\r\n          \r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4}/>\r\n          \r\n            <Navbar.Collapse id=\"basic-navbar-nav\" style={{width:'100%'}}>\r\n              \r\n              <Col md={{ span: 12, offset: 14 }}>\r\n                <Nav style={{width:'100%'}}>\r\n                    \r\n                    <div style={{fontSize: '1.4rem', paddingRight:'2rem'}}><FontAwesomeIcon icon={faStore}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Prodavnica\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {cat?.slice().sort((a, b) =>{return a.order - b.order}).map( (category) => (\r\n                              <LinkContainer to={`/categories/${category._id}`} key={category._id}>\r\n                                  <NavDropdown.Item  key={category._id}>\r\n                                      { category.name }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                    \r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faInfo}></FontAwesomeIcon>   \r\n                          <NavDropdown title=\"Info\" \r\n                                  id=\"basic-nav-dropdown\" \r\n                                  \r\n                                  style={{\r\n                                          fontSize: '1.4rem', \r\n                                          display: 'inline-block'}}>\r\n                            {info?.map( (i) => (\r\n                              <LinkContainer to={`/${i.src}/`} key={i.id}>\r\n                                  <NavDropdown.Item className='click'  key={i.id}>\r\n                                      { i.value }  \r\n                                  </NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            ))}\r\n                        \r\n                          </NavDropdown>  \r\n                    </div>\r\n                   \r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem',display: 'inline-block'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '1.4rem'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '1.4rem'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n            \r\n          </Row>\r\n        </Container>\r\n      </Navbar> \r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport  {useEffect} from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport GoogleMap from './UI/GoogelMap'\r\nimport Image from 'react-bootstrap/Image'\r\nimport WebFont from 'webfontloader';\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport '../compontents/Footer.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst location = {\r\n  address: 'Prnjavorska 114, Budisava',\r\n  lat: 45.27563,\r\n  lng: 19.99407,\r\n}\r\n\r\nfunction Footer() {\r\n\r\n  const image = 'https://policplantblob.blob.core.windows.net/policplant-container/veliki logo verzija 1.0.png'\r\n\r\n  const screenType = useScreenType();\r\n\r\n  useEffect(() => {\r\n    WebFont.load({\r\n      google: {\r\n        families: ['Poppins', 'Chilanka']\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <hr></hr>\r\n            {/* <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                <GoogleMap location={location} zoomLevel={17} />  \r\n\r\n            </Row> */}\r\n            <Row>\r\n              <Col    style={{ }}>\r\n                <Image xs={6} src={image}\r\n                       \r\n                       fluid\r\n                       responsive='true'\r\n                       style={{width:'50%', height:'auto', objectFit:'fill'}}  >\r\n                       \r\n                </Image>\r\n                <div>\r\n                  Adresa: Prnjavorska 114, Budisava\r\n                </div>\r\n                <div>\r\n                  Telefon: 0652077257\r\n                </div>\r\n                <div>\r\n                  Email: <a href=\"mailto:rasadnikema@mail.com\">rasadnikema@mail.com</a> \r\n                </div>\r\n                <div style={{padding:'.5rem'}}>\r\n                    \r\n                    <a href='https://www.facebook.com/rasadnikema ' style={{margin:'0.5rem' }} title=\"Face\">\r\n                            <i className=\"fa-brands fa-facebook fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Twitter\">\r\n                            <i class=\"fa-brands fa-twitter\"></i>\r\n                    </a> */}\r\n                    <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                            <i className=\"fa-brands fa-instagram fa-2x\" style={{color:'green'}}></i>\r\n                    </a>\r\n                    {/* <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Messenger\">\r\n                            <i class=\"fa-brands fa-facebook-messenger\"></i>\r\n                    </a>\r\n                    <a href='https//:' style={{margin:'0.3rem'}} TITLE=\"Mail\">\r\n                            <i class=\"fa-regular fa-envelope\"></i>\r\n                    </a> */}\r\n                </div>\r\n              </Col>\r\n              <Col    style={{margin:'3rem', paddingTop:'2rem' }}>\r\n                <h4 style={{ fontSize: '1.2rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif', marginBottom:'1.2rem'}}><strong>Korisni linkovi</strong></h4>\r\n                <Link to=\"/porucivanje\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Kako poručiti putem sajta</h5>\r\n                </Link>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Izrada plana sadnje</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Najčešća pitanja</h5>\r\n                <h5 style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Način plaćanja</h5>\r\n                <Link to=\"/isporuka\" style={{ textDecoration: 'none' }}>\r\n                  <h5 className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>Isporuka</h5>\r\n                </Link>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; Rasadnik Ema</Col>\r\n                {/* <GoogleMap location={location} zoomLevel={17} />  */}\r\n\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.images[0]?.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            \r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, {useEffect} from 'react'\r\nimport { Card, Button } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { useParams } from 'react-router';\r\nimport WebFont from 'webfontloader';\r\nimport '../compontents/Product.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport { IKImage, IKVideo, IKContext, IKUpload } from 'imagekitio-react'\r\n\r\nfunction Product({product, catId}) {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch()\r\n    const screenType = useScreenType();\r\n\r\n    const addToCartHandler = () => {\r\n        \r\n        dispatch(addToCart(Number(product._id), Number(1)));\r\n        navigate(`/cart/?id=${product._id}&qty=${1}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        WebFont.load({\r\n          google: {\r\n            families: ['Poppins', 'Chilanka']\r\n          }\r\n        });\r\n    }, [])\r\n\r\n  return (\r\n    <Card className={`my-1 p-1 rounded ${classes[\"img-hover-zoomA\"]}`} border=\"success\" style={ screenType.isMobile ? {  height: '23.8rem' } : { width: '90%', height: '30rem' }}>\r\n        <Link to={`/products/${product._id}/${catId}`}> \r\n            <Card.Img src={product.images?.findLast( image => image.order === 0)?.image} loading='lazy' style={screenType.isMobile ? { width: '100%', height: '24vh', objectFit: 'cover' } : { width: '100%', height: '32vh', objectFit: 'cover' }}></Card.Img>\r\n            <Card.ImgOverlay style={{width: '100%', height: '10rem' }}>\r\n                {product?.countInStock < 1 && <Card.Title><div style={ screenType.isMobile ? { backgroundColor:\"red\",fontSize:'.8rem', color:\"white\", width:'50%', display: 'inline-flex', padding: '4px', marginBottom: '1em'} : { backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '4px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n            <Card.ImgOverlay className=\"card-img-overlay d-flex align-items-end flex-column bd-highlight mb-3\" style={ screenType.isMobile ? {width: '100%', height: '12rem' } : {width: '100%', height: '14rem' }}>\r\n                {product?.prodajno_mesto && \r\n                    <Card.Img src='https://policplantblob.blob.core.windows.net/policplant-banner/samo_na_projadnom_mestu1.png' \r\n                              loading='lazy'\r\n                              style={{width: '40%', height: '50%' }}>\r\n                    </Card.Img>}\r\n            </Card.ImgOverlay> \r\n        </Link> \r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link style={{ textDecoration: 'none' }} to={`/products/${product._id}`}> \r\n             <Card.Title as=\"h3\" >\r\n                 <div className='click' style={{ fontSize: '1rem', color:'#333333', fontFamily: '\"Poppins\", sans-serif'}}>{product?.name}</div>\r\n                 <div className='click' style={{ fontSize: '.9rem', fontStyle: 'italic', color:'#333333', fontFamily: 'Poppins'}}>{product?.botanicki_naziv}</div>\r\n             </Card.Title>\r\n             </Link> \r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h5\" style={{ color:'#83b735', fontSize: '1rem'}}>\r\n                    {product.price} RSD\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h6\"> */}\r\n                    {/* {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''}  */}\r\n                    {/* {product.countInStock > 0 ? '' : <strong style={{ color:'red'}}>Nema na stanju</strong>}  */}\r\n            {/* </Card.Text> */}\r\n            <Button     variant=\"primary\" \r\n                        disabled={product.countInStock < 1} \r\n                        type='button'\r\n                        style={screenType.isMobile ? {background:'#83b735', width:'80%', height:'35%', border:'1px solid #83b735'} : {background:'#83b735', width:'70%', height:'36%', border:'1px solid #83b735'}}\r\n                        onClick= {addToCartHandler}>\r\n                                Dodaj u Korpu\r\n            </Button>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction Kategorija({category}) {\r\n\r\n  const screenType = useScreenType();\r\n  return (\r\n    <Card className={`my-1 p-1   ${classes[\"img/-hover-zoom\"]} h-110 `} border=\"dark\"  style={ screenType.isMobile ? { width: '100%', height: '19rem' } : { width: '100%', height: '22rem' }}>\r\n        <Card.Header as=\"h7\"></Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image} loading='lazy' style={screenType.isMobile ? { width: '100%', height: '24vh', objectFit: 'cover' } : { width: '100%', height: '26vh', objectFit: 'cover' }}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\", textDecoration: 'none'}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ display: 'inline-block', textAlign: \"center\", fontSize: '1.2rem', color:'#333333'}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            {/* <Card.Text as=\"h6\" style={{ color:'black', fontSize: '1.1rem'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text> */}\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    \r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        placeholder='Izaberi...'\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import React, { useEffect, useState, useMemo, useRef, useCallback } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories, categories } = cat\r\n    const prod = useSelector(state => state.productList)\r\n    const { products } = prod\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    const keyword = localStorage.getItem('keyword')\r\n\r\n    \r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga,\r\n            keyword: keyword\r\n        }\r\n        \r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga, keyword]);\r\n        \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 500);\r\n    const initialRender = useRef(true)\r\n\r\n    useEffect(()=>{\r\n       \r\n        if(!initialRender.current || (boja.length > 0 || high.length > 0 || tip.length > 0 || kategorija.length > 0 || pozicija.length > 0 || pretraga || keyword)){\r\n            dispatch(listFilterProducts(debouncedSearchTerm))\r\n            initialRender.current =false\r\n        }\r\n       \r\n        onSearch(debouncedSearchTerm)\r\n        \r\n         \r\n    }, [dispatch, debouncedSearchTerm]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container fluid style={{display: 'flex', padding: '0.2rem'}}>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex', textAlign:'left' , justifyContent:'left' , width:'100%' }}>\r\n                \r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <h6><strong style={{color:'#333333'}}>Kategorija biljke</strong></h6>\r\n                        <CustomSelect  values={ categories?.slice().sort((a, b) =>{return a.order - b.order}).map(col => (\r\n                            { value: col.name, label: col.name}\r\n                            ))} onAction={setKategorija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n\r\n                    <h6><strong style={{color:'#333333'}}>Tip biljke</strong></h6>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setTip}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                \r\n                    <h6><strong style={{color:'#333333'}}>Pozicija za sadnju</strong></h6>\r\n                        <CustomSelect values={ allcategories?.mesto_sadnje?.map(col => (\r\n                            { value: col, label: col}\r\n                            ))} onAction={setPozicija}>\r\n\r\n                        </CustomSelect>\r\n                </Row>\r\n\r\n                <Row md={12} xl={12} style={{}}>\r\n                    \r\n                    \r\n                    <h6><strong style={{color:'#333333'}}>Boja cveta</strong></h6>\r\n                        <Form.Control \r\n                            type='search'\r\n                            name='boja'\r\n                            inline ='true'\r\n                            placeholder='Unesite boju...'\r\n                            onChange={(e) => setBoja(e.target.value) }>\r\n                        </Form.Control>\r\n                   \r\n                </Row>\r\n                {/* style={{ display: 'flex', padding:'0.5rem', width: '100%'}} */}\r\n                {/* <Row md={12} xl={12} style={{ }}> \r\n                        \r\n                        <h6><strong style={{color:'#333333'}}>Pretraga Proizvoda:</strong></h6>\r\n                            <Form.Control \r\n                                type='search'\r\n                                name='pretraga'\r\n                                inline ='true'\r\n                                placeholder='Trazeni proizvod...'\r\n                                onChange={(e) => setPretraga(e.target.value) }>\r\n                            </Form.Control>     \r\n                </Row> */}\r\n\r\n                {/* <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row> */}\r\n            \r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     variant=\"success\"\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn style={{background:'green', border:'1px solid green'}} onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle style={{color:'green'}}>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import Carousel from 'react-bootstrap/Carousel';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction CarouselFadeExample() {\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n  return (\r\n    <Carousel fade>\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/slika1.jpg\"\r\n            alt=\"First slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>First slide label</h3>\r\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n\r\n      <Carousel.Item>\r\n        <div>\r\n          <img\r\n            className=\"d-block w-100\" \r\n            src=\"https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg\"\r\n            alt=\"Second slide\"\r\n          />\r\n        </div>\r\n        <Carousel.Caption>\r\n          <h3>Second slide label</h3>\r\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n        </Carousel.Caption>\r\n      </Carousel.Item>\r\n    </Carousel>\r\n  );\r\n}\r\n\r\nexport default CarouselFadeExample;","import Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Image from \"react-bootstrap/Image\";\r\nimport ImageButton from 'react-image-button';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 2,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n      slidesToSlide: 2 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n      slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n  };\r\n\r\nfunction MultiCaroseul(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const image1 = <Image\r\n            className='img-fluid shadow-5'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/biljke za senku baner_800x600.jpg\"\r\n            alt=\"First slide\"\r\n            rounded\r\n           \r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image2 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/trajnice baner_800x600.jpg\"\r\n            alt=\"Second slide\"\r\n            rounded\r\n            style={{ height:'50%'}}\r\n            />\r\n\r\n    const image3 = <Image\r\n            className='img-fluid shadow-4'\r\n            src= \"https://policplantblob.blob.core.windows.net/policplant-banner/ukrasno zbunje baner_800x600.jpg\"\r\n            alt=\"Third slide\"\r\n            rounded\r\n            style={{ height:'50%'}}\r\n            />\r\n    return (\r\n        <Carousel\r\n            swipeable={false}\r\n            draggable={false}\r\n            showDots={true}\r\n            responsive={responsive}\r\n            ssr={true} // means to render carousel on server-side.\r\n            infinite={true}\r\n            //autoPlay={this.props.deviceType !== \"mobile\" ? true : false}\r\n            autoPlaySpeed={1000}\r\n            keyBoardControl={true}\r\n            customTransition=\"all .5\"\r\n            transitionDuration={500}\r\n            containerClass=\"carousel-container\"\r\n            removeArrowOnDeviceType={[\"tablet\"]} //, \"mobile\"]}\r\n            //deviceType={this.props.deviceType}\r\n            dotListClass=\"custom-dot-list-style\"\r\n            itemClass=\"carousel-item-padding-40-px\"\r\n            >\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image1}\r\n                             //zoomOnHover={0}\r\n                             buttonPosition=\"bottom\"\r\n                             alwaysShowButton={true} >\r\n                    <button onClick={() => { navigate('/categories/37')}} primary=\"true\"  className=\"btn success\" style={{ border: '2px solid black'}} > Biljke za senku </button>\r\n                </ImageButton>\r\n            </div>\r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image2}\r\n                             //zoomOnHover={0}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button onClick={() => { navigate('/categories/28')}} primary=\"true\" className=\"btn success\" style={{ border: '2px solid black'}} > Trajnice pogledajte </button>\r\n                </ImageButton>\r\n            </div> \r\n            <div style={{padding:'1rem'}}>\r\n                <ImageButton img={image3}\r\n                             alwaysShowButton={true}\r\n                             buttonPosition=\"bottom\" >\r\n                    <button onClick={() => { navigate('/categories/31')}} primary=\"true\" className=\"btn success\" style={{ border: '2px solid black'}} > Ukrasno zbunje pogledajte </button>\r\n                </ImageButton>\r\n            </div> \r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default MultiCaroseul\r\n","import React, { useEffect , useState, useRef, useMemo} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ReactCarusel from '../compontents/ReactCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\nimport CarouselFadeExample from '../compontents/StaticCarusel'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { sliderClasses } from '@mui/material'\r\nimport { SimpleCarouselSlider } from 'react-simple-carousel-image-slider'\r\nimport Carousel from 'flat-carousel';\r\nimport MultiCaroseul from '../compontents/MultiCaroseul'\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error:  categoryError, loading: categoryLoading, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error:  productError , loading: productLoading , products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(true);\r\n  const isFirst = useRef(true);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n         \r\n  }, [dispatch]);\r\n\r\n  useEffect(()=>{\r\n    console.log('Ulazka:')\r\n    if(!customerLogo.current){\r\n      if(products?.length < 60 ){\r\n        setToggle(false)\r\n      }else{\r\n        setToggle(true)\r\n      }\r\n      \r\n    }    \r\n    customerLogo.current = false \r\n  }, [products]);\r\n  \r\n  const searchFunc = useMemo(() => {\r\n    const setSearchValue = (value) => {\r\n     \r\n      if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== '' || !(value.keyword === '' || value.keyword === null)){\r\n       setToggle(false)\r\n       setCarucel(false)\r\n       \r\n     } else{\r\n       setToggle(true)\r\n       setCarucel(true)\r\n      \r\n     }\r\n     \r\n   }\r\n   return setSearchValue\r\n  }, [])\r\n\r\n//  const setSearchValue = (value) => {\r\n//     //setVal(value)\r\n//     if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== '' || value.keyword !== ''){\r\n//      setToggle(false)\r\n//      setCarucel(false)\r\n//    } else{\r\n//      setToggle(true)\r\n//      setCarucel(true)\r\n//    }\r\n//    console.log('Mozda ovo', value)\r\n//  }\r\n \r\n  const orderCategories = categories?.slice().sort((a, b) =>{return a.order - b.order})\r\n  \r\n\r\n  return (\r\n    <div style={ screenType.isMobile ? { backgroundColor: '#FFF' , margin:0} : { }}>\r\n        {/* { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}   */}\r\n        {/* { carucel && <ReactCarusel ></ReactCarusel>} */}\r\n        {/* { carucel && <CarouselFadeExample></CarouselFadeExample>}  */}\r\n        {/* { carucel && <SimpleCarouselSlider images={slike} autoplay={false} width= \"100%\" height=\"450px\"/>} */}\r\n        {/* {  carucel && <DragCoruseal></DragCoruseal>} */}\r\n        { carucel && <MultiCaroseul></MultiCaroseul>}\r\n\r\n        <div style={{ textAlign:'center', margin:'1rem'}}><h1 style={{color:'red', alignItems:'center', fontSize:'2.5rem'}}> <strong>{ 'Sajt je u Pripremi!'}</strong></h1></div>\r\n        <h1 style={{color:'#333333', fontSize:'1.2rem'}}> <strong>{carucel ? 'Detaljna pretraga:' : 'Filtrirani Proizvodi:'}</strong></h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ searchFunc}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid > \r\n                    <Row>\r\n                    { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <div style={{ border:'.4rem solid #83B735', paddingBottom:'1rem', paddingLeft:'1rem'}}>\r\n                            <Search onSearch={ searchFunc}></Search> \r\n                          </div>\r\n                      </Col> }\r\n\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle  ? ( \r\n                          screenType.isMobile ? \r\n                          \r\n                        (<Row  >\r\n                          {orderCategories?.map(category => (\r\n                          <Col  key={category._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex my-1 p-1\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)\r\n                        : \r\n                        (\r\n                          <Row  className={'gy-2'}>\r\n                          {orderCategories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={4} className=\"d-flex \">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                        )) \r\n                        :\r\n                        ( screenType.isMobile ? <Row>\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row> :\r\n                        <Row>\r\n                        {products?.map(product => (\r\n                        <Col key={product._id} sm={6} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                            <Product product={product} />\r\n                        </Col>\r\n                          ))} \r\n                          {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) \r\n                        }\r\n                      </Col>\r\n                      {/* { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> } */}\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport DOMPurify from 'dompurify';\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: 'smooth'\r\n      })\r\n    dispatch(listProducts(id))\r\n        \r\n }, [dispatch, id]);\r\n\r\n const htmlString = {__html: DOMPurify.sanitize(catProducts?.find( cat => cat._id?.toString() === id)?.description)}\r\n \r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb style={{ paddingTop:'2rem'}}>\r\n          <Breadcrumb.Item href=\"/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id?.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success  my-3'> Nazad</Link>\r\n        <h1 style={{color:'#333333'}}>{ catProducts?.find( cat => cat._id?.toString() === id)?.name}</h1>\r\n        \r\n        {/* <p>{ catProducts?.find( cat => cat._id?.toString() === id)?.description}</p> */}\r\n        <p dangerouslySetInnerHTML={htmlString}></p>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.length === 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product?.category?.map(x => x._id.toString())?.includes(id))?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} catId={id} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { reviewCreateActions } from './review-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createReview = (productId, review) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(\r\n                `/api/products/${productId}/reviews/`,\r\n                review,\r\n                config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(reviewCreateActions.reviewCreateRequest ())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(reviewCreateActions.reviewCreateSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                reviewCreateActions.reviewCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form, Container, ListGroupItem, InputGroup} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport WebFont from 'webfontloader';\r\nimport XMLToReact from 'xml-to-react';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport ImageZoom from \"react-image-zooom\";\r\nimport '../../node_modules/react-image-gallery/styles/css/image-gallery.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ImageGallery from 'react-image-gallery';\r\nimport Ikonice from '../compontents/UI/Ikonice';\r\nimport {  Plus, Dash } from 'react-bootstrap-icons';\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id, catId } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n  const screenType = useScreenType();\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const [images, setImages] = useState(null)\r\n\r\n  useEffect(()=>{\r\n        WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Chilanka']\r\n            }\r\n        });\r\n            dispatch(productDetails(id))\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      \r\n      //navigate(`/cart/?id=${id}&qty=${qty}`)\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n  }\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    if(product?.images){\r\n        const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n        const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n            return {\r\n                image: image?.image,\r\n                id: image?.id\r\n            }\r\n        })\r\n\r\n        const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n        if(prvaSlika){\r\n            targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id})\r\n        }\r\n\r\n        const imgs = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n            return {\r\n                original: image.image,\r\n                thumbnail: image.image\r\n            }\r\n        })\r\n        setImages(imgs)\r\n    }\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [product?.images])  \r\n\r\n const htmlString = {__html: DOMPurify.sanitize(product?.description)}\r\n\r\n  const incrementHandle = (e) => {\r\n    \r\n        setQty(e => e + 1)\r\n  }\r\n\r\n  const decrementHandle = (e) => {\r\n        if(qty > 1){\r\n            \r\n            setQty(e => e - 1)\r\n        }\r\n        \r\n  }\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb style={{ paddingTop:'1.8rem', textDecoration: 'none'}}>\r\n          <Breadcrumb.Item href=\"/#/\"><i className=\"fa fa-home\" style={{color:'green'}}></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  style={{ textDecoration:'none !important', textDecorationLine: 'none !important'}} href={`#/categories/${catId}`}>\r\n                \r\n            <font style={{color:'green' , textDecoration: 'none', textDecorationLine: 'none'}}>{product?.category?.find(x => x._id.toString() === catId)?.name}</font> \r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            {product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-success my-3'> Nazad</Link>\r\n        {userInfo && <Link to={`/admin/product/${id}/edit`} className='btn btn-success my-3' style={{ marginLeft:'3rem'}}> Edit Biljke</Link>}\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={5} xs={12} >\r\n                                    <Row>\r\n                                    \r\n                                    {/* {image && <ImageZoom src={image} alt={product.name} zoom=\"150\" fluid>\r\n\r\n                                    </ImageZoom>} */}\r\n                                     {images && <ImageGallery items={images}\r\n                                     \r\n                                     lazyLoad={true}\r\n                                      />}\r\n                                    \r\n                                    </Row>\r\n                                    {/* <Row className=\"justify-content-md-left\">\r\n                                    {product?.images?.map(img => (\r\n                                        <Col key={img.id} sm={4} md={4} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                                            <Image src={img.image} alt={img.id} fluid className=\"square border border-3\">\r\n\r\n                                            </Image>\r\n                                        </Col>\r\n                                    ))}\r\n                                    </Row> */}\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={8} xl={7} xs={12}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2><strong style={{ color:'#333333', fontSize:'2.6rem', fontFamily: 'Oswald, sans-serif'}}>{product?.name}</strong> <i style={{fontSize:'1.4rem' , color:'#333333'}}>{product?.botanicki_naziv}</i></h2> \r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product?.price} rsd</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product?.category?.map(x => x.name).join(', ')}\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product?.color && <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product?.color}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {/* {product.mesto_sadnje && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {product.mesto_sadnje}\r\n                                        </ListGroup.Item>} */}\r\n                                        {product?.mesto_sadnje?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Položaj:</strong> {Array.isArray(product?.mesto_sadnje) ? product?.mesto_sadnje?.join(', ') : product?.mesto_sadnje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.place_of_planting && <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product?.place_of_planting}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.vre_cve?.length > 0 && <ListGroup.Item>\r\n                                            <strong>Vreme cvetanja:</strong> {Array.isArray(product?.vre_cve) ? product?.vre_cve?.join(', ') : product?.vre_cve}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.orezivanje && <ListGroup.Item>\r\n                                            <strong>Orezivanje:</strong> {product?.orezivanje}\r\n                                        </ListGroup.Item>}\r\n\r\n                                        {product?.high && <ListGroup.Item>\r\n                                            <strong>Visina biljke:</strong> {product?.high}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.type_of_plant && <ListGroup.Item>\r\n                                            <strong>Tip biljke:</strong> {product?.type_of_plant}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.privlaci_insekte && <ListGroup.Item>\r\n                                            <strong> Medonosna:</strong> {product?.privlaci_insekte}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.brzina_rasta && <ListGroup.Item>\r\n                                            <strong> Brzina rasta:</strong> {product?.brzina_rasta}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.prezimljava && <ListGroup.Item>\r\n                                            <strong> Prezimljava:</strong> {product?.prezimljava}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.sirina_biljke && <ListGroup.Item>\r\n                                            <strong> Širina:</strong> {product?.sirina_biljke}\r\n                                        </ListGroup.Item>}\r\n                                        {product?.velicina_slanja && <ListGroup.Item>\r\n                                            <strong> Isporuka:</strong> {product?.velicina_slanja}\r\n                                        </ListGroup.Item>}\r\n                                        <ListGroup.Item style={{paddingBottom:'2rem'}}>\r\n                                                 <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n                                                    <br />\r\n                                                    <Card>\r\n                                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                                        <ListGroup variant='flush' >\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Cena:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <strong>{product.price} rsd</strong>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n                                                            {/* <ListGroup.Item>\r\n                                                                <Row>\r\n                                                                    <Col>\r\n                                                                        Status:\r\n                                                                    </Col>\r\n                                                                    <Col>\r\n                                                                        <div style={{ \r\n                                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                                        fontSize: 20\r\n                                                                                    }}>\r\n                                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                                        </div>\r\n                                                                    </Col>\r\n                                                                </Row>\r\n                                                            </ListGroup.Item> */}\r\n\r\n                                                            {/* {product?.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col xs='auto' className='my-1'>\r\n                                                                            <Form.Control \r\n                                                                                as='select'\r\n                                                                                value={qty} \r\n                                                                                onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                                    {\r\n                                                                                        [...Array(product?.countInStock).keys()].map((x) => (\r\n                                                                                            <option key={x +1} value={x +1}>\r\n                                                                                                {x+1}\r\n                                                                                            </option>\r\n                                                                                        ))\r\n                                                                                    }\r\n\r\n                                                                            </Form.Control>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                </ListGroup.Item>\r\n                                                            )} */}\r\n\r\n                                                            {product?.countInStock > 0 && (\r\n                                                                <ListGroup.Item>\r\n                                                                   { screenType.isMobile ? <Row>\r\n                                                                        <Col xs={4}>Količina:</Col>\r\n                                                                        <Col xs={8} className=\"justify-content-md-right\">\r\n                                                                            <Row  xs={12}>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <Button variant=\"light\" \r\n                                                                                            onClick={decrementHandle}> \r\n                                                                                        <Dash color=\"red\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <InputGroup >\r\n                                                                                        <Form.Control \r\n                                                                                            onChange={(e) => setQty(Number(e.target.value))}\r\n                                                                                            value={qty} \r\n                                                                                            sm={2}\r\n                                                                                        >\r\n                                                                                                \r\n\r\n                                                                                        </Form.Control>\r\n                                                                                    </InputGroup>\r\n                                                                                </Col>\r\n                                                                                <Col xs={4}>\r\n                                                                                    <Button variant=\"light\"\r\n                                                                                            onClick={incrementHandle}> \r\n                                                                                        <Plus color=\"green\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row> \r\n                                                                    :\r\n                                                                    <Row>\r\n                                                                        <Col>Količina:</Col>\r\n                                                                        <Col className=\"justify-content-md-right\">\r\n                                                                            <Row  sm={12}>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <Button variant=\"light\" \r\n                                                                                            onClick={decrementHandle}> \r\n                                                                                        <Dash color=\"red\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <InputGroup >\r\n                                                                                        <Form.Control \r\n                                                                                            onChange={(e) => setQty(Number(e.target.value))}\r\n                                                                                            value={qty} \r\n                                                                                            sm={2}\r\n                                                                                        >\r\n                                                                                                \r\n\r\n                                                                                        </Form.Control>\r\n                                                                                    </InputGroup>\r\n                                                                                </Col>\r\n                                                                                <Col sm={4}>\r\n                                                                                    <Button variant=\"light\"\r\n                                                                                            onClick={incrementHandle}> \r\n                                                                                        <Plus color=\"green\" size={16} />\r\n                                                                                    </Button>\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                        </Col>\r\n                                                                    </Row>}  \r\n                                                                </ListGroup.Item>\r\n                                                            )} \r\n\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                   \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1} \r\n                                                                    type='button'\r\n                                                                    onClick= {addToCartHandler}>\r\n                                                                        Dodaj u Korpu\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                            <ListGroup.Item>\r\n                                                                <Button \r\n                                                                    style={{ background :'#83b735', border:'1px solid #83b735'}}\r\n                                                                    className='btn btn-block' \r\n                                                                    disabled={product?.countInStock < 1}\r\n                                                                    onClick={() => window.open('#/cart',\"_self\")}>\r\n                                                                        Poruči\r\n                                                                </Button>\r\n                                                            </ListGroup.Item>\r\n                                                        </ListGroup>\r\n                                                    </Card>\r\n\r\n                                                </Col>\r\n                                               \r\n                                        </ListGroup.Item>\r\n                                        {/* <ListGroupItem xs={12} style={{paddingTop:'2rem'}}>\r\n                                            {product && <Ikonice product={product}></Ikonice>}\r\n                                        </ListGroupItem> */}\r\n                                    </ListGroup>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <div style={{margin:'0.5rem'}}>\r\n                                        Share:\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Face\">\r\n                                                <i className=\"fa-brands fa-facebook\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Twitter\">\r\n                                                <i className=\"fa-brands fa-twitter\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Instagram\">\r\n                                                <i className=\"fa-brands fa-instagram\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Messenger\">\r\n                                                <i className=\"fa-brands fa-facebook-messenger\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                        <a href='https//:' style={{margin:'0.3rem'}} title=\"Mail\">\r\n                                                <i className=\"fa-regular fa-envelope\" style={{color:'green'}}></i>\r\n                                        </a>\r\n                                    </div>\r\n                                    \r\n                                </Col>\r\n                                {/* <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} rsd</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col> */}\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={12} lg={12} xl={12} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                {/* <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup> */}\r\n                                {/* {product?.description && description} */}\r\n                                {/* <Container child={ doc}/> \r\n                                {doc} */}\r\n                                <p dangerouslySetInnerHTML={htmlString}></p>\r\n                                \r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  InputGroup\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\nimport { color } from \"@mui/system\";\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport {  Plus, Dash } from 'react-bootstrap-icons';\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const [color, setColor] = useState(true)\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n  //const [qty, setQty] = useState(1);\r\n\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"pouzece\");\r\n\r\n  const dispatch = useDispatch();\r\n  const screenType = useScreenType();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  \r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      });\r\n    }\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n    if(cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0) < 1000){\r\n      setColor(false)\r\n    }else{\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n    }\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={8} xs={12}>\r\n        <h1 style={{color:'green'}}>Korpa</h1>\r\n        {cartItems?.length === 0 ? (\r\n          <Message variant=\"success\">\r\n            <strong>Vasa korpa je prazna</strong> <Link to=\"/\" style={{color:'green'}}>Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={1} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={4} md={3} lg={4} xl={4} xs={3}>\r\n                    <Link style={{ textDecoration:'none'}} to={`/products/${item.id}`}><strong><h4 style={{color:'green', fontSize:'1.2rem', textDecoration:'none'}}>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={3}><strong style={ screenType.isMobile ? {fontSize:'.8rem'} : {fontSize:'1rem'}}>{item.price.toFixed(2)} rsd</strong></Col>\r\n                  <Col sm={4} md={6} lg={4} xl={1} xs={2}>\r\n                    {/* <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control> */}\r\n                    <Form.Control\r\n                      disabled\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                     \r\n                      \r\n                    </Form.Control>\r\n                    {/* <Col className=\"justify-content-md-right\">\r\n                      <Row  sm={12}>\r\n                          <Col sm={4}>\r\n                              <Button variant=\"light\" \r\n                                      onClick={decrementHandle}> \r\n                                  <Dash color=\"red\" size={16} />\r\n                              </Button>\r\n                          </Col>\r\n                          <Col sm={4}>\r\n                              <InputGroup >\r\n                                  <Form.Control \r\n                                      onChange={(e) => setQty(Number(e.target.value))}\r\n                                      value={qty} \r\n                                      sm={2}\r\n                                  >\r\n                                          \r\n\r\n                                  </Form.Control>\r\n                              </InputGroup>\r\n                          </Col>\r\n                          <Col sm={4}>\r\n                              <Button variant=\"light\"\r\n                                      onClick={incrementHandle}> \r\n                                  <Plus color=\"green\" size={16} />\r\n                              </Button>\r\n                          </Col>\r\n                      </Row>\r\n                    </Col> */}\r\n                  </Col>\r\n                  <Col sm={4}  md={1} lg={2} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n        <Card border=\"success\"style={{margin:'1rem'}}>\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.filter(x => x.qty > 0).map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio color=\"success\"/>} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio color=\"success\"/>} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4 style={{color:'black'}}>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio color=\"success\"/>} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio color=\"success\"/>} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block btn-success'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col style={{ padding:'1.2rem'}} md={4}>\r\n          <Button type='button'\r\n                className='btn-block btn-success'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <span style={{ border: color ? 'solid 3px green' : 'solid 3px red' , width:'80%', position:'center', padding: '10px', textAlign:'center', margin: 'auto', fontSize:'1.1rem'}}>\r\n        Minimalna vrednost porudžbine ne može biti manja od 1.000rsd. Vaš trenutni ukupni iznos porudžbine je {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} rsd</span>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link >\r\n                            <strong style={{color:'green'}}>Login</strong>  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                        <strong style={{color:'green'}}>Adresa</strong>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        <strong style={{color:'green'}}>Narudzba</strong>\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider', textDocorationColor:'green' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab style={{color:'green'}} label=\"Podaci Kupca\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" disabled/>\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z ]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: \"Potebno je uneti Vas email\",  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"Mail koji ste uneli nije validan.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            \r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\",{\r\n                                required:\"Unesite broj Vaseg mobilnog telefona\",\r\n                                valueAsNumber: {\r\n                                    value: true,\r\n                                    message: \"Unesite ispravan broj mobilnog telefona\"},\r\n                                message:\"Unesite Vas broj mobilnog telefona.\"\r\n                            })}\r\n                            \r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary' className='m-2 py-2 btn-success'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1 style={{color:'green'}}>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.removeItem('cartItems')\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  0.00 //(itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = 0.00 //Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n           \r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2 style={{color:'green'}}>Narucene biljke</h2>\r\n                        { cart?.cartItems?.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems?.filter(x => x.qty > 0)?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link as='div' style={{color:'green'}} to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price.toFixed(2)} rsd = {(item.qty *item.price).toFixed(2)} rsd\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"success\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2 style={{color:'green'}}>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>0 din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{itemsPrice} rsd</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block btn-success'\r\n                                         disabled={cart?.cartItems?.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n           \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.user_name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod,config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img, itms) => {\r\n\r\n            const items = itms\r\n            const files = img //e.target.files\r\n            const formData = new FormData()\r\n            if(items){\r\n                formData.append('items', JSON.stringify(items))\r\n            }\r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n           \r\n            \r\n            formData.append('product_id', product_id)\r\n            \r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            //const imageData = await uploadData(100, images) // ovo obrisati\r\n\r\n\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, images, items)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\nexport const changeStanjeValue = (id, value) => {\r\n    return async (dispatch) => {\r\n\r\n        const formData = new FormData()\r\n        formData.append('product_id', id)\r\n        formData.append('value', value)\r\n        const { data } = await axios.post('/api/products/changestate/', formData)\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState,useRef,  useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct,changeStanjeValue, productReset } from '../store/createProduct-actions'\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBInput } from 'mdb-react-ui-kit'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [val, setVal] = useState(null)\r\n    const order_set = useRef(0)\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n         window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n    useEffect(() => {\r\n\r\n        setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n\r\n    }, [products])\r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this product?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const changingValueHandler = async (id, value) => {\r\n        dispatch(changeStanjeValue(id, value))\r\n    }\r\n\r\n    const values = products?.slice().sort((a,b) => a._id - b._id)\r\n\r\n    const filter = (sort) => {\r\n        \r\n        switch(sort) {\r\n            case 'id':\r\n                \r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a._id - b._id))\r\n                    order_set.current = !order_set.current\r\n                }\r\n              \r\n              break;\r\n            case 'name':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.name - b.name))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.name - b.name))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                \r\n              break;\r\n            case 'cena':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.price - b.price))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.price - b.price))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                break;\r\n            case 'stanje':\r\n                if(order_set.current){\r\n                    setVal(products?.slice().sort((a,b) => a.countInStock - b.countInStock))\r\n                    order_set.current = !order_set.current\r\n                }else{\r\n                    \r\n                    setVal(products?.slice().reverse((a,b) => a.countInStock - b.countInStock))\r\n                    order_set.current = !order_set.current\r\n                }\r\n                break;\r\n                \r\n            default:\r\n                setVal(products?.slice().sort((a,b) => a._id - b._id))\r\n          }\r\n\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col >\r\n                <h1 style={{color:'green'}}>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='btn-success my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>RB</th>\r\n                                    <th onClick={() => filter('id')}>ID</th>\r\n                                    <th onClick={() => filter('name')}>Name</th>\r\n                                    <th onClick={() => filter('cena')}>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Novo</th>\r\n                                    <th>Popust</th>\r\n                                    <th>Boja</th>\r\n                                    <th onClick={() => filter('stanje')}>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {(val ? val : values)?.map((product, index) => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td style={{width:'4rem'}}>{index + 1}</td>\r\n                                        <td style={{width:'4rem'}}>{product._id}</td>\r\n                                        <td style={{width:'15rem'}}><strong>{product.name}</strong></td>\r\n                                        <td style={{width:'5rem'}}>{product.price} din</td>\r\n                                        <td style={{width:'20rem'}}>{product.category.map(x => x.name).join(', ')}</td>\r\n                                        <td style={{width:'4rem'}}>{product.novo ?? product.novo ? 'Yes' : 'No'}</td>\r\n                                        <td style={{width:'4rem'}}>{product.popust ?? product.popust ? product.popust : 'No'}</td>\r\n                                        <td style={{width:'20rem'}}>{product.color}</td>\r\n                                        <td style={{ width:'6rem'}}>\r\n                                            {\r\n                                                <MDBInput  id='form1' type='text' defaultValue={product.countInStock} onChange={(e ) => changingValueHandler(product._id, e.target.value)} />\r\n                                                \r\n                                            }</td>\r\n                                        <td style={{width:'5rem'}}><Link to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </Link></td>\r\n                                        <td style={{width:'5rem'}}>\r\n                                                <Button  className='btn-sm' variant=\"danger\" onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>\r\n      Rasadnik Ema je registrovano poljoprivredno gazdinstvo koje se bavi proizvodnjom i prodajom ukrasnih baštenskih sadnica. U ponudi imamo sadnice perena, \r\n      ukrasnog žbunja, trava, seduma, čuvarkuća, bobičastog voća, četinara i lišćara. Verujemo da ćete u našoj ponudi naći biljke koje će se savršeno uklopiti u Vaš vrt.<br></br><br></br> \r\n\r\n      Dobro došli! \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>U izgradnji je stranica sajta.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    \r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                \r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                \r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product, images, items) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product)\r\n            return data;\r\n        }\r\n\r\n        const uploadData = async (product_id, images, itms) => {\r\n\r\n            const files = images //e.target.filesconsole.log('form fils:', files)\r\n            const items = itms?.map((item, index) => {\r\n                return {...item, order: index}\r\n            })\r\n            const formData = new FormData()\r\n            \r\n            // if(images[0] instanceof File ){\r\n                \r\n            //     const arr = Array.from(files)\r\n            //     arr?.forEach(x => \r\n            //         formData.append('images', x)\r\n            //     )\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }else{\r\n                \r\n            //     const arr = Array.from(files?.map(x => x.id))\r\n                \r\n            //     formData.append('images', arr)\r\n            //     //formData.append('image', files)\r\n            //     formData.append('product_id', product_id)\r\n            // }\r\n            console.log('Items',items)\r\n            console.log('Images', files)\r\n            \r\n            \r\n            if(files){\r\n                const arr = Array.from(files)\r\n                arr?.forEach(x => \r\n                    formData.append('images', x)\r\n                )\r\n            }\r\n            \r\n            formData.append('product_id', product_id)\r\n            formData.append('items', JSON.stringify(items))\r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            const imageData = await uploadData(product._id, images, items)\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\n\r\nconst imgWithClick = { cursor: \"pointer\" };\r\n\r\nconst Photo = ({ index, onClick, photo, margin, direction, top, left }) => {\r\n  const imgStyle = { margin: margin };\r\n  if (direction === \"column\") {\r\n    imgStyle.position = \"absolute\";\r\n    imgStyle.left = left;\r\n    imgStyle.top = top;\r\n  }\r\n\r\n  const handleClick = event => {\r\n    onClick(event, { photo, index });\r\n  };\r\n\r\n  return (\r\n    \r\n    <img\r\n      style={onClick ? { ...imgStyle, ...imgWithClick } : imgStyle}\r\n      {...photo}\r\n      onClick={onClick ? handleClick : null}\r\n      onDoubleClick={()=> console.log('Double click')}\r\n      alt=\"img\"/>\r\n   \r\n  );\r\n};\r\n\r\nexport default Photo;\r\n","import React, { useState, useEffect, useRef, useMemo  } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\ntoast.configure()\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState([])\r\n    const [items, setItems] = useState([]);\r\n    const [flick, setFlick] = useState(false);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    const prod = useSelector(state => state.product)\r\n    const { product: prodProduct,  success : prodSuccess} = prod\r\n\r\n    const ukupno = useRef([])\r\n\r\n    const SortablePhoto = SortableElement(item => <Photo {...item} />);\r\n    const SortableGallery = SortableContainer(({ items }) => (\r\n            <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n        \r\n        ));\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n        const newItems = items?.map(image => {\r\n            return {\r\n                src:image.src,\r\n                name: image.name,\r\n                width:1,\r\n                height:1\r\n            }\r\n        })\r\n        \r\n        setItems([...newItems, ...photos])\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        \r\n        if(success){\r\n            const prvaSlika =  Array.from(product?.images).findLast(x => x.order === 0)\r\n           \r\n            const targetFilesObject= Array.from([...product?.images])?.sort((x, y) => x.order - y.order).map(image => {\r\n                return {\r\n                    name: image.image_name,\r\n                    image: image?.image,\r\n                    id: image?.id\r\n                }\r\n            })\r\n\r\n            \r\n            const targetFilesObjectWithoutLast = targetFilesObject?.filter(x => x?.id !== prvaSlika?.id)\r\n            if(prvaSlika){\r\n                targetFilesObjectWithoutLast.unshift({image: prvaSlika?.image, id: prvaSlika?.id, name: prvaSlika?.image_name})\r\n            }\r\n\r\n            const photos = [...new Set(targetFilesObjectWithoutLast)]?.map(image => {\r\n                return {\r\n                    name: image.name,\r\n                    src:image.image,\r\n                    id:image.id,\r\n                    width:1,\r\n                    height:1\r\n                }\r\n            })\r\n            \r\n            setImage(null)\r\n            setItems(photos) \r\n        }   \r\n    }, [success,product?.name, product?.images])\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(updateProductDetails(id))\r\n\r\n        \r\n        if(success){\r\n            \r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setHesteg(product.hesteg)\r\n            setPrice(product.price)\r\n            setImage(product.images)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setMestoSadnje(product.mesto_sadnje)\r\n            setCategory(product.category?.map(x => x.name))\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n            setVremeCvetanja(product.vre_cve)\r\n            setOrezivanje(product.orezivanje)\r\n            setPrivlaciInsekte(product.privlaci_insekte)\r\n            setBrzinaRasta(product.brzina_rasta)\r\n            setPrezimljava(product.prezimljava)\r\n            setBotanickiNaziv(product.botanicki_naziv)\r\n            setVelicinaSlanja(product.velicina_slanja)\r\n            setSirinaBiljke(product.sirina_biljke)\r\n            setProdajnoMesto(product.prodajno_mesto)\r\n            setNovo(product.novo)\r\n            setPopust(product.popust)\r\n        }  \r\n        \r\n    }, [dispatch, navigate, product?.name, success, prodSuccess])\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno editovanje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        \r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust\r\n        }, images, items))\r\n        setItems(ukupno.current)\r\n        // setImage(ukupno.current.map((index,item) => {\r\n        //     return {\r\n        //         id:item.id,\r\n        //         image:item.src,\r\n        //         order: index,\r\n        //         product:id\r\n        //     }\r\n        // }))\r\n        window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: \"smooth\"\r\n          })\r\n        notify()\r\n        setImage([])\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_mesto_sadnje = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data_mesto_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n  \r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex},e) => {\r\n\r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        // setImage(arrayMoveImmutable(Array.from(items?.map((item, index) => {\r\n        //     return {\r\n        //         id: item.id,\r\n        //         image: item.src,\r\n        //         order:index,\r\n        //         product: id\r\n        //     }\r\n        // })), oldIndex, newIndex));\r\n    };\r\n\r\n    const memoizedImageCard = useMemo(() => {\r\n        return (\r\n            <Row>\r\n                <SortableGallery items={items}   onSortEnd={onSortEnd} axis={\"xy\"} />\r\n            </Row>\r\n        )\r\n    },[items]);\r\n\r\n    return (\r\n        <div className=\"ProductEditScreen\"\r\n           >\r\n        <Link to={-1} className='btn btn-success  my-3'> \r\n            Nazad\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1 style={{color:'green'}}>Edituj Biljku</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='id'>\r\n                                <Form.Label><strong>ID</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={id}\r\n                                    disabled\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto'>\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='prodaja'\r\n                                    defaultChecked={prodajno_mesto}\r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo'>\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    id='novo'\r\n                                    defaultChecked={novo}\r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust'>\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                    >\r\n                                        <FormControlLabel value=\"10\" control={<Radio color='success'/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color='success'/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color='success'/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='image'\r\n                                onContextMenu={(e) => {\r\n                                    \r\n                                    e.preventDefault(); // prevent the default behaviour when right clicked\r\n                                    const image = JSON.stringify(e.target.src)\r\n                                    const newItems = items.filter(item => JSON.stringify(item.src) !== image)\r\n\r\n                                    setItems(newItems)\r\n                                    \r\n                                    // if(images){\r\n                                    //     const newImages= images.map((item, index) => {\r\n                                    //         return {\r\n                                    //             image: item.src,\r\n                                    //             order: index,\r\n                                    //             product: id,\r\n                                    //             id: item.id\r\n                                    //         }\r\n                                    //     })\r\n                                       \r\n                                    //     //setImage(newImages)\r\n                                    // }\r\n                                    \r\n                                    \r\n                                    // const slanje= []\r\n                                    // newImages.forEach(x => {\r\n                                    //     var file = new File([\"hello\"], x.image\r\n                                    //     , {type:\"image/png\", lastModified: new Date().getTime()})\r\n                                    //     slanje.append(file)\r\n                                    // })\r\n                                    // console.log('Za slanje:', slanje)\r\n                                }}>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                {memoizedImageCard} \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue={color}\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={mesto_sadnje}\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option>{mesto_sadnje}</option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data_mesto_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             options={data_mesto_sadnje}\r\n                                             onChange={handleChange_mesto_sadnje}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>{type}</option>\r\n                                    {!allcategories ? [...Array.from(...allcategories?.type_of_plant), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={type}\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option key={0}>{type}</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n\r\n                            {/* <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option>{orezivanje}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.orezivanje), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )) : []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={orezivanje}\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option key={0}>{orezivanje}</option> \r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>   \r\n\r\n                            {/* <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option>{privlaci_insekte}</option> \r\n                                    {!allcategories ? [...Array.from(allcategories?.privlaci_insekte), \"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={privlaci_insekte}\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option key={0}>{privlaci_insekte}</option> \r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option>{brzina_rasta}</option>\r\n                                    {!allcategories ? [...Array.from(allcategories?.brzina_rasta),\"\"]?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    )): []}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             defaultValue={brzina_rasta}\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option key={0}>{brzina_rasta}</option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option key={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            \r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             minMenuHeight={5}\r\n                                             openMenuOnFocus={true}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success'  className='my-3'>\r\n                                Edituj Biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button, Row } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\nimport Select from 'react-select';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport ImagesGallery from '../compontents/UI/Image/ImageGallery'\r\nimport Gallery from \"react-photo-gallery\";\r\nimport { arrayMove } from 'react-sortable-hoc';\r\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\r\nimport Photo from \"../compontents/Photo\";\r\nimport {arrayMoveImmutable} from 'array-move';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\ntoast.configure()\r\n\r\nconst SortablePhoto = SortableElement(item => <Photo {...item} />);\r\nconst SortableGallery = SortableContainer(({ items }) => (\r\n        <Gallery photos={items} renderImage={props => <SortablePhoto {...props} />} />\r\n    \r\n    ));\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [hesteg, setHesteg] = useState('')\r\n    const [images, setImage] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [color, setColor] = useState('')\r\n    const [mesto_sadnje, setMestoSadnje] = useState([])\r\n    const [place, setPlace] = useState('')\r\n    const [vre_cve, setVremeCvetanja] = useState([])\r\n    const [orezivanje, setOrezivanje] = useState('')\r\n    const [privlaci_insekte, setPrivlaciInsekte] = useState('')\r\n    const [brzina_rasta, setBrzinaRasta] = useState('')\r\n    const [prezimljava, setPrezimljava] = useState('')\r\n    const [botanicki_naziv, setBotanickiNaziv] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [velicina_slanja, setVelicinaSlanja] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [sirina_biljke, setSirinaBiljke] = useState('')\r\n    const [category, setCategory] = useState('Četinari')\r\n    const [items, setItems] = useState([]);\r\n    const [prodajno_mesto, setProdajnoMesto] = useState(false)\r\n    const [novo, setNovo] = useState(false)\r\n    const [popust, setPopust] = useState(null)\r\n\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    \r\n    const inputName = useRef();\r\n    const inputHesh = useRef();\r\n\r\n    const handleMultipleImages =(evnt)=>{\r\n        \r\n        const selectedFIles =[];\r\n        const targetFiles = evnt.target.files;\r\n        const targetFilesObject= [...targetFiles]\r\n        targetFilesObject.map((file)=>{\r\n           return selectedFIles.push({file: URL.createObjectURL(file), name: file.name})\r\n        })\r\n        \r\n        setImage(evnt.target.files)\r\n        const photos = selectedFIles?.map(image => {\r\n              return {\r\n                  src:image.file,\r\n                  name:image.name,\r\n                  width:1,\r\n                  height:1\r\n              }\r\n        })\r\n       \r\n        setItems(photos)\r\n    }\r\n\r\n    function checkPress(e){\r\n        \r\n        if(e.key === 'Enter'){\r\n\r\n            inputHesh.current.focus()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories()) \r\n        \r\n    }, [dispatch])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            botanicki_naziv,\r\n            hesteg,\r\n            vre_cve,\r\n            orezivanje,\r\n            privlaci_insekte,\r\n            brzina_rasta,\r\n            prezimljava,\r\n            sirina_biljke,\r\n            velicina_slanja,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            color,\r\n            mesto_sadnje,\r\n            place,\r\n            type,\r\n            high,\r\n            category,\r\n            prodajno_mesto,\r\n            novo,\r\n            popust  \r\n        }, images, items))\r\n        navigate('/admin/productlist')\r\n        notify()\r\n    }\r\n\r\n    const notify = ()=>{\r\n \r\n        toast.success('Uspesno kreiranje Biljke',\r\n           {position: toast.POSITION.TOP_RIGHT, autoClose:3000})\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        setVremeCvetanja(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange_Mesto = (e) => {\r\n        \r\n        setMestoSadnje(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n\r\n    const handleChange2 = (e) => {\r\n        \r\n        setCategory(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    }\r\n    \r\n    const data = allcategories?.vre_cve?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    const data2 = categories?.map(x => {\r\n        return {\r\n            value:x.name,\r\n            label:x.name\r\n        }\r\n    })\r\n\r\n    const mesta_sadnje = allcategories?.mesto_sadnje?.map(x => {\r\n        return {\r\n            value:x,\r\n            label:x\r\n        }\r\n    })\r\n\r\n    // {prevImages && console.log('prevImages:', prevImages)}\r\n\r\n    // const photos = prevImages?.map(image => {\r\n    //      return {\r\n    //         src:image,\r\n    //          width:4,\r\n    //         height:3\r\n    //      }\r\n    // })\r\n    // {photos && console.log('photos:', photos)}\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        \r\n        setItems(arrayMoveImmutable(items, oldIndex, newIndex));\r\n        setImage(arrayMoveImmutable(images, oldIndex, newIndex));\r\n  };\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist' className='btn btn-success my-3'>\r\n                Nazad\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1 style={{color:'green'}}>Kreiranje biljke</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label id='label_name'><strong>NAME</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                    onKeyPress={(e) => checkPress(e)}\r\n                                    ref={inputName}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='hesteg'>\r\n                                <Form.Label><strong>HESTEG</strong></Form.Label>\r\n                                <Form.Control\r\n                                    \r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={hesteg}\r\n                                    onChange={(e) => setHesteg(e.target.value)}\r\n                                    ref={inputHesh}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prodajno_mesto' className=\"mb-3\">\r\n                                <Form.Label><strong>NA PRODAJNOM MESTU</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                   \r\n                                    onChange={(e) => setProdajnoMesto(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='novo' className=\"mb-3\">\r\n                                <Form.Label><strong>NOVO</strong></Form.Label>\r\n                                \r\n                                <Form.Check \r\n                                    isValid\r\n                                    type='checkbox'\r\n                                    \r\n                                    onChange={(e) => setNovo(e.target.checked)}\r\n                                />\r\n                               \r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='popust' className=\"mb-3\">\r\n                                {/* <Form.Label><strong>NOVO</strong></Form.Label> */}\r\n                                \r\n                                <FormControl>\r\n                                    <FormLabel id=\"demo-controlled-radio-buttons-group\" color='success'><strong>POPUST</strong></FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                                        name=\"controlled-radio-buttons-group\"\r\n                                        value={popust}\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                        row\r\n                                        color=\"success\"\r\n                                    >\r\n                                        <FormControlLabel value=\"0\" control={<Radio color=\"success\"/>} label=\"0%\" />\r\n                                        <FormControlLabel value=\"10\" control={<Radio color=\"success\"/>} label=\"10%\" />\r\n                                        <FormControlLabel value=\"20\" control={<Radio color=\"success\"/>} label=\"20%\" />\r\n                                        <FormControlLabel value=\"30\" control={<Radio color=\"success\"/>} label=\"30%\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                               \r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n                            {/* <Form.Group controlId='popust'>\r\n                                <Form.Label><strong>POPUST</strong></Form.Label>\r\n                                \r\n                                <div key='radio' className=\"mb-3\">\r\n                                    <Form.Check \r\n                                        inline\r\n                                        label=\"10%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='10'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        label=\"20%\"\r\n                                        name=\"group1\"\r\n                                        type='radio'\r\n                                        id='20'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    <Form.Check\r\n                                        inline\r\n                                        name=\"group1\"\r\n                                        label=\"30%\"\r\n                                        type='radio'\r\n                                        id='30'\r\n                                        onChange={(e) => setPopust(e.target.value)}\r\n                                    />\r\n                                    </div>\r\n                               \r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>IMAGES</strong></Form.Label>\r\n                                {/* <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control> */}\r\n                                \r\n                                <Form.Control\r\n                                    \r\n                                    type='file'\r\n                                    multiple=\"multiple\"\r\n                                    // onChange={(e) =>  setImage(e.target.files)}\r\n                                    onChange={handleMultipleImages}\r\n                                    style={{ marginBottom:'.5rem'}}\r\n                                > \r\n\r\n                                </Form.Control>\r\n                                \r\n                                {/* <ImagesGallery  images={prevImages} /> */}\r\n                                <Row>\r\n                                    <SortableGallery items={items} onSortEnd={onSortEnd} axis={\"xy\"} />\r\n                                </Row>\r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>DESCRIPTION</strong></Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\" rows={5}\r\n                                    type='textarea'\r\n                                    placeholder=''\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>CENA</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>STANJE</strong></Form.Label>\r\n                                <Form.Control\r\n                                    required\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue=''\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>BOJA</strong></Form.Label>\r\n                                <Form.Control\r\n                                             \r\n                                             type='text'\r\n                                             placeholder=''\r\n                                             defaultValue=''\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    \r\n \r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setMestoSadnje(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.mesto_sadnje?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='mesto_sadnje'>\r\n                                <Form.Label><strong>MESTO SADNJE</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={mesta_sadnje?.filter(obj => mesto_sadnje?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={mesta_sadnje}\r\n                                             onChange={handleChange_Mesto}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>TIP BILJKE</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto(2) sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option></option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='vreme_cvetanja'>\r\n                                <Form.Label><strong>VREME CVETANJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             \r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data?.filter(obj => vre_cve?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data}\r\n                                             onChange={handleChange}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='orezivanje'>\r\n                                <Form.Label><strong>OREZIVANJE:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setOrezivanje(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.orezivanje?.map(cat => (\r\n                                        <option  id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='privlaci_insekte'>\r\n                                <Form.Label><strong>MEDONOSNA:</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPrivlaciInsekte(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.privlaci_insekte?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brzina_rasta'>\r\n                                <Form.Label><strong>BRZINA RASTA</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setBrzinaRasta(e.target.value)}>\r\n                                    <option id='0'></option>\r\n                                    {allcategories?.brzina_rasta?.map(cat => (\r\n                                        <option id={cat} value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='prezimljava'>\r\n                                <Form.Label><strong>PREZIMLJAVA</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={prezimljava}\r\n                                    onChange={(e) => setPrezimljava(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            {/* <Form.Group controlId='botanicki_naziv'>\r\n                                <Form.Label><strong>BOTANICKI NAZIV</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={botanicki_naziv}\r\n                                    onChange={(e) => setBotanickiNaziv(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group> */}\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>VISINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={high}\r\n                                    onChange={(e) => setHigh(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='sirina_biljke'>\r\n                                <Form.Label><strong>SIRINA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={sirina_biljke}\r\n                                    onChange={(e) => setSirinaBiljke(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='velicina_slanja'>\r\n                                <Form.Label><strong>ISPORUKA:</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder=''\r\n                                    defaultValue={velicina_slanja}\r\n                                    onChange={(e) => setVelicinaSlanja(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            \r\n\r\n\r\n                            <Form.Group controlId='category2'>\r\n                                <Form.Label><strong>KATEGORIJA</strong></Form.Label>\r\n                                <Select aria-label=\"Default select example\"\r\n                                             isMulti\r\n                                             required\r\n                                             isClearable\r\n                                             className=\"dropdown\"\r\n                                             placeholder=\"Select Option\"\r\n                                             value={data2?.filter(obj => category?.includes(obj.value))}\r\n                                             closeMenuOnSelect={false}\r\n                                             options={data2}\r\n                                             onChange={handleChange2}>\r\n                                             {/* onChange={(e) => setVremeCvetanja(e.target.value)}> */}\r\n                                    {/* <option>Tip biljke...</option> */}\r\n                                    {/* {allcategories?.vre_cve?.map((cat, i) => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))} */}\r\n \r\n                                </Select>\r\n                            </Form.Group>\r\n\r\n                            <Button type='submit' variant='success' className='my-3'>\r\n                                Kreiraj biljku\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.user_name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n        <button onClick={props.removeItem}>X</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem, removeFromCart} from '../../../store/cart-actions'\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const navigate = useNavigate();\r\n\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n    const screenType = useScreenType();\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n\r\n    const removeItemFromCart = id => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const toPorudzba = () => {\r\n        navigate(`/cart`)\r\n        props.onClose();\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {cartItems?.filter(x => x.qty > 0).map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price.toFixed(2)}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}\r\n                       removeItem={() => removeItemFromCart(order.id)}>\r\n                       \r\n            </CartItem>\r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={() => { navigate(-1); props.onClose(); }}>Nastavite kupovinu</button>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button} onClick={toPorudzba}> Nastavite sa placanjem</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    \r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order?._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        \r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos vase porudzbine: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Broj porudzbine: </span>\r\n            <span><strong>{props.value.orderId}</strong></span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","\r\n\r\nfunction InformacijeIsporuka() {\r\n\r\nwindow.scrollTo({\r\n    top: 100,\r\n    left: 100,\r\n    behavior: 'smooth'\r\n    });\r\n  return (\r\n    <div>\r\n      <h3 style={{marginTop:'1rem', color:'green'}}>Način isporuke </h3>\r\n        <div>\r\n        Minimalni iznos porudžbine ne može da bude manji od 1000rsd. Porudžbine koje nemaju naveden minimum neće se isporučivati. \r\n        Pošiljke šaljemo ISKLJUČIVO PostExpress kurirskom službom. Troškovi isporuke posebno se zaračunavaju i plaćaju, u skladu sa cenovnikom Post Express \r\n        službe i iznose od 450,00 dinara, pa naviše, zavisno od težine i vrednosti pošiljke i nije moguće ih izračunati unapred. Maksimalna težina paketa za \r\n        slanje PostExpress službom je 20 kg, u kutijama čije dimenzije ne prelaze 60x50x50cm.\r\n        U suprotnom se pošiljka šalje kao CC paket, koja ima malo duži rok isporuke. Ukoliko ima više paketa za svaki se plaćaju troškovi isporuke.\r\n        Nemamo mogućnost slanja paketa u inostranstvo. Vreme isporuke je od 2-5 radnih dana.  \r\n\r\n\r\n        <h3 style={{ color:'green'}}>Način plaćanja</h3> \r\n\r\n        Prilikom popunjavanja obrasca za poručivanje možete se odlučiti za jedan od dva načina plaćanja: plaćanje pouzećem ili uplatnicom na tekući račun.\r\n        Na tekući račun uplaćujete samo iznos za poručene sadnice. Ptt troškove plaćate prilikom preuzimanja pošiljke sa sadnicama. \r\n        Ukoliko se odlučite za plaćanje pouzećem, iznos za sadnice i ptt troškove plaćate prilikom preuzimanja u pošti ili od kurira. \r\n        Kako bi pošiljka bila sigurno i brzo dostavljena do kupca, potrebno je da kupac navede tačne podatke prilikom formiranja porudžbine. \r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InformacijeIsporuka;\r\n","function InformacijePorucivanje() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{marginTop:'1rem'}}>Poručivanje</h3>\r\n            <div>\r\n                <p>Minimalna vrednost pošiljke koju šaljemo je 1000rsd.</p>\r\n                <p>Porudžbinu možete izvršiti na sledeće načine:</p>\r\n                <strong>Putem našeg sajta</strong> – sve biljke koje želite možete poručiti putem našeg sajta, to ćete uraditi dodavanjem proizvoda u korpu i upisivanjem ličnih podataka koji će biti upotrebljeni za potrebe slanja vašeg paketa. \r\n                <p><strong>Telefonskim putem </strong>– vrlo rado ćemo vam se javiti na svaki poziv! Ukoliko imate nekih dodatnih pitanja o biljkama i sadnicama koje želite da poručite, potreban vam je savet ili imate neku drugu nedoumicu, slobodno nas pozovite. Prilikom telefonskog razgovora možete odmah i izvršiti vašu porudžbinu kao i kompletan dogovor oko slanja i isporuke. Naš kontakt telefon je 065/20-77-257. </p>\r\n                <p><strong>Putem društvene mreže Facebook</strong> –  Sva vaša pitanja i porudžbine možete nam uputiti i putem društvene mreže Facebook. Vrlo rado ćemo vam odgovoriti u najkraćem mogućem roku.</p>\r\n                <strong>Putem e-maila</strong> – Slobodno nam pišite i na našu email adresu <a href = \"mailto: rasadnikema@gmail.com\">rasadnikema@gmail.com</a>.  \r\n                <p><strong>Dolaskom u rasadnik</strong> – ukoliko ste u blizini ili vam kilometri ne predstavljaju problem, uvek ste dobrodošli u naš rasadnik koji se nalazi u Budisavi (18km od Novog Sada).\r\n                 Ono što je potrebno da uradite prilikom dolaska, jeste da nam se jedan dan unapred najavite na naš kontakt telefon 065/20-77-257, kako bismo vam rekli u koje vreme je najbolje da nas posetite. Svakom kupcu želimo maksimalno da posvetimo pažnju i vreme, te nam je zbog planiranja ovih obaveza važno da znamo kada možemo da vas očekujemo 🙂  </p>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePorucivanje;","\r\nfunction InformacijePitanja() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Najčešća pitanja</h3>\r\n            <div>\r\n            <strong>Da li mogu da vidim trenutnu sliku sadnice? </strong><br></br> <br></br>\r\n\r\n            Ukoliko želite da Vam pošaljemo kako sadnica izgleda u trenutku porudžbine, potrudićemo se da Vam istu uslikamo i sliku pošaljemo na Viber, \r\n            Messenger, MMS ili e-mailom. Izgled biljaka se menja u zavisnosti od godišnjeg doba, a u vreme vegetacije i na nedeljnom nivou i iz tog razloga je nemoguće\r\n            u svakom momentu imati sliku sadnice, kako izgleda u momentu poručivanja. <br></br><br></br>\r\n\r\n \r\n\r\n            <strong>Koliko brzo će narasti određena biljka/drvo?</strong> <br></br> <br></br>\r\n\r\n            Na ovo pitanje je jako nezahvalno davati odgovor jer brzina rasta zavisi i od uslova u kojima se biljka gaji kao što kvalitet zemljišta, pozicija u bašti,\r\n            đubrenje, zalivanje itd. Za neke biljke je navedeno da su npr brzorastuće ili koliko će veličinu dostići nakon određenog broja godina, ali na to utiču i gore \r\n            navedeni faktori.  <br></br> <br></br>\r\n\r\n            <strong>Kako da posadim biljku? </strong><br></br> <br></br>\r\n\r\n            Prilikom sadnje je neophodno iskopati rupu odgovarajuće veličine, te usitniti zemlju. U rupu sipati malo vode kako bi zemlja bila vlažna.\r\n            Nakon sađenja je potrebno dobro pritisnuti zemlju okolo korena zatim dobro zaliti. Veoma je važno da oko korena ne ostane vazdušni \"džep\". <br></br> <br></br>\r\n\r\n \r\n\r\n            <strong>Da li je potrebno da đubrim biljke kako bi bolje rasle? </strong><br></br> <br></br>\r\n\r\n            Sa đubrenjem ne možete pogrešiti, jedino treba da vodite računa o tome koje đubrivo koristite i da ga ne stavljate direktno na koren.\r\n            Svako đubrivo se koristi drugačije, i najbolje je koristiti ga prema uputstvu proizvodjača.<br></br> <br></br>  \r\n\r\n            <strong>Da li mogu da sadim biljke u velike saksije/žardinjere? </strong><br></br> <br></br>\r\n\r\n            Naš rasadnik u ponudi uglavnom ima sadnice čije je idealno mesto sadnje u vrtu gde će sadnica i najbolje napredovati.\r\n            Takođe skoro sve podnose i sađenje u adekvatne saksije odnosno žardinjere. Ono što je veoma važno jeste: odabir odgovarajuće veličine saksije,\r\n            odabir dobre pozicije za biljku, pravilno zalivanje posebno u letnjem periodu, zbog bržeg isparavanje vode, zaštite biljaka u saksijama od zime odnosno\r\n            smrzavanja korena...\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePitanja;","\r\n\r\nfunction InformacijeReklamacije() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Reklamacije</h3>\r\n            <div>\r\n            Biljke i ostali sadni materijal ne podleže garantnom roku jer predstavlja živi materijal koji je potrebno adekvatno održavati i voditi računa o potrebama \r\n            prihranjivanja, uslovima staništa itd. <br></br><br></br>\r\n\r\n            <strong>REKLAMACIJE  PRIMAMO U ROKU OD 24h NAKON PREUZIMANJA POŠILJKE. </strong><br></br><br></br>\r\n\r\n            Rasadnik Ema će adekvatno upakovati sadnice, po želji kupca, sa ili bez saksija. Ne možemo odgovarati ukoliko kurirska služba ne bude adekvatno rukovala pošiljkom. \r\n            Za svako oštećenje načinjeno od strane kurirske službe, molimo Vas da kontaktirate istu radi reklamacije. <br></br><br></br>\r\n\r\n            Ukoliko kupac po prijemu pošiljke nije zadovoljan kvalitetom sadnica, kupac ima mogućnost da istu pošiljku vrati na adresu pošiljaoca odnosno Rasadnika Ema, \r\n            sa otkupninom u iznosu vrednosti biljaka. Pošiljka mora biti uredno upakovana i obezbeđena na isti način na koji je primljena. \r\n            Ptt troškove vraćanja sadnica snosi kupac. <br></br><br></br>\r\n\r\n            Paket se vraća u celosti, a postoji mogućnost povraćaja i pojedinačnih biljaka. U oba slučaja, kupac snosi ptt troškove. \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijeReklamacije;","\r\n\r\nfunction InformacijePrivatnost() {\r\n\r\n    window.scrollTo({\r\n        top: 100,\r\n        left: 100,\r\n        behavior: 'smooth'\r\n        });\r\n      return (\r\n        <div>\r\n          <h3 style={{ marginTop:'1rem'}}>Politika privatnosti</h3>\r\n            <div>\r\n            Da bismo uspešno obradili Vašu narudžbinu potrebni su nam Vaše ime i prezime, adresa, e-mail i telefon. Uz pomoć tih podataka bićemo u mogućnosti da \r\n            Vam isporučimo željenu robu, kao i da Vas obavestimo o trenutnom statusu narudžbine.\r\n            U naše ime obavezujemo se da ćemo čuvati privatnost svih naših kupaca.<br></br><br></br>\r\n            Prikupljamo samo neophodne, osnovne podatke o kupcima i podatke neophodne za \r\n            poslovanje i informisanje kupaca u skladu sa dobrim poslovnim običajima i u cilju pružanja kvalitetne usluge. \r\n            Svi podaci o kupcima se strogo čuvaju i dostupni su samo zaposlenima kojima su podaci nužni za obavljanje posla.<br></br><br></br>\r\n            Obavezujemo se da prikupljene podatke ne koristimo \r\n            ni u koje druge svrhe, niti ih prosleđujemo trećim licima.<br></br><br></br>\r\n            Rasadnik Ema zadržava pravo da odbije pružanje usluge ili otkaže narudžbenicu ukoliko ustanovi da je već bilo nekorektne saradnje od strane kupca \r\n            (npr. ako smo sa istom osobom imali problem više od dva puta nismo u obavezi da šaljemo pošiljku istoj).  \r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default InformacijePrivatnost;","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState, useRef } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\nimport InformacijeIsporuka from './screens/InformacijeIsporuka'\r\nimport InformacijePorucivanje from './screens/InformacijePorucivanje'\r\nimport InformacijePitanja from './screens/InformacijePitanja'\r\nimport InformacijeReklamacije from './screens/InformacijeReklamacije'\r\nimport InformacijePrivatnost from './screens/InformacijePrivatnost'\r\nimport useScreenType from \"react-screentype-hook\";\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n  const screenType = useScreenType();\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        \r\n        <div className=\"container-fluid\" style={ screenType.isMobile ? { backgroundColor: '#FFF' , width:'100%', margin:0} : { backgroundColor: '#FFF' , width:'80%'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id/:catId\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n            <Route path=\"/isporuke\" element={<InformacijeIsporuka />}></Route>\r\n            <Route path=\"/porucivanje\" element={<InformacijePorucivanje />}></Route>\r\n            <Route path=\"/pitanja\" element={<InformacijePitanja />}></Route>\r\n            <Route path=\"/reklamacije\" element={<InformacijeReklamacije />}></Route>\r\n            <Route path=\"/privatnost\" element={<InformacijePrivatnost />}></Route>\r\n          </Routes>\r\n        </div>\r\n        \r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}