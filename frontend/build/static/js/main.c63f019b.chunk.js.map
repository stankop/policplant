{"version":3,"sources":["compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css","compontents/Product.module.css","compontents/UI/CartModal.module.css","compontents/Header.module.css","compontents/UI/SearchModal.module.css","store/product-slice.js","store/category-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","store/category-actions.js","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","compontents/Kategorija.js","compontents/CustomDropDown.js","compontents/CustomSelect.js","store/product-actions.js","compontents/Search.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","compontents/UI/SearchModal.js","compontents/MDBCarusel.js","screens/HomeScreen.js","screens/CategoryScreen.js","store/cart-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","store/userRegister-actions.js","screens/RegisterScreen.js","store/userDetails-actions.js","store/userUpdateProfile-actions.js","store/orderOrdersProfile-actions.js","screens/ProfileScreen.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","store/payment-actions.js","screens/PaymentScreen.js","store/order-actions.js","screens/PlaceOrderScreen.js","store/orderDetails-actions.js","store/orderPay-actions.js","screens/OrderScreen.js","store/userList-actions.js","store/userDelete-actions.js","screens/UserListScreen.js","store/deleteProduct-actions.js","store/createProduct-actions.js","screens/ProductListScreen.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","store/userUpdate-actions.js","screens/UserEditScreen.js","store/updateProduct-actions.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","store/orderList-actions.js","screens/OrderListScreen.js","screens/FilterScreen.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","categoryListSlice","categories","allcategories","categoryListRequest","categoryListSuccess","categoryListFail","categoryListActions","categoryListReducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","removeCartItemByOne","addCartItemByOne","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","categoryList","SearchBox","useState","keyword","setKeyword","navigate","useNavigate","location","useLocation","Form","onSubmit","e","preventDefault","pathname","Container","Row","Col","md","Control","type","inline","className","onChange","target","value","OverlayTrigger","placement","delay","show","hide","overlay","props","Tooltip","Button","variant","style","background","i","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","icon","badge","listCategories","dispatch","fetchData","axios","get","data","cartData","response","detail","message","Header","useDispatch","Navbar","expand","collapseOnSelect","to","Brand","Text","textAlign","fontSize","faPhone","Nav","Link","HeaderCardButton","onShowCart","bg","Toggle","pading","Collapse","margin","size","NavDropdown","title","color","border","display","map","category","Item","_id","span","offset","faCartFlatbed","faInfo","faAnchor","faContactBook","user_name","event","removeItem","faUser","isAdmin","Footer","backgroundColor","Rating","Product","Card","width","height","Img","src","image","ImgOverlay","countInStock","Title","padding","marginBottom","Body","as","price","Kategorija","productNumber","CustomDropDown","CustomSelect","values","onAction","setIsMenuOpen","inputId","isClearable","isSearchable","isMulti","onMenuOpen","onMenuClose","options","classNamePrefix","inputValue","prevInputValue","closeMenuOnSelect","listProducts","productDetails","listFilterProducts","val","high","flow","place","search","post","prodData","Search","onSearch","pretraga","setPretraga","pozicija","setPozicija","boja","setBoja","setHigh","tip","setTip","kategorija","setKategorija","debouncedSearchTerm","debouncedValue","setDebouncedValue","handler","useDebounce","useMemo","initialRender","useRef","current","count","xl","justifyContent","alignItems","placeholder","flowering_time","col","label","type_of_plant","disabled","Loader","Spinner","animation","role","Message","children","Alert","Heading","Paginate","ProductCarusel","SearchModal","basicModal","setBasicModal","toggleShow","setShow","tabIndex","animationDirection","position","dialogClassName","scrollable","MDBCarusel","itemRef","productTop","interval","c","Image","ref","fluid","rounded","right","objectFit","HomeScreen","carucel","setCarucel","toggle","setToggle","setVal","screenType","useScreenType","cat","categoryError","categoryLoading","prod","productError","productLoading","useSearchParams","customerLogo","setSearchValue","isMobile","sm","lg","xs","isDesktop","isLargeDesktop","CategoryScreen","catProducts","useParams","Breadcrumb","href","class","active","toString","addToCart","getState","setItem","stringify","ProductScreen","match","setQty","productDet","window","scrollTo","top","left","behavior","alt","ListGroup","place_of_planting","Number","Array","keys","description","CartScreen","setDostava","setPlacanje","removeFromCartHandler","removeFromCart","hidden","faTrash","m","toFixed","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","addDostavaAndPlacanjeCart","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","login","Group","controlId","Label","varaiant","RegisterScreen","username","setName","fullname","setUserName","setPlace","address","setAddress","self_phone","setSelfPhone","fix_phone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","register","required","getUserDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","Object","put","userUpdateProfileSuccess","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","useForm","mode","handleSubmit","errors","watch","formState","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","minLength","pattern","fullName","adress","valueAsNumber","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","setIznos","setOrderId","setOrderi","orderCreate","itemsPrice","shippingPrice","taxPrice","orderItems","onShowOrder","iznos","orderId","orderi","string","index","createOrder","ukupno","OrderScreen","orderDetails","loadingPay","successPay","setItemPrice","isDelivered","deliveredAt","lenght","layout","amount","onSuccess","paymentResult","payOrder","listUsers","UserListScreen","uDelete","deleteHandler","confirm","delete","deleteUser","deleteUserReset","bordered","hover","uploadData","product_id","img","file","formData","FormData","append","productData","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","createProd","loadingCreate","errorCreate","successCreate","InfoScreen","ONamaScreen","KontakScreen","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductEditScreen","productId","setPrice","setImage","setColor","setFlow","brand","setBrand","setCategory","setCountInStock","setDescription","setType","uploading","setUploading","productUpd","updateProductDetails","uploadFileHandler","files","defaultValue","controlid","Select","colorChoises","floweringChoises","placeChoises","highChoises","type_of_plantChoises","ProductCreateScreen","OrderListScreen","listOrds","deliverdAt","FilterScreen","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","addItem","cartitems","CartModal","Order","bind","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.c63f019b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img-hover-zoom\":\"Product_img-hover-zoom__1r5Ep\",\"img-hover-zoom--zoom-n-rotate\":\"Product_img-hover-zoom--zoom-n-rotate__3jaMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\",\"color-navbar\":\"Header_color-navbar__3GJ_D\",\"h1\":\"Header_h1__3qgiT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SearchModal_modal__3SR-F\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst categoryListSlice = createSlice({\r\n    name: 'categoryList',\r\n    initialState: {\r\n        categories: [],\r\n        allcategories:[],\r\n        loading: false,\r\n        error: '',\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        categoryListRequest(state){\r\n            state.loading = true\r\n            state.categories = []\r\n        },\r\n\r\n        categoryListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.categories = action.payload.categories\r\n                    state.allcategories = action.payload.allcategories\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        categoryListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const categoryListActions = categoryListSlice.actions\r\nexport const categoryListReducer = categoryListSlice.reducer\r\nexport default categoryListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:''\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n                    state.error = ''\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty = newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n       removeCartItemByOne(state, action){\r\n            const id = action.payload\r\n            state.cartItems.find(x => x.id === id).qty -= 1\r\n       },\r\n       addCartItemByOne(state, action){\r\n        const id = action.payload\r\n        state.cartItems.find(x => x.id === id).qty += 1\r\n   }\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: ''\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n            state.error = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: '',\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n            state.error = ''\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { categoryListReducer } from './category-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer,\r\n        categoryList: categoryListReducer,\r\n        \r\n    }\r\n})\r\n\r\nexport default store","import React, { useState } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n    const renderTooltip = (props) => (\r\n        <Tooltip id=\"button-tooltip\" {...props}>\r\n          Pretraga\r\n        </Tooltip>\r\n      );\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        if(keyword){\r\n            \r\n            navigate(`/?keyword=${keyword}`)\r\n        }else{\r\n\r\n            navigate(location.pathname)\r\n        }\r\n\r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    delay={{ show: 250, hide: 400 }}\r\n                    overlay={renderTooltip}\r\n                    >\r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}>\r\n                            Pretraga\r\n                        </Button>\r\n                </OverlayTrigger>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import { categoryListActions} from './category-slice'\r\n\r\nimport axios from 'axios'\r\n\r\nexport const listCategories = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data: categories } = await axios.get(`/api/products/categories/`)\r\n            const { data: allcategories } = await axios.get(`/api/products/allcategories/`)\r\n\r\n            return { categories, allcategories };\r\n        }\r\n\r\n        try {\r\n            dispatch(categoryListActions.categoryListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(categoryListActions.categoryListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                categoryListActions.categoryListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment, useEffect } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nimport { listCategories } from \"../store/category-actions\";\r\n//import { plantCategories } from '../store/plantCategory-actions'\r\n\r\n\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const category = useSelector((state) => state.categoryList);\r\n  const { categories } = category;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch(listCategories())\r\n\r\n  }, []);\r\n  \r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment >\r\n    <header >\r\n      <Navbar  variant=\"dark\" expand=\"lg\" collapseOnSelect className={classes[\"color-navbar\"]}>\r\n        <Container  >\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  <h1 className={classes[\"h1\"]}>PolicPlant</h1>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  {<div>                     \r\n                    <div style={{fontSize: '1.6rem'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div >065356458</div>\r\n                  </div>}\r\n\r\n              </Navbar.Text>\r\n              \r\n                <SearchBox ></SearchBox>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container >\r\n          <Row>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Col md={6} style={{ pading:10, margin:10, size:20}} >\r\n                \r\n                <NavDropdown title=\"Kategorije proizvoda\" \r\n                             id=\"basic-nav-dropdown\"  \r\n                             style={{\r\n                                    fontSize: '1.4rem',\r\n                                    color: 'red', \r\n                                    border:'1px solid black',\r\n                                     display: 'inline-block',\r\n                                     background: 'rgb(97, 240, 7)'}}>\r\n                  {categories?.map( (category) => (\r\n                    <NavDropdown.Item  key={category._id}>\r\n                      <LinkContainer to={`/categories/${category._id}`} >\r\n                          <Nav.Link >\r\n                          { category.name }\r\n                          </Nav.Link>\r\n                      </LinkContainer>\r\n                        \r\n                    </NavDropdown.Item>\r\n                  ))}\r\n                  {/* <NavDropdown.Item href=\"#action/3.1\">\r\n                    Action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.2\">\r\n                    Another action\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Item href=\"#action/3.3\">\r\n                    Something\r\n                  </NavDropdown.Item>\r\n                  <NavDropdown.Divider />\r\n                  <NavDropdown.Item href=\"#action/3.4\">\r\n                    Separated link\r\n                  </NavDropdown.Item> */}\r\n                </NavDropdown>\r\n              </Col>\r\n              <Col md={{ span: 10, offset: 2 }}>\r\n                <Nav>\r\n                  <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faCartFlatbed} />     Korpa</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/info\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faInfo} />  Info</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { false && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n  return (\r\n    <footer style={{backgroundColor:'white'}}>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; PolicPlant</Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className={`my-2 p-2 rounded ${classes[\"img-hover-zoom\"]} `} border=\"primary\"  style={{ width: '18rem', height: '30rem' }}>\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.image}></Card.Img>\r\n            <Card.ImgOverlay>\r\n                {product?.countInStock < 1 && <Card.Title><div style={{ backgroundColor:\"red\", color:\"white\", display: 'inline-flex', padding: '5px', marginBottom: '1em'}}>Nema na stanju</div></Card.Title>}\r\n            </Card.ImgOverlay>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 24}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black'}}>\r\n                    {product.price} din\r\n            </Card.Text>\r\n            <Card.Text as=\"h7\">\r\n                    {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : ''} \r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\nimport classes from './Product.module.css'\r\n\r\nfunction Kategorija({category}) {\r\n  return (\r\n    <Card className={`my-2 p-2  ${classes[\"img/-hover-zoom\"]} `} border=\"dark\"  style={{ width: '18rem', height: '25rem' }}>\r\n        <Card.Header as=\"h7\">Kategorija</Card.Header>\r\n        <Link to={`/categories/${category._id}`}>\r\n            <Card.Img src={category.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body style={{ textAlign: \"center\"}}>\r\n            <Link to={`/categories/${category._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 26}}>{category.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            \r\n            <Card.Text as=\"h7\" style={{ color:'black'}}>\r\n                    {category.productNumber} proizvoda\r\n            </Card.Text>\r\n            {/* <Card.Text as=\"h7\">\r\n                    //{category.countInStock > 0 ? <strong style={{ color:'green'}}>{category.countInStock} proizvoda</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text> */}\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Kategorija","import React, { useState } from 'react';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n// The forwardRef is important!!\r\n// Dropdown needs access to the DOM node in order to position the Menu\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <button\r\n    href=\"\"\r\n    ref={ref}\r\n    type=\"search\"\r\n    style={{ background:'white', border:'1px solid grey',padding:'0.5rem', width: '100%'}}\r\n    \r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n    \r\n  >\r\n    {children}\r\n    <span style={{ }}>&#x23F7;</span>\r\n    \r\n  </button>\r\n));\r\n\r\n// forwardRef again here!\r\n// Dropdown needs access to the DOM of the Menu to measure it\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n    const [value, setValue] = useState('');\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        <Form.Control\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Odaberite...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        />\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value),\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  },\r\n);\r\n\r\nfunction CustomDropDown({ values }){\r\n  \r\n  return  (\r\n  <Dropdown style={{ padding:'0.5rem', width: '100%'}}>\r\n    <Dropdown.Toggle  as={CustomToggle} id=\"dropdown-custom-components\">\r\n      pretraga\r\n    </Dropdown.Toggle>\r\n\r\n    <Dropdown.Menu as={CustomMenu}>\r\n      { values?.map((val, ind) => (\r\n        <Dropdown.Item key={ind} eventKey={ind}>{val}</Dropdown.Item>\r\n      ))}\r\n    </Dropdown.Menu>\r\n  </Dropdown>)\r\n}\r\n\r\nexport default CustomDropDown","import { CSSProperties, useState } from 'react';\r\nimport Select, { AriaOnFocus } from 'react-select';\r\n\r\nexport default function CustomSelect({values, onAction}) {\r\n\r\n  const [ariaFocusMessage, setAriaFocusMessage] = useState('');\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const style = {\r\n    blockquote: {\r\n      fontStyle: 'italic',\r\n      fontSize: '.75rem',\r\n      margin: '1rem 0',\r\n    },\r\n    label: {\r\n      fontSize: '.75rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: 2,\r\n    },\r\n  };\r\n\r\n  const onChange = (inputValue,{ action, prevInputValue }) => {\r\n    console.log('Input e:',inputValue)\r\n    if (action === 'select-option') \r\n        onAction(inputValue)\r\n    if (action === 'clear') \r\n        onAction('')\r\n    if (action === 'remove-value') \r\n        onAction(inputValue)\r\n     \r\n  };\r\n\r\n  const onMenuOpen = () => setIsMenuOpen(true);\r\n  const onMenuClose = () => setIsMenuOpen(false);\r\n\r\n  return (\r\n    \r\n      <Select\r\n        aria-labelledby=\"aria-label\"\r\n        inputId=\"aria-example-input\"\r\n        name=\"aria-live-color\"\r\n        isClearable\r\n        isSearchable\r\n        isMulti\r\n        className=\"basic-multi-select\"\r\n        onMenuOpen={onMenuOpen}\r\n        onMenuClose={onMenuClose}\r\n        options={values}\r\n        classNamePrefix=\"select\"\r\n        onChange={onChange}\r\n        closeMenuOnSelect={false}\r\n      />\r\n \r\n  );\r\n}","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const listFilterProducts = (value) => {\r\n    return async (dispatch) => {\r\n\r\n        \r\n        const val = {\r\n                color: value.color,\r\n                high: value.high,\r\n                type: value.type,\r\n                category: value.category,\r\n                flow: value.flow,\r\n                place: value.place,\r\n                search: value.search\r\n            }\r\n            \r\n        \r\n        const fetchData = async () => {\r\n            \r\n            const { data } = await axios.post(`/api/products/filter/`,val)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const prodData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(prodData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useEffect, useState, useMemo, useRef } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport CustomDropDown from './CustomDropDown';\r\nimport CustomSelect from './CustomSelect';\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\n\r\nfunction useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n\r\nfunction Search( { onSearch}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const cat = useSelector(state => state.categoryList)\r\n    const { allcategories } = cat\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const [pretraga, setPretraga] = useState('')\r\n    const [pozicija, setPozicija] = useState([])\r\n    const [boja, setBoja] = useState([])\r\n    const [high, setHigh] = useState([])\r\n    const [tip, setTip] = useState([])\r\n    const [kategorija, setKategorija] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n\r\n    const memoizedValue = useMemo(() => {\r\n        const value = {\r\n            color: boja,\r\n            high: high,\r\n            type: tip,\r\n            category: kategorija,\r\n            flow: pozicija,\r\n            search: pretraga\r\n        }\r\n        onSearch(value)\r\n        return value;\r\n        }, [boja, high, tip, kategorija, pozicija, pretraga]);\r\n    \r\n    const debouncedSearchTerm = useDebounce(memoizedValue, 1000);\r\n    const initialRender = useRef(true);\r\n    \r\n    useEffect(()=>{\r\n       if(initialRender.current){\r\n        initialRender.current = false;\r\n       }\r\n       else{\r\n        console.count(debouncedSearchTerm)\r\n        dispatch(listFilterProducts(debouncedSearchTerm))\r\n        //navigate(`filter`, {state: debouncedSearchTerm, replace:true})\r\n       }    \r\n    }, [debouncedSearchTerm]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        navigate(`filter`, {state: debouncedSearchTerm})    \r\n    }\r\n\r\n    const btnStyle = {\r\n        background: 'greenyellow',\r\n        // backgroundImage: 'url(' + imgUrl + ')',\r\n    };\r\n\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container style={{ padding: '0.2rem'}}>\r\n           \r\n            <h7><strong>Pretraga Proizvoda:</strong></h7>\r\n            <Row md={12} xl={12} style={{margin: 'auto', display: 'flex',  justifyContent:'center', alignItems:'center', }}>\r\n                <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                    <Form.Control \r\n                        type='search'\r\n                        name='pretraga'\r\n                        inline ='true'\r\n                        placeholder='Trazeni proizvod...'\r\n                        onChange={(e) => setPretraga(e.target.value) }>\r\n                    </Form.Control>\r\n                </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Pozicija za sadnju</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.flowering_time?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setPozicija}></CustomSelect>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                <h7><strong>Boja cveta</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.color?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setBoja}></CustomSelect>\r\n                        \r\n                    </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Tip biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.type_of_plant?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setTip}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Visina biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect values={ allcategories?.high?.map(col => (\r\n                            { value: col, label: col}\r\n                        ))} onAction={setHigh}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                \r\n                <h7><strong>Kategorija biljke</strong></h7>\r\n                    <Row md={12} xl={12} style={{ padding:'0.5rem', width: '100%'}}>\r\n                        <CustomSelect  values={ allcategories?.categories?.map(col => (\r\n                            { value: col.name, label: col.name}\r\n                        ))} onAction={setKategorija}></CustomSelect>\r\n                    </Row>\r\n                <hr/>\r\n                <Row md={12}>\r\n                    \r\n                        <Button \r\n                            type='submit'\r\n                            variant='outline-success'\r\n                            className='p-2'\r\n                            style={btnStyle}\r\n                            disabled={true}>\r\n                            Filter\r\n                        </Button>\r\n                \r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover'  wrap >\r\n                    {slike.map(product => (\r\n                        <Carousel.Item key={product.id} style={{objectFit: 'cover'}}>\r\n                            <div>\r\n                                <Image src={product.src} className=\"d-block w-100\" roundedCircle={false} ></Image>\r\n                            </div>\r\n                             \r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import React, { useState } from 'react';\r\nimport {\r\n  MDBBtn,\r\n  MDBModal,\r\n  MDBModalDialog,\r\n  MDBModalContent,\r\n  MDBModalHeader,\r\n  MDBModalTitle,\r\n  MDBModalBody,\r\n  MDBModalFooter,\r\n} from 'mdb-react-ui-kit';\r\nimport Search from '../Search'\r\nimport classes from './SearchModal.module.css'\r\n\r\nconst setSearchValue = () => {\r\n\r\n}\r\nexport default function SearchModal( {onSearch}) {\r\n  const [basicModal, setBasicModal] = useState(false);\r\n\r\n  const toggleShow = () => setBasicModal(!basicModal);\r\n\r\n  return (\r\n    <>\r\n      <MDBBtn onClick={toggleShow}>Pretraga   <i className=\"fa fa-bars fa-large\"></i></MDBBtn>\r\n      <MDBModal show={basicModal} setShow={setBasicModal} tabIndex='-1' animationDirection=\"left\">\r\n        <MDBModalDialog position=\"top-right\"  dialogClassName={classes['modal']} scrollable  >\r\n          <MDBModalContent>\r\n            <MDBModalHeader >\r\n              <MDBModalTitle>Pretraga Biljaka</MDBModalTitle>\r\n              <MDBBtn className='btn-close' color='none' onClick={toggleShow}></MDBBtn>\r\n            </MDBModalHeader>\r\n            <MDBModalBody>\r\n                <Search onSearch={ onSearch}></Search> \r\n            </MDBModalBody>\r\n\r\n            <MDBModalFooter>\r\n              <MDBBtn color='secondary' onClick={toggleShow}>\r\n                Close\r\n              </MDBBtn>\r\n              \r\n            </MDBModalFooter>\r\n          </MDBModalContent>\r\n        </MDBModalDialog>\r\n      </MDBModal>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useRef} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n//import { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\nimport {\r\n    MDBCarousel,\r\n    MDBCarouselItem,\r\n  } from 'mdb-react-ui-kit';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"\r\nimport {  Image} from 'react-bootstrap'\r\n\r\nimport { Rerousel } from 'rerousel';\r\n\r\nfunction MDBCarusel( {itemRef}) {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n    \r\n    const slike = [\r\n        { \r\n            id: 1,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/ogrod-angielski-sciezka.png',\r\n            name: 'amazonska suma'\r\n        },\r\n        {\r\n            id:2,\r\n            src: 'https://policplantpublic.s3.eu-west-2.amazonaws.com/jesenji+izgled.jpg',\r\n            name: 'borova suma'\r\n        }]\r\n    useEffect(() => {\r\n        //dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Rerousel itemRef={itemRef} interval={10000}>\r\n                {slike.map((c) => {\r\n                    return <Image key={c.id} src={c.src} ref={itemRef} fluid  rounded   style={{ position: 'relative' , right:'20px',  width:'110%',\r\n                        height: '30rem', objectFit:'fill', margin:'5px', padding:'12px'}}/>\r\n                })}\r\n                </Rerousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default MDBCarusel","import React, { useEffect , useState, useRef} from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport Search from '../compontents/Search'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Sidebar from \"../compontents/UI/SideBar\"\r\nimport SearchModal from '../compontents/UI/SearchModal'\r\nimport useScreenType from \"react-screentype-hook\";\r\nimport MUISearchModal from '../compontents/UI/MUISearchModal'\r\nimport MDBCarusel from '../compontents/MDBCarusel'\r\nimport ProductCarusel from '../compontents/ProductCarusel'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const [carucel, setCarucel] = useState(true)\r\n  const [ toggle, setToggle ] = useState(true)\r\n  const [ val, setVal ] = useState({\r\n    color: [],\r\n    high: [],\r\n    type: [],\r\n    category: [],\r\n    flow: [],\r\n    search: ''\r\n})\r\n  const screenType = useScreenType();\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: { categoryError}, loading:{ categoryLoading}, categories } = cat\r\n  const prod = useSelector(state => state.productList)\r\n  const { error: { productError }, loading:{ productLoading }, products } = prod\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  const customerLogo = useRef(null);\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listCategories())\r\n    //dispatch(listFilterProducts(val))\r\n        \r\n }, [dispatch, keyword]);\r\n\r\n\r\n const setSearchValue = (value) => {\r\n  setVal(value)\r\n  if(value.color?.length || value.high?.length || value.type?.length || value.category?.length  || value.flow?.length || value.search !== ''){\r\n    setToggle(false)\r\n    setCarucel(false)\r\n  } else{\r\n    setToggle(true)\r\n    setCarucel(true)\r\n  }\r\n }\r\n \r\n  return (\r\n    <div>\r\n        { carucel && <MDBCarusel itemRef={customerLogo}></MDBCarusel>}\r\n        \r\n        <h1> {carucel ? 'Kategorije:' : 'Filtrirani Proizvodi:'}</h1>\r\n        {/* <Sidebar></Sidebar> */}\r\n        {screenType.isMobile && <SearchModal onSearch={ setSearchValue}></SearchModal>} \r\n        {/* {screenType.isMobile && <MUISearchModal onSearch={ setSearchValue}></MUISearchModal>} */}\r\n        { categoryLoading ? <Loader></Loader>\r\n                 : categoryError ? <Message variant='danger'>{categoryError}</Message> \r\n                 :\r\n                 <div > \r\n                  <Container fluid> \r\n                    <Row>\r\n                      <Col sm={6} md={6} lg={8} xl={9} xs={12}>\r\n                        { toggle ? (<Row >\r\n                          {categories?.map(category => (\r\n                          <Col key={category._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Kategorija category={category} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>) :\r\n                        (<Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))} \r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>)}\r\n                      </Col>\r\n                      { (screenType.isDesktop || screenType.isLargeDesktop) && <Col>\r\n                          <Search onSearch={ setSearchValue}></Search> \r\n                      </Col> }\r\n                    </Row>\r\n                  </Container>\r\n                  \r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CategoryScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n  //const id = search.get(\"id\");\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listProducts())\r\n        \r\n }, [dispatch, id]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/\"><i class=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item  active>\r\n            { catProducts?.find( cat => cat._id.toString() === id)?.name}\r\n          \r\n          </Breadcrumb.Item>\r\n          \r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        <h1>{ catProducts?.find( cat => cat._id.toString() === id)?.name}</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Row >\r\n                     {products?.filter(product => product.category._id.toString() === id).length == 0 ? <div>Trenutno nema proizvoda iz ove kategorije na stanju.</div> : products?.filter(product => product.category._id.toString() === id).map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={6} className=\"d-flex\">\r\n                         <Product product={product} />\r\n                     </Col>\r\n                      ))}\r\n\r\n                      {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const removeItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addItem = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.addCartItemByOne(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\nimport Breadcrumb from 'react-bootstrap/Breadcrumb'\r\nimport HomeIcon from '@mui/icons-material/Home';\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  useEffect(()=>{\r\n\r\n       dispatch(productDetails(id))\r\n\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n\r\n  return (\r\n    <div style={{height:'100%'}}>\r\n        <Breadcrumb>\r\n          <Breadcrumb.Item href=\"/#/\"><i class=\"fa fa-home\"></i></Breadcrumb.Item>\r\n          <Breadcrumb.Item href={`#/categories/${product?.category?._id}`}>\r\n                \r\n          { product?.category?.name}\r\n          </Breadcrumb.Item>\r\n          <Breadcrumb.Item active>\r\n            { product?.name}\r\n          </Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Link to={-1} className='btn btn-primary my-3'> Nazad</Link>\r\n        \r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row >\r\n                                <Col  sm={12} md={6} lg={4} xl={3} xs={6} >\r\n                                    <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                    </Image>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={6} xl={6} xs={6}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2>{product.name}</h2>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:30 }}>{product.price} din</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category?.name}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Polozaj:</strong> {product.flowering_time}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col sm={12} md={6} lg={4} xl={3} xs={12}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} din</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col sm={12} md={6} lg={4} xl={3} xs={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { orderActions } from \"../store/order-slice\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"uplata\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler = (e) => {\r\n\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <h1>Korpa</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" >\r\n            {cartItems?.map((item) => {\r\n              return (\r\n              <ListGroup.Item key={item.id} hidden={item.qty < 1}>\r\n                <Row>\r\n                  <Col sm={12} md={6} lg={3} xl={2} xs={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col sm={12} md={3} lg={4} xl={3} xs={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col sm={12} md={6} lg={4} xl={3} xs={3}><strong>{item.price} din</strong></Col>\r\n                  <Col sm={12} md={6} lg={4} xl={2} xs={2}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1} xl={2} xs={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>);\r\n            })}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col sm={12} md={6} lg={4} xl={6} xs={12}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col sm={12} md={6} lg={4} xl={8} xs={8}><strong>Proizvodi</strong></Col>\r\n                <Col sm={12} md={6} lg={4} xl={4} xs={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.map((item) => (\r\n                <ListGroup.Item key={item.id}>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}>{item.qty}      x      {item.name}</Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col m={12} md={6} lg={4} xl={8} xs={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col m={12} md={6} lg={4} xl={4} xs={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} din</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={chechoutHandler}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login  \r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm({ mode:\"onChange\"});\r\n    \r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    \r\n    const submitHandler1 = (data, event) => {\r\n        console.log(event)\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (e) => {\r\n\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Novi Kupac\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" />\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={handleSubmit(submitHandler1)}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            {...register(\"fullName\", { \r\n                                required: \"Potebno je uneti Ime i Prezime\" ,\r\n                                minLength: {\r\n                                    value: 3,\r\n                                    message: \"Minimalan broj karaktera je 3\"\r\n                                },\r\n                                pattern: {\r\n                                    value: /^[A-Za-z]+$/i,\r\n                                    message:\"Morate uneti samo slova za Ime i prezime\"\r\n                                }\r\n                                \r\n                            })} \r\n                            aria-invalid={errors.fullName ? \"true\" : \"false\"}\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fullName && <span style={{ color: 'red'}} role=\"alert\">{errors.fullName?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"email\",{ \r\n                            required: true,  \r\n                            pattern: {\r\n                                value: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                message: \"Nije validan Email\" \r\n                            },\r\n                            message:\"That is a invalid email.\"\r\n                        })}\r\n                            aria-invalid={errors.email ? \"true\" : \"false\"}\r\n                            type='email'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.email && <span style={{ color: 'red'}} role=\"alert\">{errors.email?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"post\",{\r\n                            required:\"Unesite postanski broj i mesto boravka\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.post && <span style={{ color: 'red'}} role=\"alert\">{errors.post?.message}</span>}\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"adress\",{\r\n                            required:\"Unesite adresu stanovanja i broj\"\r\n                            })}\r\n                            \r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.adress && <span style={{ color: 'red'}} role=\"alert\">{errors.adress?.message}</span>}\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"fix_phone\",{\r\n                                    \r\n                                    valueAsNumber: {\r\n                                        value: true,\r\n                                        message: \"Unesite ispravan fixni telefon\"},\r\n                                })}\r\n                            \r\n                            type=\"number\"\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    {errors.fix_phone && <span style={{ color: 'red'}} role=\"alert\">{errors.fix_phone?.message}</span>}\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"self_phone\")}\r\n                            required\r\n                            type='number'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control {...register(\"demands\")}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite zahteve oko isporuke...'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite sa Narudzbom\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n      </TabPanel>\r\n      \r\n      <TabPanel value=\"2\" disabled={true}>\r\n        <FormContainer>\r\n\r\n            <h1>Podaci Kupca</h1>\r\n            <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    \r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n\r\n      </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n    </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        // const {\r\n        //     userLogin:{ userInfo }\r\n        // } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                    //Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            console.log('Pre localstorage remove')\r\n            localStorage.removeItem('cartItems')\r\n            console.log('Posle localstorage remove')\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\nimport TitleCase from 'react-title-case';\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [iznos, setIznos] = useState(0)\r\n    const [ orderId, setOrderId] = useState(0)\r\n    const [ orderi, setOrderi] = useState({})\r\n\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order , error, success, loading} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    //const  orderDetail  = useSelector(state => state.orderDetail)\r\n    //const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n \r\n   \r\n    useEffect(() =>{\r\n        console.log('ovo je pre succesa',success)\r\n        //dispatch(resetOrder())\r\n        if (success){\r\n            setIznos(order.totalPrice)\r\n            setOrderId(order._id)\r\n            setOrderi(order.orderItems)\r\n            console.log('ovo je order:',order)\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder({iznos: order.totalPrice,\r\n                               orderId: order._id,\r\n                               orderi: order.orderItems})\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n        console.log('jel doslo dovde?')\r\n\r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col sm={12} md={6} lg={4} xl={7} xs={12}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> <TitleCase string={placanje} />\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart.cartItems.length === 0 \r\n                            ? <div>\r\n                                <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                                <Button to=\"/\"\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         href=\"/\"\r\n                                         >Povratak na pocetak\r\n                                </Button>\r\n                              </div>\r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col sm={12} md={6} lg={4} xl={2} xs={3}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={3} xs={3}>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col sm={12} md={6} lg={4} xl={6} xs={6}>\r\n                                                            {item.qty} x {item.price} din = {(item.qty *item.price).toFixed(2)} din\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col sm={12} md={6} lg={4} xl={4} xs={12}>\r\n                    <Card border=\"info\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Shiping:</strong></Col>\r\n                                   <Col>{shippingPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>{taxPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{totalPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart.cartItems.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = (prod, image) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,prod, config)\r\n            return data;\r\n        }\r\n\r\n\r\n        const uploadData = async (product_id, img) => {\r\n\r\n            const file = img //e.target.files[0]\r\n         \r\n            const formData = new FormData()\r\n\r\n            formData.append('image', file)\r\n            formData.append('product_id', product_id)\r\n\r\n            try {\r\n                const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                    }\r\n                }\r\n\r\n                const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n            } catch (error) {\r\n           \r\n            }\r\n        }\r\n\r\n        try {\r\n            dispatch(createProductActions.createProductRequest())\r\n            const productData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(productData))\r\n            const {\r\n                createProduct:{ product, success }\r\n            } = getState()\r\n            if(success){\r\n                const imageData = await uploadData(product._id, image)\r\n            }\r\n            dispatch(createProductActions.createProductReset())\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const createProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = createProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n\r\n         if(successCreate){\r\n\r\n            // const productId = createdProduct._id\r\n            // dispatch(productReset())\r\n            // navigate(`/admin/product/${productId}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate])\r\n     \r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <LinkContainer to={`/admin/createproduct`}>\r\n                    <Button className='my-3'>\r\n                        <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                    </Button>\r\n                </LinkContainer>     \r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th>Edit</th>\r\n                                    <th>Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category.name}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button></td>\r\n                                        </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\nexport const updateProductDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset, updateProductDetails } from '../store/updateProduct-actions'\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n    console.log('ovo je product id:', productId)\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error, loading, success, product } = productUpd\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log('pocetka useEffecta')\r\n\r\n        dispatch(updateProductDetails(id))\r\n\r\n        if(success){\r\n            //dispatch(updateProductReset())\r\n            //navigate(`/admin/productlist`)\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setColor(product.color)\r\n            setPlace(product.place_of_planting)\r\n            setFlow(product.flowering_time)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description)\r\n            setHigh(product.high)\r\n            setType(product.type_of_plant)\r\n        }  \r\n\r\n    }, [dispatch, navigate, success])\r\n\r\n    console.log('drugo')\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:id,\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description,\r\n            brand,\r\n            high,\r\n            type\r\n        }))\r\n\r\n    }\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', id)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n     }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Link to='/admin/productlist'>\r\n            Go Back\r\n        </Link>\r\n\r\n        <FormContainer>\r\n            <h1>Create Product</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>} \r\n\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : (\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label><strong>Name</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                defaultValue={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label><strong>Cena</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='number'\r\n                                placeholder='Enter price'\r\n                                defaultValue={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label><strong>Image</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter image...'\r\n                                defaultValue={image}\r\n                               \r\n                            >\r\n                            </Form.Control>\r\n\r\n                            <Form.Control\r\n                                controlid=\"image-file\"\r\n                                type='file'\r\n                                label=\"Izaberite sliku:\"\r\n                                \r\n                                onChange={(e) => uploadFileHandler(e)}\r\n                            > \r\n\r\n                            </Form.Control>  \r\n                            {uploading && <Loader />}\r\n\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group controlId='color'>\r\n                            <Form.Label><strong>Boja</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setColor(e.target.value)}>\r\n                                <option>{color}</option>\r\n                                {product?.colorChoises?.map(col => (\r\n                                    <option value={col}>{col}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countinstock'>\r\n                            <Form.Label><strong>Stanje</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='number'\r\n                                placeholder='Enter stock'\r\n                                defaultValue={countInStock}\r\n                                onChange={(e) => setCountInStock(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        {/* <Form.Group controlId='category'>\r\n                            <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setCategory(e.target.value)}>\r\n                                <option>Odaberi kategoriju cveca...</option>\r\n                                {product.category?.map(cat => (\r\n                                    <option value={cat.name}>{cat.name}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group> */}\r\n\r\n                        <Form.Group controlId='flow'>\r\n                            <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setFlow(e.target.value)}>\r\n                                <option>{flow}</option>\r\n                                {product.floweringChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='place'>\r\n                            <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setPlace(e.target.value)}>\r\n                                <option>{place}</option>\r\n                                {product.placeChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label><strong>Brand</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter brand...'\r\n                                defaultValue={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='high'>\r\n                            <Form.Label><strong>Visina biljke</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setHigh(e.target.value)}>\r\n                                <option>{high}</option>\r\n                                {product.highChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='type_plant'>\r\n                            <Form.Label><strong>Tip biljke</strong></Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setType(e.target.value)}>\r\n                                <option>{type}</option>\r\n                                {product.type_of_plantChoises?.map(cat => (\r\n                                    <option value={cat}>{cat}</option>\r\n                                ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label><strong>Description</strong></Form.Label>\r\n                            <Form.Control\r\n\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                defaultValue={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Update Product\r\n                    </Button>\r\n\r\n                    </Form>\r\n                )}\r\n\r\n        </FormContainer >\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductCreateScreen( ) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0.00)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [high, setHigh] = useState('')\r\n    const [type, setType] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate();\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: categoryLoading, categories , allcategories, error: categoryError } = categoryList\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(listCategories())  \r\n\r\n    }, [dispatch, navigate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProduct({\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description,\r\n            brand,\r\n            high,\r\n            type\r\n        }, image))\r\n        navigate('/admin/productlist')\r\n        console.log('Ovde treba da ide na product list')\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n         const file = e.target.files[0]\r\n        \r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n        }\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {categoryLoading && <Loader />}\r\n                {categoryError && <Message variant='danger'>{categoryError}</Message>} \r\n\r\n                {categoryLoading ? <Loader /> : categoryError ? <Message variant='danger'>{categoryError}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>Name</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>Cena</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>Image</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image...'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    label=\"Izaberite sliku:\"\r\n                                    \r\n                                    onChange={(e) =>  setImage(e.target.files[0])}\r\n                                > \r\n\r\n                                </Form.Control>  \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>Boja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    <option>Odaberite boju cveca...</option>\r\n                                    {allcategories?.color?.map(col => (\r\n                                        <option value={col}>{col}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>Stanje</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setCategory(e.target.value)}>\r\n                                    <option>Odaberi kategoriju cveca...</option>\r\n                                    {categories?.map(cat => (\r\n                                        <option value={cat.name}>{cat.name}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='flow'>\r\n                                <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setFlow(e.target.value)}>\r\n                                    <option>Odaberi vreme cvetanja...</option>\r\n                                    {allcategories?.flowering_time?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option>Odaberi mesto sadnje...</option>\r\n                                    {allcategories?.place_of_planting?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='brand'>\r\n                                <Form.Label><strong>Brand</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter brand...'\r\n                                    defaultValue={brand}\r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='high'>\r\n                                <Form.Label><strong>Visina biljke</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setHigh(e.target.value)}>\r\n                                    <option>Visina biljke...</option>\r\n                                    {allcategories?.high?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='type_plant'>\r\n                                <Form.Label><strong>Tip biljke</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setType(e.target.value)}>\r\n                                    <option>Tip biljke...</option>\r\n                                    {allcategories?.type_of_plant?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>Description</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Create Product\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductCreateScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport Kategorija from '../compontents/Kategorija'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts, listFilterProducts } from '../store/product-actions'\r\nimport { listCategories } from '../store/category-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Search from '../compontents/Search'\r\n\r\n\r\nfunction FilterScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const prod = useSelector(state => state.productList)\r\n  const { error, loading, products } = prod\r\n  const cat = useSelector(state => state.categoryList)\r\n  const { error: catError, loading: carLoading, categories: catProducts } = cat\r\n  const [search, setSearch] = useSearchParams();\r\n  const { id } = useParams();\r\n\r\n  const location = useLocation();\r\n  \r\n    useEffect(()=>{\r\n\r\n        dispatch(listFilterProducts(location.state))\r\n        \r\n    }, [dispatch, location.state]);\r\n\r\n    const setSearchValue = (value) => {\r\n        \r\n       }\r\n \r\n  return (\r\n    <div>\r\n        { false && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h2>Filtrirani proizvodi:</h2>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div >  \r\n                    <Container fluid> \r\n                    <Row>\r\n                      <Col sm={8} md={8} lg={8} xl={9} xs={8}>\r\n                        <Row >\r\n                          {products?.map(product => (\r\n                          <Col key={product._id} sm={12} md={6} lg={4} xl={3} xs={12} className=\"d-flex\">\r\n                              <Product product={product} />\r\n                          </Col>\r\n                            ))}\r\n                            {/* <Paginate page={page} pages={pages} keyword={keyword}></Paginate> */}\r\n                        </Row>\r\n                      </Col>\r\n                      <Col>\r\n                          <Search onSearch={ setSearchValue}></Search>\r\n                      </Col>\r\n                    </Row>\r\n                  </Container>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterScreen","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove} disabled={props.qty === 0}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\nimport { removeItem , addItem} from '../../../store/cart-actions'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        dispatch(removeItem(id))\r\n    }\r\n\r\n    const cartItemAddHanlder = id => {\r\n\r\n        dispatch(addItem(id))\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        cartItems?.map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price}\r\n                       onRemove={() => cartItemRemoveHanlder(order.id)} \r\n                       onAdd={() => cartItemAddHanlder(order.id)}>\r\n\r\n            </CartItem>\r\n \r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button}> Narudzba</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.order);\r\n    const { order: { orderItems } } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = props.value.orderi?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    //const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    console.log('ovo je value:', props.value)\r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        props.value.orderi?.map(order =>\r\n            (<CartItem key={order._id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos: </span>\r\n            <span><strong>RSD {totalAmount?.toFixed(2)}</strong></span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Order number: </span>\r\n            <span>{props.value.orderId}</span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport CategoryScreen from \"./screens/CategoryScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport ProductCreateScreen from \"./screens/ProductCreateScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport FilterScreen from \"./screens/FilterScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const [value, setValue] = useState({})\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = (event) =>{\r\n    setValue(event)\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = (event) => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder} value={value}></Order> }\r\n      {<Header onShowCart={showCartHalnder}/> }\r\n      <main >\r\n        <Container className=\"extended-container\" style={{ position:\"relative\"}}>\r\n        <Container className=\"container-fluid\" style={{   backgroundColor: '#FFF'}}>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/categories/:id\" element={<CategoryScreen />}></Route>\r\n            <Route path=\"/filter\" element={<FilterScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/admin/createproduct\" element={<ProductCreateScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </Container>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};"],"sourceRoot":""}