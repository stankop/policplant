{"version":3,"sources":["compontents/UI/CartModal.module.css","compontents/Header.module.css","store/product-slice.js","store/productDetails-slice.js","store/cart-slice.js","store/user_slice.js","store/userRegister-slice.js","store/userDetails-slice.js","store/userUpdateProfile-slice.js","store/shipping-slice.js","store/payment-slice.js","store/order-slice.js","store/orderDetails-slice.js","store/orderPay-slice.js","store/orderOrdersProfile-slice.js","store/userList-slice.js","store/userDelete-slice.js","store/review-slice.js","store/carusel-slice.js","store/deleteProduct-slice.js","store/createProduct-slice.js","store/userUpdate-slice.js","store/updateProduct-slice.js","store/orderList-slice.js","store/store.js","compontents/SearchBox.js","store/user-actions.js","compontents/UI/Cart/CartIcon.js","compontents/UI/HeaderCardButton.js","assets/images/berberis-erecta-1-350x350.jpg","compontents/Header.js","compontents/Footer.js","compontents/Rating.js","compontents/Product.js","store/product-actions.js","compontents/Loader.js","compontents/Message.js","compontents/Paginate.js","compontents/ProductCarusel.js","store/carusel-actions.js","screens/HomeScreen.js","store/cart-actions.js","screens/ProductScreen.js","screens/CartScreen.js","compontents/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","store/userRegister-actions.js","store/userDetails-actions.js","screens/ProfileScreen.js","store/orderOrdersProfile-actions.js","store/userUpdateProfile-actions.js","store/shipping-actions.js","compontents/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","store/payment-actions.js","screens/PlaceOrderScreen.js","store/order-actions.js","store/orderDetails-actions.js","screens/OrderScreen.js","store/orderPay-actions.js","store/userList-actions.js","screens/UserListScreen.js","store/userDelete-actions.js","screens/ProductListScreen.js","store/createProduct-actions.js","store/deleteProduct-actions.js","screens/InfoScreen.js","screens/ONamaScreen.js","screens/KontakScreen.js","screens/UserEditScreen.js","store/userUpdate-actions.js","screens/ProductEditScreen.js","store/updateProduct-actions.js","screens/OrderListScreen.js","store/orderList-actions.js","compontents/UI/CartModal.js","compontents/UI/Cart/CartItem.js","compontents/UI/Cart/Cart.js","compontents/UI/Order/OrderModal.js","compontents/UI/Order/Order.js","App.js","reportWebVitals.js","index.js","compontents/UI/Order/OrderModal.module.css","compontents/UI/Cart/Cart.module.css","compontents/UI/Cart/CartItem.module.css","compontents/UI/HeaderCartButton.module.css"],"names":["module","exports","productListSlice","createSlice","name","initialState","products","loading","error","page","pages","reducers","productListRequest","state","productListSuccess","action","payload","productListFail","productListActions","actions","productListReducer","reducer","productDetailsSlice","product","productDetailsRequest","productDetailsSuccess","productDetailsFail","productDetailsActions","productDetailsReducer","cartItemsFromStorage","localStorage","getItem","JSON","parse","cartSlice","cartItems","dostava","placanje","addCartItem","newItem","existItem","find","x","id","item","qty","push","removeCartItem","excludeCartItem","filter","cleanCartItems","addDostavaAndPlacanje","obj","cartActions","cartReducer","userInfoFromStorage","userSlice","userInfo","userLoginRequest","userLoginSuccess","userLoginFail","userLogout","userActions","userReducer","userRegisterSlice","userRegisterRequest","userRegisterSuccess","userRegisterFail","userRegisterActions","userRegisterReducer","userDetailsSlice","user","userDetailsRequest","userDetailsSuccess","userDetailsFail","userDetailsReset","userDetailsActions","userDetailsReducer","userUpdateProfileSlice","success","userUpdateProfileRequest","userUpdateProfileFail","userUpdateProfileReset","userUpdateProfileActions","userUpdateProfileReducer","shippingAddressFromStorage","shippingSlice","shippingAddress","saveShippingAdress","shippingActions","shippingReducer","paymentSlice","paymentMethod","savePaymentMethod","paymentActions","paymentReducer","orderSlice","order","orderCreateRequest","orderCreateSuccess","orderCreateFail","orderCreateReset","orderActions","orderReducer","orderDetailsSlice","orderDetailsRequest","orderDetailsSuccess","orderDetailsFail","orderDetailsActions","orderDetailsReducer","orderPaySlice","orderPayRequest","orderPaySuccess","orderPayFail","orderPayReset","orderPayActions","orderPayReducer","orderOrdersProfileSlice","orders","orderOrdersProfileRequest","orderOrdersProfileSuccess","orderOrdersProfileFail","orderOrdersProfileReset","orderOrdersProfileActions","orderOrdersProfileReducer","userListSlice","users","userListRequest","userListSuccess","userListFail","console","log","userListReset","userListActions","userListReducer","userDeleteSlice","userDeleteRequest","userDeleteSuccess","userDeleteFail","userDeleteReset","userDeleteActions","userDeleteReducer","reviewCreateSlice","reviewCreateRequest","reviewCreateSuccess","reviewCreateFail","reviewCreateReset","reviewCreateReducer","caruselSlice","caruselRequest","caruselSuccess","caruselFail","caruselActions","caruselReducer","deleteProductSlice","deleteProductRequest","deleteProductSuccess","deleteProductFail","deleteProductReset","deleteProductActions","deleteProductReducer","createProductSlice","createProductRequest","createProductSuccess","createProductFail","createProductReset","createProductActions","createProductReducer","userUpdateSlice","userUpdateRequest","userUpdateSuccess","userUpdateFail","userUpdateReset","userUpdateActions","userUpdateReducer","updateProductSlice","updateProductRequest","updateProductSuccess","updateProductFail","updateProductReset","updateProductActions","updateProductReducer","orderListSlice","orderListRequest","orderListSuccess","orderListFail","orderListActions","orderListReducer","store","configureStore","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","shipping","payment","orderDetail","orderPay","orderOrdersProfile","userList","userDelete","reviewCreate","carusel","deleteProduct","createProduct","userUpdate","updateProduct","orderList","SearchBox","useState","keyword","setKeyword","navigate","useNavigate","location","useLocation","Form","onSubmit","e","preventDefault","pathname","Container","Row","Col","md","Control","type","inline","className","onChange","target","value","Button","variant","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","props","btnIsHihg","setBtnIsHigh","useSelector","numberOfCartItems","reduce","currentNumber","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","icon","badge","Header","dispatch","useDispatch","Navbar","bg","expand","collapseOnSelect","to","Brand","Text","style","textAlign","fontSize","faPhone","Nav","Link","faFlag","HeaderCardButton","onShowCart","Toggle","pading","Collapse","margin","size","span","offset","faCartFlatbed","faInfo","faAnchor","faContactBook","NavDropdown","title","user_name","Item","event","removeItem","faUser","isAdmin","Footer","Rating","Product","Card","_id","Img","src","image","Body","Title","as","color","price","countInStock","listProducts","fetchData","axios","get","data","cartData","response","detail","message","productDetails","Loader","Spinner","animation","role","height","width","display","Message","children","Alert","Heading","Paginate","Pagination","Array","keys","map","active","ProductCarusel","productTop","getState","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","useSearchParams","search","sm","lg","xl","addToCart","setItem","stringify","ProductScreen","match","useParams","setQty","productDet","window","scrollTo","top","left","behavior","ListGroup","category","flowering_time","place_of_planting","xs","Number","disabled","description","CartScreen","setDostava","setPlacanje","removeFromCartHandler","removeFromCart","chechoutHandler","addDostavaAndPlacanjeCart","rounded","faTrash","border","toFixed","acc","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","config","headers","post","login","Group","controlId","Label","placeholder","varaiant","RegisterScreen","username","setName","fullname","setUserName","place","setPlace","address","setAddress","self_phone","setSelfPhone","fix_phone","setFixPhone","confirmPassword","setConfirmPassword","setMessage","register","required","getUserDetails","Authorization","token","ProfileScreen","loadingOrders","errorOrders","Object","put","userUpdateProfileSuccess","updateUserProfile","Table","striped","responsive","createdAt","substring","totalPrice","isPaid","paidAt","saveShippingAddress","CheckoutSteps","step1","step2","step3","ShippingScreen","setValue","setPost","demands","setDemands","TabContext","Box","sx","borderBottom","borderColor","TabList","Tab","TabPanel","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","orderCreate","itemsPrice","shippingPrice","taxPrice","onShowOrder","index","remove","createOrder","orderItems","ukupno","OrderScreen","orderId","orderDetails","loadingPay","successPay","setItemPrice","href","isDelivered","deliveredAt","lenght","options","layout","amount","onSuccess","paymentResult","payOrder","listUsers","UserListScreen","uDelete","deleteHandler","confirm","delete","deleteUser","deleteUserReset","bordered","hover","ProductListScreen","deleteProd","loadingDelete","errorDelete","successDelete","crProd","loadingCreate","errorCreate","successCreate","createdProduct","createProductHandler","InfoScreen","ONamaScreen","KontakScreen","UserEditScreen","setIsAdmin","userId","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductEditScreen","productId","setPrice","setImage","setColor","flow","setFlow","setCategory","setCountInStock","setDescription","uploading","setUploading","productDetail","productUpd","uploadFileHandler","file","files","formData","FormData","append","defaultValue","controlid","Select","colorChoises","col","categoryChoises","cat","floweringChoises","placeChoises","OrderListScreen","listOrds","deliverdAt","Backdrop","backdrop","onClose","ModalOverlay","modal","content","portalelement","document","getElementById","Modal","ReactDom","createPortal","CartItem","summary","onRemove","onAdd","Cart","totalAmount","total","hasItems","cartItemRemoveHanlder","cartItemAddHanlder","cartitems","bind","CartModal","Order","OrderModal","App","cartIsShown","setCartIsShown","orderIsShown","setOrderIsShown","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render"],"mappings":";yFACAA,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,yBAAyB,aAAa,8B,kECAvGD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,aAAa,2B,uFCCzDC,EAAmBC,YAAY,CACjCC,KAAM,cACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,KACPC,KAAK,EACLC,MAAM,GAEVC,SAAS,CACLC,mBADK,SACcC,GACfA,EAAMN,SAAU,EAChBM,EAAMP,SAAW,EACpB,EAEDQ,mBANK,SAMcD,EAAOE,GACdF,EAAMN,SAAU,EAChBM,EAAMP,SAAWS,EAAOC,QAAQV,SAChCO,EAAMJ,KAAOM,EAAOC,QAAQP,KAC5BI,EAAMH,MAAQK,EAAOC,QAAQN,KACxC,EAEDO,gBAbK,SAaWJ,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,KAIIE,EAAqBhB,EAAiBiB,QACtCC,EAAqBlB,EAAiBmB,QC9B7CC,EAAsBnB,YAAY,CACpCC,KAAM,UACNC,aAAc,CACNkB,QAAS,CAAC,EACVhB,SAAS,EACTC,MAAM,MAGdG,SAAS,CACLa,sBADK,SACiBX,GAClBA,EAAMN,SAAU,CAEnB,EAEDkB,sBANK,SAMiBZ,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAMU,QAAUR,EAAOC,OAClC,EAEDU,mBAXK,SAWcb,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,KAIIW,EAAwBL,EAAoBH,QAC5CS,EAAwBN,EAAoBD,QC3BnDQ,EAAuBC,aAAaC,QAAQ,aACnBC,KAAKC,MAAMH,aAAaC,QAAQ,cAChC,GACzBG,EAAY/B,YAAY,CAC1BC,KAAM,OACNC,aAAc,CACV8B,UAAUN,EACVO,QAAQ,GACRC,SAAS,IAEb1B,SAAS,CACL2B,YADK,SACOzB,EAAOE,GAEf,IAAMwB,EAAUxB,EAAOC,QACjBwB,EAAY3B,EAAMsB,UAAUM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOJ,EAAQI,EAArB,IACrCH,EACK3B,EAAMsB,UAAUM,MAAK,SAAAG,GAAI,OAAIA,EAAKD,KAAOH,EAAUG,EAA1B,IAA8BE,KAAON,EAAQM,IAItEhC,EAAMsB,UAAUW,KAAKP,EAEhC,EAEDQ,eAdK,SAcUlC,EAAOE,GACd,IAAM4B,EAAK5B,EAAOC,QACZgC,EAAkBnC,EAAMsB,UAAUc,QAAO,SAAAP,GAAC,OAAIA,EAAEC,KAAOA,CAAb,IAChD9B,EAAMsB,UAAYa,CACzB,EAEFE,eApBM,SAoBSrC,EAAOE,GAEjBF,EAAMsB,UAAU,EACpB,EAEDgB,sBAzBM,SAyBgBtC,EAAOE,GACxB,IAAMqC,EAAMrC,EAAOC,QACnBH,EAAMuB,QAAUgB,EAAIhB,QACpBvB,EAAMwB,SAAWe,EAAIf,QACzB,KAIKgB,EAAcnB,EAAUf,QACxBmC,EAAcpB,EAAUb,QC5C/BkC,EAAsBzB,aAAaC,QAAQ,YAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEzByB,EAAYrD,YAAY,CACtBC,KAAM,OACNC,aAAc,CACVoD,SAAUF,EACVhD,SAAS,EACTC,MAAO,IAEXG,SAAU,CACN+C,iBADM,SACW7C,GACbA,EAAMN,SAAU,CAEnB,EAEDoD,iBANM,SAMW9C,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAM4C,SAAW1C,EAAOC,OAC3B,EAED4C,cAXM,SAWQ/C,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EAED6C,WAhBM,SAgBKhD,EAAOE,GACdF,EAAM4C,SAAW,IAEpB,KAMAK,EAAcN,EAAUrC,QACxB4C,EAAcP,EAAUnC,QCrC/BkC,EAAsBzB,aAAaC,QAAQ,YAC7CC,KAAKC,MAAMH,aAAaC,QAAQ,aAChC,KAEEiC,EAAoB7D,YAAY,CACpCC,KAAM,eACNC,aAAc,CACZoD,SAAUF,EACVhD,SAAS,EACTC,MAAO,IAETG,SAAU,CACRsD,oBADQ,SACYpD,GAClBA,EAAMN,SAAU,CACjB,EAED2D,oBALQ,SAKYrD,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAM4C,SAAW1C,EAAOC,OACzB,EAEDmD,iBAVQ,SAUStD,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACtB,EAED6C,WAfQ,SAeGhD,EAAOE,GAChBF,EAAM4C,SAAW,IAClB,KAMQW,EAAsBJ,EAAkB7C,QACxCkD,EAAsBL,EAAkB3C,QClC/CiD,EAAmBnE,YAAY,CAC7BC,KAAM,OACNC,aAAc,CACVkE,KAAM,CAAC,EACPhE,SAAS,EACTC,MAAO,IAEXG,SAAU,CACN6D,mBADM,SACa3D,GACfA,EAAMN,SAAU,CAEnB,EAEDkE,mBANM,SAMa5D,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAM0D,KAAOxD,EAAOC,OACvB,EAED0D,gBAXM,SAWU7D,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EAED2D,iBAhBM,SAgBW9D,EAAOE,GACpBF,EAAM0D,KAAO,CAAC,CAEjB,KAQAK,EAAqBN,EAAiBnD,QACtC0D,EAAqBP,EAAiBjD,QCnC7CyD,EAAyB3E,YAAY,CACnCC,KAAM,oBACNC,aAAc,CACVoD,SAAU,CAAC,EACXlD,SAAS,EACTC,MAAO,GACPuE,SAAS,GAEbpE,SAAU,CACNqE,yBADM,SACmBnE,GACrBA,EAAMN,SAAU,CAEnB,EAEDkE,mBANM,SAMa5D,EAAOE,GACtBF,EAAMN,SAAU,EAChBM,EAAM4C,SAAW1C,EAAOC,QACxBH,EAAMkE,SAAS,CAClB,EAEDE,sBAZM,SAYgBpE,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACDkE,uBAhBM,SAgBiBrE,EAAOE,GAC1BF,EAAM4C,SAAW,CAAC,CACrB,KAQA0B,EAA2BL,EAAuB3D,QAClDiE,EAA2BN,EAAuBzD,QCpCzDgE,EAA6BvD,aAAaC,QAAQ,mBACzBC,KAAKC,MAAMH,aAAaC,QAAQ,oBAChC,CAAC,EAE1BuD,EAAgBnF,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACXkF,gBAAiBF,GAEpB1E,SAAS,CAEL6E,mBAFK,SAEc3E,EAAOE,GAElBF,EAAM0E,gBAAkBxE,EAAOC,OAEtC,KAKIyE,EAAkBH,EAAcnE,QAChCuE,EAAkBJ,EAAcjE,QCpBvCsE,EAAexF,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVuF,cAAc,IAElBjF,SAAS,CACLkF,kBADK,SACahF,EAAOE,GAErBF,EAAM+E,cAAgB7E,EAAOC,OAChC,KAII8E,EAAiBH,EAAaxE,QAC9B4E,EAAiBJ,EAAatE,QCdrC2E,EAAa7F,YAAY,CAC3BC,KAAM,QACNC,aAAc,CACXE,SAAS,EACTwE,SAAS,EACTkB,MAAM,CAAC,EACPzF,MAAO,MAEVG,SAAS,CACLuF,mBADK,SACcrF,EAAOE,GAEtBF,EAAMN,SAAU,CACnB,EAED4F,mBANK,SAMctF,EAAOE,GAElBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,EAChBlE,EAAMoF,MAAQlF,EAAOC,OAC5B,EAEDoF,gBAbK,SAaWvF,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EAEDqF,iBAlBK,SAkBYxF,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAMoF,MAAQ,CAAC,CAClB,KAKIK,EAAeN,EAAW7E,QAC1BoF,EAAeP,EAAW3E,QCpCjCmF,EAAoBrG,YAAY,CAClCC,KAAM,eACNC,aAAc,CACV4F,MAAM,CAAC,EACP1F,SAAS,EACTC,MAAO,MAEXG,SAAS,CACL8F,oBADK,SACe5F,GAChBA,EAAMN,SAAU,CAEnB,EAEDmG,oBANK,SAMe7F,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAMoF,MAAQlF,EAAOC,OAC5B,EAED2F,iBAXK,SAWY9F,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,KAII4F,EAAsBJ,EAAkBrF,QACxC0F,EAAsBL,EAAkBnF,QCzB/CyF,EAAgB3G,YAAY,CAC9BC,KAAM,WACNC,aAAc,CACXE,SAAS,EACTwE,SAAS,GAGZpE,SAAS,CACLoG,gBADK,SACWlG,EAAOE,GAEnBF,EAAMN,SAAU,CACnB,EAEDyG,gBANK,SAMWnG,EAAOE,GAEfF,EAAMN,SAAU,EAEhBM,EAAMkE,SAAU,CACvB,EAEDkC,aAbK,SAaQpG,EAAOE,GAChBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EAEDkG,cAlBK,SAkBSrG,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CACnB,KAKIoC,EAAkBL,EAAc3F,QAChCiG,EAAkBN,EAAczF,QCnCvCgG,EAA0BlH,YAAY,CACxCC,KAAM,eACNC,aAAc,CACViH,OAAO,GACP/G,SAAS,EACTC,MAAO,MAEXG,SAAS,CACL4G,0BADK,SACqB1G,GACtBA,EAAMN,SAAU,CAEnB,EAEDiH,0BANK,SAMqB3G,EAAOE,GACzBF,EAAMN,SAAU,EAChBM,EAAMyG,OAASvG,EAAOC,OAC7B,EAEDyG,uBAXK,SAWkB5G,EAAOE,GAC1BF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACD0G,wBAfK,SAemB7G,EAAOE,GAC3BF,EAAMN,SAAU,EAChBM,EAAMyG,OAAS,EAClB,KAIIK,EAA4BN,EAAwBlG,QACpDyG,EAA4BP,EAAwBhG,QC1B3DwG,GAJsB/F,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGzC5B,YAAY,CAC1BC,KAAM,WACNC,aAAc,CACVyH,MAAO,GACPvH,SAAS,EACTC,MAAO,MAEXG,SAAU,CACNoH,gBADM,SACUlH,GACZA,EAAMN,SAAU,CAEnB,EAEDyH,gBANM,SAMUnH,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAMiH,MAAQ/G,EAAOC,QACrBH,EAAML,MAAQ,IACjB,EAEDyH,aAZM,SAYOpH,EAAOE,GAChBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrBkH,QAAQC,IAAI,uBACf,EAEDC,cAlBM,SAkBQvH,EAAOE,GACjBF,EAAMiH,MAAQ,EAEjB,MAMAO,EAAkBR,EAAc1G,QAChCmH,EAAkBT,EAAcxG,QCnCvCkH,IAJsBzG,aAAaC,QAAQ,aAClBC,KAAKC,MAAMH,aAAaC,QAAQ,aAGvC5B,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACV0E,SAAS,EACTxE,SAAS,EACTC,MAAO,MAEXG,SAAU,CACN6H,kBADM,SACY3H,GACdA,EAAMN,SAAU,CAEnB,EAEDkI,kBANM,SAMY5H,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CACnB,EAED2D,eAXM,SAWS7H,EAAOE,GAClBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACD2H,gBAfM,SAeU9H,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CACnB,MAMA6D,GAAoBL,GAAgBpH,QACpC0H,GAAoBN,GAAgBlH,QCpC3CyH,GAAoB3I,YAAY,CAClCC,KAAM,eACNC,aAAc,CACV0E,SAAQ,EACRxE,SAAS,EACTC,MAAO,MAEXG,SAAS,CACLoI,oBADK,SACelI,GAChBA,EAAMN,SAAU,CAEnB,EAEDyI,oBANK,SAMenI,EAAOE,GACfF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CAC3B,EAEDkE,iBAXK,SAWYpI,EAAOE,GACpBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACDkI,kBAfK,SAearI,EAAOE,GACrBF,EAAMkE,SAAU,EAChBlE,EAAMN,SAAU,EAChBM,EAAML,MAAS,IAClB,KAKI2I,IADsBL,GAAkB3H,QAClB2H,GAAkBzH,SC/B/C+H,GAAejJ,YAAY,CAC7BC,KAAM,UACNC,aAAc,CACVC,SAAU,GACVC,SAAS,EACTC,MAAO,MAGXG,SAAS,CACL0I,eADK,SACUxI,GACXA,EAAMN,SAAU,EAChBM,EAAMP,SAAW,EACpB,EAEDgJ,eANK,SAMUzI,EAAOE,GACVF,EAAMN,SAAU,EAChBM,EAAMP,SAAWS,EAAOC,OAEnC,EAEDuI,YAZK,SAYO1I,EAAOE,GACfF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,KAIIwI,GAAiBJ,GAAajI,QAC9BsI,GAAiBL,GAAa/H,QC5BrCqI,GAAqBvJ,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRwE,SAAS,EACTvE,MAAO,MAEXG,SAAS,CACLgJ,qBADK,SACgB9I,GACjBA,EAAMN,SAAU,CACnB,EAEDqJ,qBALK,SAKgB/I,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CAEnB,EAED8E,kBAXK,SAWahJ,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACD8I,mBAfK,SAecjJ,EAAOE,GACtBF,EAAML,MAAQ,KACdK,EAAMkE,SAAU,CACnB,KAIIgF,GAAuBL,GAAmBvI,QAC1C6I,GAAuBN,GAAmBrI,QC9BjD4I,GAAqB9J,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRwE,SAAS,EACTvE,MAAO,KACPe,QAAS,CAAC,GAEdZ,SAAS,CACLuJ,qBADK,SACgBrJ,GACjBA,EAAMN,SAAU,CAEnB,EAED4J,qBANK,SAMgBtJ,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,EAChBlE,EAAMU,QAAUR,EAAOC,OAC1B,EAEDoJ,kBAZK,SAYavJ,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrBH,EAAMkE,SAAU,CACnB,EACDsF,mBAjBK,SAiBcxJ,EAAOE,GAEtBF,EAAMU,QAAU,CAAC,EACjBV,EAAMkE,SAAU,CACnB,KAIIuF,GAAuBL,GAAmB9I,QAC1CoJ,GAAuBN,GAAmB5I,QClCjDmJ,GAAkBrK,YAAY,CAC5BC,KAAM,aACNC,aAAc,CACVkE,KAAK,CAAC,EACNQ,SAAS,EACTxE,SAAS,EACTC,MAAO,MAEXG,SAAU,CACN8J,kBADM,SACY5J,GACdA,EAAMN,SAAU,CAEnB,EAEDmK,kBANM,SAMY7J,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,CACnB,EAED4F,eAXM,SAWS9J,EAAOE,GAClBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,EACD4J,gBAfM,SAeU/J,EAAOE,GACnBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,EAChBlE,EAAM0D,KAAO,CAAC,CACjB,KAMAsG,GAAoBL,GAAgBrJ,QACpC2J,GAAoBN,GAAgBnJ,QClC3C0J,GAAqB5K,YAAY,CACnCC,KAAM,gBACNC,aAAc,CACVE,SAAQ,EACRwE,SAAS,EACTvE,MAAO,KACPe,QAAS,CAAC,GAEdZ,SAAS,CACLqK,qBADK,SACgBnK,GACjBA,EAAMN,SAAU,CAEnB,EAED0K,qBANK,SAMgBpK,EAAOE,GACxBF,EAAMN,SAAU,EAChBM,EAAMkE,SAAU,EAChBlE,EAAMU,QAAUR,EAAOC,OAC1B,EAEDkK,kBAZK,SAYarK,EAAOE,GACrBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,QACrBH,EAAMkE,SAAU,CACnB,EACDoG,mBAjBK,SAiBctK,EAAOE,GAEtBF,EAAMU,QAAU,CAAC,EACjBV,EAAMkE,SAAU,CACnB,KAIIqG,GAAuBL,GAAmB5J,QAC1CkK,GAAuBN,GAAmB1J,QClCjDiK,GAAiBnL,YAAY,CAC/BC,KAAM,YACNC,aAAc,CACViH,OAAQ,GACR/G,SAAS,EACTC,MAAO,MAGXG,SAAS,CACL4K,iBADK,SACY1K,GACbA,EAAMN,SAAU,EAChBM,EAAMyG,OAAS,EAClB,EAEDkE,iBANK,SAMY3K,EAAOE,GACZF,EAAMN,SAAU,EAChBM,EAAMyG,OAASvG,EAAOC,OAEjC,EAEDyK,cAZK,SAYS5K,EAAOE,GACjBF,EAAMN,SAAU,EAChBM,EAAML,MAAQO,EAAOC,OACxB,KAII0K,GAAmBJ,GAAenK,QAClCwK,GAAmBL,GAAejK,QCqBhCuK,GA3BDC,YAAe,CACzBxK,QAAQ,CACJyK,YAAa1K,EACbG,QAASK,EACTmK,KAAMzI,EACN0I,UAAWjI,EACXkI,aAAc5H,EACd6H,YAAarH,EACbsH,kBAAmB/G,EACnBgH,SAAU1G,EACV2G,QAAStG,EACTE,MAAOM,EACP+F,YAAazF,EACb0F,SAAUnF,EACVoF,mBAAoB5E,EACpB6E,SAAUnE,EACVoE,WAAY7D,GACZ8D,aAAcxD,GACdyD,QAASnD,GACToD,cAAe7C,GACf8C,cAAevC,GACfwC,WAAYjC,GACZkC,cAAe3B,GACf4B,UAAWtB,M,mJCMJuB,OA9Cf,WAEI,MAA8BC,mBAAS,IAAvC,oBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,eACXC,EAAWC,eAcnB,OAEE,eAACC,GAAA,EAAD,CAAMC,SAdgB,SAACC,GACnBA,EAAEC,iBACF3F,QAAQC,IAAI,sBAAuBiF,GAG/BE,EAFDF,EAEU,aAAD,OAAcA,GAGbI,EAASM,SAGzB,EAGD,SACI,eAACC,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,GAAT,SACI,eAACR,GAAA,EAAKS,QAAN,CACIC,KAAK,OACLhO,KAAK,UACLiO,OAAQ,OACRC,UAAU,kBACVC,SAAU,SAACX,GAAD,OAAOP,EAAWO,EAAEY,OAAOC,MAA3B,MAGlB,eAACR,GAAA,EAAD,CAAKC,GAAI,EAAT,SACA,eAACQ,GAAA,EAAD,CACIN,KAAK,SACLO,QAAQ,kBACRL,UAAU,MAHd,8BAWf,E,w0MC5CM,ICKUM,GAZA,WACb,OACE,sBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,uBAAMC,EAAE,6RAGb,E,oBC6CYC,GAlDU,SAACC,GAEtB,MAAkC/B,oBAAS,GAA3C,oBAAOgC,EAAP,KAAkBC,EAAlB,KAGQjN,EADKkN,aAAY,SAACxO,GAAD,OAAWA,EAAMkL,IAAjB,IACjB5J,UAOFmN,GAJYD,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC3BvI,SAGe,OAAGtB,QAAH,IAAGA,OAAH,EAAGA,EAAWoN,QAAO,SAACC,EAAe5M,GACxD,OAAO4M,EAAiB5M,EAAKC,GAChC,GAAE,IAEG4M,EAAU,UAAMC,KAAQC,OAAd,YAAwBR,EAAaO,KAAQE,KAAO,IAqBpE,OAlBAC,qBAAU,WAEN,GAAyB,KAAb,OAAT1N,QAAS,IAATA,OAAA,EAAAA,EAAW2N,QAAd,CAGAV,GAAa,GAEb,IAAMW,EAAQC,YAAW,WACrBZ,GAAa,EAChB,GAAE,KAEH,OAAO,WACHa,aAAaF,EAChB,CATA,CAWJ,GAAE,CAAC5N,IAIA,0BAAQmM,UAAWmB,EAAYS,QAAShB,EAAMgB,QAA9C,UACI,uBAAM5B,UAAWoB,KAAQS,KAAzB,SACI,eAAC,GAAD,MAEJ,+CACA,uBAAM7B,UAAWoB,KAAQU,MAAzB,SACKd,MAIhB,E,OCrDc,IC4JAe,OAvIf,SAAgBnB,GACd,IACQzL,EADU4L,aAAY,SAACxO,GAAD,OAAWA,EAAMmL,SAAjB,IACtBvI,SAEF6M,EAAWC,cAIjB,OACE,gBAAC,WAAD,WACA,oCACE,eAACC,GAAA,EAAD,CAAQC,GAAG,OAAO9B,QAAQ,OAAO+B,OAAO,KAAKC,kBAAgB,EAA7D,SACE,gBAAC5C,GAAA,EAAD,WACM,eAAC,iBAAD,CAAe6C,GAAG,IAAlB,SACE,eAACJ,GAAA,EAAOK,MAAR,UACE,iDAIJ,eAACL,GAAA,EAAOM,KAAR,CAAaC,MAAO,CAAEC,UAAW,UAAjC,SACI,iCACE,uBAAKD,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAMe,OAAvD,uBAEA,kDAKN,eAACV,GAAA,EAAOM,KAAR,CAAaC,MAAO,CAAEC,UAAW,UAAjC,SACA,eAAC,iBAAD,CAAeJ,GAAG,IAAlB,SACM,eAACO,GAAA,EAAIC,KAAL,UACE,uBAAKL,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAMkB,OAAvD,wBAKR,eAACb,GAAA,EAAOM,KAAR,CAAaC,MAAO,CAAEC,UAAW,UAAjC,SACA,eAAC,iBAAD,CAAeJ,GAAG,QAAlB,SACM,eAACO,GAAA,EAAIC,KAAL,UACE,eAACE,GAAD,CAAkBpB,QAAShB,EAAMqC,wBAMjD,eAACf,GAAA,EAAD,CAAQC,GAAG,QAAQ9B,QAAQ,QAAQ+B,OAAO,KAAKC,kBAAgB,EAA/D,SACE,eAAC5C,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,WACA,eAACwC,GAAA,EAAOgB,OAAR,CAAe,gBAAc,mBAAmBtD,GAAI,EAAG6C,MAAO,CAAEU,OAAO,KAErE,gBAACjB,GAAA,EAAOkB,SAAR,CAAiB/O,GAAG,mBAApB,UACE,eAACsL,GAAA,EAAD,CAAKC,GAAI,EAAG6C,MAAO,CAAEU,OAAO,GAAIE,OAAO,GAAIC,KAAK,IAAhD,SACE,eAAC,GAAD,MAEF,eAAC3D,GAAA,EAAD,CAAKC,GAAI,CAAE2D,KAAM,GAAIC,OAAQ,GAA7B,SACE,gBAACX,GAAA,EAAD,WACE,eAAC,iBAAD,CAAeP,GAAG,QAAlB,SACE,eAACO,GAAA,EAAIC,KAAL,UACE,uBAAKL,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAM4B,OAAvD,oBAIJ,eAAC,iBAAD,CACEnB,GAAG,QADL,SAEE,eAACO,GAAA,EAAIC,KAAL,UACA,uBAAKL,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAM6B,OAAvD,gBAIF,eAAC,iBAAD,CAAepB,GAAG,SAAlB,SAEE,eAACO,GAAA,EAAIC,KAAL,UACA,uBAAKL,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAM8B,OAAvD,qBAKF,eAAC,iBAAD,CACErB,GAAG,WADL,SAEE,eAACO,GAAA,EAAIC,KAAL,UACA,uBAAKL,MAAO,CAACE,SAAU,QAAvB,UAAgC,eAAC,KAAD,CAAiBd,KAAM+B,OAAvD,oBAKDzO,EACC,gBAAC0O,GAAA,EAAD,CAAaC,MAAO3O,EAAS4O,UAAW1P,GAAG,WAAWoO,MAAO,CAACE,SAAU,QAAxE,UACE,eAAC,iBAAD,CACEL,GAAG,WADL,SAEE,eAACuB,GAAA,EAAYG,KAAb,wBAEF,eAACH,GAAA,EAAYG,KAAb,CAAkBpC,QAtFhB,SAACqC,GACrBjC,GJqBO,SAACA,GAEJxO,aAAa0Q,WAAW,YACxBlC,EAASxM,EAAYD,cACrByM,EAAS1L,EAAmBD,oBAC5B2L,EAAS3I,EAA0BD,2BACnC4I,EAASjI,EAAgB1D,mBAC5B,GI3BF,EAoFmB,uBAKF,eAAC,iBAAD,CACEiM,GAAG,SADL,SAIE,gBAACO,GAAA,EAAIC,KAAL,WACE,eAAC,KAAD,CAAiBjB,KAAMsC,OADzB,sBAMHhP,GAAYA,EAASiP,SACpB,gBAACP,GAAA,EAAD,CAAaC,MAAM,QAAQzP,GAAG,YAAYoO,MAAO,CAACE,SAAU,QAA5D,UACE,eAAC,iBAAD,CAAeL,GAAG,kBAAlB,SACE,eAACuB,GAAA,EAAYG,KAAb,sBAGF,eAAC,iBAAD,CAAe1B,GAAG,qBAAlB,SACE,eAACuB,GAAA,EAAYG,KAAb,yBAGF,eAAC,iBAAD,CAAe1B,GAAG,mBAAlB,SACE,eAACuB,GAAA,EAAYG,KAAb,4CAWlB,KAKL,EC5IcK,OAZf,WACE,OACE,kCACI,eAAC5E,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAKK,UAAU,mBAAf,4CAKf,E,UC8CcsE,I,SCzBAC,OA5Bf,YAA6B,IAAXtR,EAAU,EAAVA,QAChB,OACE,gBAACuR,GAAA,EAAD,CAAMxE,UAAU,mBAAhB,UACI,eAAC,QAAD,CAAMsC,GAAE,oBAAerP,EAAQwR,KAA/B,SACI,eAACD,GAAA,EAAKE,IAAN,CAAUC,IAAK1R,EAAQ2R,UAE3B,gBAACJ,GAAA,EAAKK,KAAN,WACI,eAAC,QAAD,CAAMvC,GAAE,oBAAerP,EAAQwR,KAA/B,SACC,eAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAf,SACI,yBAAQtC,MAAO,CAAEE,SAAU,IAA3B,SAAiC1P,EAAQnB,WAQ9C,gBAAC0S,GAAA,EAAKhC,KAAN,CAAWuC,GAAG,KAAKtC,MAAO,CAAEuC,MAAM,SAAlC,UACS/R,EAAQgS,MADjB,UAGA,eAACT,GAAA,EAAKhC,KAAN,CAAWuC,GAAG,KAAd,SACS9R,EAAQiS,aAAe,EAAI,yBAAQzC,MAAO,CAAEuC,MAAM,SAAvB,uBAAsD,yBAAQvC,MAAO,CAAEuC,MAAM,OAAvB,mCAKrG,E,2yMC3BM,IAAMG,GAAe,WAAyB,IAAxBrG,EAAuB,uDAAb,GAAI3M,EAAS,uCAChD,gDAAO,WAAO6P,GAAP,iFAEHpI,QAAQC,IAAI,kBAAkBiF,GACxBsG,EAHH,yCAGe,8FAEC,OAAZtG,IACCA,EAAU,IAHA,SAMSuG,KAAMC,IAAN,iCAAoCxG,EAApC,iBAAoD3M,IAN7D,uBAMNoT,EANM,EAMNA,KACR3L,QAAQC,IAAI0L,GAPE,kBAQPA,GARO,2CAHf,8DAeCvD,EAASpP,EAAmBN,sBAf7B,SAgBwB8S,IAhBxB,OAgBOI,EAhBP,OAiBCxD,EAASpP,EAAmBJ,mBAAmBgT,IAjBhD,kDAoBCxD,EACIpP,EAAmBD,gBACjB,KAAM8S,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAxBf,0DAAP,qDA8BH,EAEYC,GAAiB,SAACvR,GAC3B,gDAAO,WAAO2N,GAAP,iFAGGoD,EAHH,yCAGe,uGAESC,KAAMC,IAAN,wBAA2BjR,IAFpC,uBAENkR,EAFM,EAENA,KAFM,kBAGPA,GAHO,2CAHf,8DAUCvD,EAAS3O,EAAsBH,yBAVhC,SAWwBkS,IAXxB,OAWOI,EAXP,OAYCxD,EAAS3O,EAAsBF,sBAAsBqS,IAZtD,gDAeCxD,EACI3O,EAAsBD,mBACpB,KAAMqS,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAnBf,yDAAP,qDAyBH,E,UC1CcE,OAlBf,WACE,OACE,eAACC,GAAA,EAAD,CACCC,UAAU,SACVC,KAAK,SACLvD,MAAO,CACHwD,OAAQ,QACRC,MAAO,QACP7C,OAAO,OACP8C,QAAQ,SAPb,SASQ,uBAAMnG,UAAU,UAAhB,yBAKX,E,UCPcoG,OATf,YAAgD,IAA9B/F,EAA6B,EAA7BA,QAASgG,EAAoB,EAApBA,SAAUV,EAAU,EAAVA,QACnC,OACE,gBAACW,GAAA,EAAD,CAAOjG,QAASA,EAAhB,UACE,eAACiG,GAAA,EAAMC,QAAP,UAAgBZ,IACbU,IAGR,E,mBCgBcG,OAtBf,YAA+D,IAA5CpU,EAA2C,EAA3CA,MAAOD,EAAoC,EAApCA,KAAoC,IAA9B2M,eAA8B,MAAtB,GAAsB,EAM5D,OAN4D,EAAlBsF,QAEzB,OAAZtF,IACCA,EAAU,IAEdlF,QAAQC,IAAI,mBAAoBzH,EAAOD,EAAM2M,GAG7C1M,EAAQ,GACJ,eAACqU,GAAA,EAAD,UACM,aAAIC,MAAMtU,GAAOuU,QAAQC,KAAI,SAACxS,GAAD,OAC3B,eAAC,iBAAD,CACIkO,GAAE,oBAAexD,EAAf,iBAA+B1K,EAAI,GADzC,SAEQ,eAACqS,GAAA,EAAWzC,KAAZ,CAAiB6C,OAAQzS,EAAI,GAAKjC,EAAlC,SAAyCiC,EAAI,KAFjCA,EAAE,EADK,KAU1C,E,+zMCoBc0S,OApCf,WAEI,IAAM9E,EAAWC,cACX8E,EAAahG,aAAY,SAAAxO,GAAK,OAAIA,EAAM+L,OAAV,IAC5BrM,EAA4B8U,EAA5B9U,QAASC,EAAmB6U,EAAnB7U,MAAOF,EAAY+U,EAAZ/U,SAK1B,OAHEuP,qBAAU,WACNS,ECXJ,yCAAO,WAAOA,EAAUgF,GAAjB,iFAIG5B,EAJH,yCAIe,uGAGSC,KAAMC,IAAN,8BAHT,uBAGNC,EAHM,EAGNA,KAHM,kBAKPA,GALO,2CAJf,8DAaCvD,EAAS9G,GAAeH,kBAbzB,SAcoBqK,IAdpB,OAcOG,EAdP,OAgBCvD,EAAS9G,GAAeF,eAAeuK,IAhBxC,gDAqBCvD,EACI9G,GAAeD,YACb,KAAMwK,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAzBf,yDAAP,wDDYC,GAAE,CAAC3D,IAGJ/P,EAAU,eAAC,GAAD,IACAC,EAAQ,eAAC,GAAD,CAASmO,QAAQ,WAIvB,eAAC4G,GAAA,EAAD,CAAUC,MAAM,QAAQlH,UAAU,UAAlC,SACKhO,EAAS4U,KAAI,SAAA3T,GAAO,OACjB,eAACgU,GAAA,EAASjD,KAAV,UACI,gBAAC,QAAD,CAAM1B,GAAE,mBAAcrP,EAAQwR,KAA9B,UACI,eAAC0C,GAAA,EAAD,CAAOxC,IAAK1R,EAAQ2R,MAAOwC,IAAKnU,EAAQnB,KAAMuV,OAAK,IAGnD,eAACJ,GAAA,EAASK,QAAV,CAAkBtH,UAAU,kBAA5B,SACI,gCAAK/M,EAAQnB,KAAb,KAAqBmB,EAAQgS,MAA7B,iBANQhS,EAAQwR,IADX,KAiBxC,EEYc8C,OAzCf,WAEE,IAAMvF,EAAWC,cACXhP,EAAU8N,aAAY,SAAAxO,GAAK,OAAIA,EAAMiL,WAAV,IACzBtL,EAA0Ce,EAA1Cf,MAAOD,EAAmCgB,EAAnChB,QAASD,EAA0BiB,EAA1BjB,SAAUG,EAAgBc,EAAhBd,KAAMC,EAAUa,EAAVb,MACxC,EAA4BoV,6BAA5B,oBAAOC,EAAP,KACM3I,GADN,KACgB2I,EAAOnC,IAAI,YAW3B,OATA1L,QAAQC,IAAI,cAAc1H,EAAK2M,EAAQ3M,EAAKC,GAE5CmP,qBAAU,WAERS,EAASmD,GAAarG,EAAQ3M,GAEhC,GAAE,CAAC6P,EAAUlD,IAIX,iCACMA,GAAW,eAAC,GAAD,IAEb,6CACE7M,EAAU,eAAC,GAAD,IACDC,EAAQ,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SAA2BnO,IAErC,+BACG,gBAACwN,GAAA,EAAD,kBACE1N,QADF,IACEA,OADF,EACEA,EAAU4U,KAAI,SAAA3T,GAAO,OACtB,eAAC0M,GAAA,EAAD,CAAuB+H,GAAI,GAAI9H,GAAI,EAAG+H,GAAI,EAAGC,GAAI,EAAjD,SACI,eAAC,GAAD,CAAS3U,QAASA,KADZA,EAAQwR,IADI,IAKrB,eAAC,GAAD,CAAUtS,KAAMA,EAAMC,MAAOA,EAAO0M,QAASA,WAOlE,E,qzMCjDM,IAAM+I,GAAY,SAACxT,EAAIE,GAC1B,gDAAO,WAAOyN,EAAUgF,GAAjB,mFAEG5B,EAFH,yCAEe,uGAESC,KAAMC,IAAN,wBAA2BjR,IAFpC,uBAENkR,EAFM,EAENA,KAFM,kBAGPA,GAHO,2CAFf,uEAUoBH,IAVpB,OAUOG,EAVP,OAWOtS,EAAU,CACZoB,GAAIkR,EAAKd,IACT3S,KAAMyT,EAAKzT,KACX8S,MAAOW,EAAKX,MACZK,MAAOM,EAAKN,MACZC,aAAcK,EAAKL,aACnB3Q,IAAKA,GAETyN,EAASjN,EAAYf,YAAYf,IAEjCO,aAAasU,QAAQ,YAAapU,KAAKqU,UAAUf,IAAWvJ,KAAK5J,YArBlE,4GAAP,uDA6BH,ECwNcmU,OA1Of,YAAgC,EAARC,MAAS,IAEvB5T,EAAO6T,eAAP7T,GAEF2K,EAAWC,eACjB,EAAsBJ,mBAAS,GAA/B,oBAAOtK,EAAP,KAAY4T,EAAZ,KAEMnG,EAAWC,cAEClB,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC5BvI,SAEPoM,qBAAU,WAIL,OAFAS,EAAS4D,GAAevR,IAEjB,WAAQ,CAEnB,GAAE,CAAC2N,EAAU3N,IAEd,IAAM+T,EAAarH,aAAY,SAAAxO,GAAK,OAAIA,EAAMU,OAAV,IAC7BhB,EAA2BmW,EAA3BnW,QAASC,EAAkBkW,EAAlBlW,MAAOe,EAAWmV,EAAXnV,QAkBvB,OATAsO,qBAAU,WACR8G,OAAOC,SAAS,CACZC,IAAK,EACLC,KAAM,EACNC,SAAU,UAEb,GAAE,IAIH,iCACI,eAAC,QAAD,CAAMnG,GAAG,IAAItC,UAAU,uBAAvB,oBAEC/N,EACQ,eAAC,GAAD,IACCC,EACA,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SAA2BnO,IAEzB,iCACI,gBAACwN,GAAA,EAAD,WACQ,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACuH,GAAA,EAAD,CAAOxC,IAAK1R,EAAQ2R,MAAOwC,IAAKnU,EAAQnB,KAAMuV,OAAK,MAIvD,eAAC1H,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAAC8I,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,eAACqI,GAAA,EAAU1E,KAAX,UACI,8BAAK/Q,EAAQnB,SAEjB,eAAC4W,GAAA,EAAU1E,KAAX,UACI,0BAAQvB,MAAO,CAAEuC,MAAM,UAAWrC,SAAS,IAA3C,UAAkD1P,EAAQgS,MAA1D,YAGJ,gBAACyD,GAAA,EAAU1E,KAAX,WACI,kDADJ,IACkC/Q,EAAQ0V,YAG1C,gBAACD,GAAA,EAAU1E,KAAX,WACI,4CADJ,IAC4B/Q,EAAQ+R,SAGpC,gBAAC0D,GAAA,EAAU1E,KAAX,WACI,+CADJ,IAC+B/Q,EAAQ2V,kBAGvC,gBAACF,GAAA,EAAU1E,KAAX,WACI,oDADJ,IACoC/Q,EAAQ4V,0BAIpD,eAAClJ,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAAC4E,GAAA,EAAD,WACA,eAACA,GAAA,EAAKM,MAAN,CAAYrC,MAAO,CAAEC,UAAU,SAAUsC,MAAM,SAA/C,sBACI,gBAAC0D,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,eAACqI,GAAA,EAAU1E,KAAX,UACI,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,oBAGA,eAACA,GAAA,EAAD,UACI,oCAAS1M,EAAQgS,MAAjB,iBAIZ,eAACyD,GAAA,EAAU1E,KAAX,UACI,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,sBAGA,eAACA,GAAA,EAAD,UACI,sBAAK8C,MAAO,CACIuC,MAAM,GAAD,OAAM/R,EAAQiS,aAAe,EAAI,QAAU,OAChDvC,SAAU,IAF1B,SAIM1P,EAAQiS,aAAe,EAAI,YAAc,0BAM1DjS,EAAQiS,aAAe,GACpB,eAACwD,GAAA,EAAU1E,KAAX,UACI,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,wBACA,eAACA,GAAA,EAAD,CAAKmJ,GAAG,OAAO9I,UAAU,OAAzB,SACI,eAACZ,GAAA,EAAKS,QAAN,CACKkF,GAAG,SACH5E,MAAO5L,EACP0L,SAAU,SAACX,GAAD,OAAO6I,EAAOY,OAAOzJ,EAAEY,OAAOC,OAA9B,EAHf,SAKa,aAAIuG,MAAMzT,EAAQiS,cAAcyB,QAAQC,KAAI,SAACxS,GAAD,OACxC,yBAAmB+L,MAAO/L,EAAG,EAA7B,SACKA,EAAE,GADMA,EAAG,EADwB,aAazE,eAACsU,GAAA,EAAU1E,KAAX,UACI,eAAC5D,GAAA,EAAD,CACIJ,UAAU,gBACVgJ,SAAkC,GAAxB/V,EAAQiS,aAClBpF,KAAK,SACL8B,QApHzB,WACrBI,EAAS6F,GAAUkB,OAAO1U,GAAK0U,OAAOxU,KACtCqF,QAAQC,IAAR,gCAAsCxF,EAAtC,gBAAkDE,IAClDyK,EAAS,aAAD,OAAc3K,EAAd,gBAAwBE,GACnC,EA4G6C,wCAcxB,eAACmL,GAAA,EAAD,UACI,gBAACC,GAAA,EAAD,CAAKC,GAAI,GAAT,UACA,qBAAI6C,MAAO,CAACuC,MAAM,SAAlB,4BACI,eAAC0D,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,SACQ,eAACqI,GAAA,EAAU1E,KAAX,UACK/Q,EAAQgW,0BA8EpD,E,kDC3BcC,OAlMf,WAEE,IAAMlK,EAAWC,eAEjB,GADiBE,eACWqI,8BAA5B,oBAAOC,EAAP,KACMpT,GADN,KACWoT,EAAOnC,IAAI,OAGtB,GAFYmC,EAAOnC,IAAI,OAEOzG,mBAAS,UAAvC,oBAAO/K,EAAP,KAAgBqV,EAAhB,KACA,EAAgCtK,mBAAS,UAAzC,oBAAO9K,EAAP,KAAiBqV,EAAjB,KAEMpH,EAAWC,cAETpO,EADKkN,aAAY,SAACxO,GAAD,OAAWA,EAAMkL,IAAjB,IACjB5J,UAGR0N,qBAAU,WAMT,GAAE,CAAClN,IAEJ,IAAMgV,EAAwB,SAAChV,GAC7B2N,EFhB0B,SAAC3N,GAC3B,OAAQ,SAAC2N,EAAUgF,GAEXhF,EAASjN,EAAYN,eAAeJ,IAEpCb,aAAasU,QAAQ,YAAapU,KAAKqU,UAAUf,IAAWvJ,KAAK5J,WAExE,CACJ,CEQYyV,CAAejV,GACzB,EAEKkV,EAAiB,SAACjK,GAGtB0C,EFZqC,SAAClO,EAASC,GAC/C,OAAQ,SAACiO,GACDpI,QAAQC,IAAI,kBACZ,IAAMvF,EAAO,CACTR,UACAC,YAEJiO,EAASjN,EAAYF,sBAAsBP,GAElD,CACJ,CEEYkV,CAA0B1V,EAASC,IAC5CiL,EAAS,YACV,EAOD,OACE,iCACA,gBAACU,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,UACE,wCACsB,IAArB/L,EAAU2N,OACT,gBAAC,GAAD,CAASnB,QAAQ,OAAjB,kCACuB,eAAC,QAAD,CAAMiC,GAAG,IAAT,iCAGvB,eAACoG,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,gBACGxM,QADH,IACGA,OADH,EACGA,EAAW+S,KAAI,SAACtS,GAAD,eACd,eAACoU,GAAA,EAAU1E,KAAX,UACE,gBAACtE,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACuH,GAAA,EAAD,CACExC,IAAKrQ,EAAKsQ,MACVwC,IAAK9S,EAAKxC,KACVuV,OAAK,EACLoC,SAAO,MAGX,eAAC9J,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC,QAAD,CAAM0C,GAAE,oBAAehO,EAAKD,IAA5B,SAAkC,kCAAQ,8BAAKC,EAAKxC,aAEtD,eAAC6N,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,oCAAStL,EAAK2Q,MAAd,YACZ,eAACtF,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACR,GAAA,EAAKS,QAAN,CACEkF,GAAG,SACH5E,MAAO7L,EAAKC,IACZ0L,SAAU,SAACX,GAAD,OACR0C,EAAS6F,GAAUvT,EAAKD,GAAI0U,OAAOzJ,EAAEY,OAAOC,QADpC,EAHZ,SAOI7L,EAAK4Q,aAAe,IAApB,iCAEQwB,MAAK,OAACpS,QAAD,IAACA,OAAD,EAACA,EAAM4Q,qBAFpB,aAEQ,EAA2ByB,eAFnC,aAEI,EAAwCC,KAAI,SAACxS,GAAD,OAC1C,yBAAoB+L,MAAO/L,EAAI,EAAGqO,MAAO,CAAEyD,MAAO,GAAlD,SACG9R,EAAI,GADMA,EAAI,EADyB,SAStD,eAACuL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAACQ,GAAA,EAAD,CACEN,KAAK,SACLO,QAAQ,QACRuB,QAAS,kBAAMyH,EAAsB/U,EAAKD,GAAjC,EAHX,SAKE,eAAC,KAAD,CAAiBwN,KAAM6H,eAvCVpV,EAAKD,GADZ,SAiDtB,eAACsL,GAAA,EAAD,CAAKC,GAAI,EAAT,SACE,gBAAC4E,GAAA,EAAD,CAAMmF,OAAO,OAAb,UACG,eAACnF,GAAA,EAAKzC,OAAN,CAAagD,GAAG,KAAhB,6BACD,gBAAC2D,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACE,eAACqI,GAAA,EAAU1E,KAAX,UACE,gBAACtE,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,kDACZ,gBAACD,GAAA,EAAD,CAAKC,GAAI,EAAT,cAAa,qDAJnB,OASG/L,QATH,IASGA,OATH,EASGA,EAAW+S,KAAI,SAACtS,GAAD,OACZ,eAACoU,GAAA,EAAU1E,KAAX,UACE,gBAACtE,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,UAAatL,EAAKC,IAAlB,gBAAoCD,EAAKxC,QACzC,gBAAC6N,GAAA,EAAD,CAAKC,GAAI,EAAT,eAAetL,EAAKC,IAAMD,EAAK2Q,OAAO2E,QAAQ,UAJtC,IAShB,eAAClB,GAAA,EAAU1E,KAAX,UACM,gBAACtE,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SAAY,+DACZ,gBAACD,GAAA,EAAD,CAAKC,GAAI,EAAT,cAAc/L,EAAUoN,QAAO,SAAC4I,EAAKvV,GAAN,OAAgBuV,EAAMvV,EAAKC,GAA3B,GAAgC,WAIvE,eAACmU,GAAA,EAAU1E,KAAX,UACM,gBAACtE,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,cAAa,sDACb,gBAACD,GAAA,EAAD,CAAKC,GAAI,EAAT,cAAc/L,EAAUoN,QAAO,SAAC4I,EAAKvV,GAAN,OAAgBuV,EAAMvV,EAAKC,IAAMD,EAAK2Q,KAAtC,GAA6C,GAAG2E,QAAQ,GAAvF,eAIR,eAAClB,GAAA,EAAU1E,KAAX,UAEI,gBAAC8F,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW1V,GAAG,sCAAd,SAAoD,4CACpD,gBAAC2V,GAAA,EAAD,CACE,kBAAgB,sCAChBlY,KAAK,iCACLqO,MAAOrM,EACPmM,SAAU,SAACX,GAAD,OAAO6J,EAAW7J,EAAEY,OAAOC,MAA3B,EAJZ,UAME,eAAC8J,GAAA,EAAD,CAAkB9J,MAAM,QAAQ+J,QAAS,eAACC,GAAA,EAAD,IAAWC,MAAM,sBAC1D,eAACH,GAAA,EAAD,CAAkB9J,MAAM,QAAQ+J,QAAS,eAACC,GAAA,EAAD,IAAWC,MAAM,gCAKlE,eAAC1B,GAAA,EAAU1E,KAAX,UAEI,gBAAC8F,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CAAW1V,GAAG,sCAAd,SAAoD,6CACpD,gBAAC2V,GAAA,EAAD,CACE,kBAAgB,sCAChBlY,KAAK,iCACLqO,MAAOpM,EACPkM,SAAU,SAACX,GAAD,OAAO8J,EAAY9J,EAAEY,OAAOC,MAA5B,EAJZ,UAME,eAAC8J,GAAA,EAAD,CAAkB9J,MAAM,SAAS+J,QAAS,eAACC,GAAA,EAAD,IAAWC,MAAM,oBAC3D,eAACH,GAAA,EAAD,CAAkB9J,MAAM,UAAU+J,QAAS,eAACC,GAAA,EAAD,IAAWC,MAAM,iCAKpE,eAAC1B,GAAA,EAAU1E,KAAX,UACE,eAAC5D,GAAA,EAAD,CACEN,KAAK,SACLE,UAAU,YACVgJ,SAAgC,IAArBnV,EAAU2N,OACrBI,QAAS,kBAAM2H,GAAN,EAJX,iDAYV,eAAC7J,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACQ,GAAA,EAAD,CAAQN,KAAK,SACPE,UAAU,YAEV4B,QAtJM,WAElB5C,EAAS,IACV,EAgJO,4CAUT,EC1McqL,OAZf,YAAoC,IAAZhE,EAAW,EAAXA,SACtB,OACE,eAAC5G,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CAAKM,UAAU,4BAAf,SACM,eAACL,GAAA,EAAD,CAAKmJ,GAAI,GAAIlJ,GAAI,EAAjB,SACKyG,OAKhB,ECkFgBiE,OAnFjB,WAEI,MAA2BzL,mBAAS,IAApC,oBAAO0L,EAAP,KAAeC,EAAf,KACA,EAAiC3L,mBAAS,IAA1C,oBACA,GADA,UAC2BA,mBAAS,KAApC,oBACA,GADA,UAC+BA,mBAAS,KAAxC,oBACA,GADA,UACoCA,mBAAS,KAA7C,oBACA,GADA,UACkCA,mBAAS,KAA3C,oBACA,GADA,UACkCA,mBAAS,KAA3C,oBAAO4L,EAAP,KAAkBC,EAAlB,KAEM1I,EAAWC,cAEXjD,EAAWC,eAEjB,EAA4BuI,6BAA5B,oBAAOC,EAAP,KACMkD,GADN,KACiBlD,EAAOnC,IAAI,aAGtBrP,EAAO8K,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IACtBvI,EAA6Bc,EAA7Bd,SAAUjD,EAAmB+D,EAAnB/D,MAAOD,EAAYgE,EAAZhE,QAgBzB,OAdAsP,qBAAU,WAEHpM,GAEC6J,EAAS,IAEhB,GAAC,CAACA,EAAU7J,EAAUwV,IASrB,gBAAC,GAAD,WACE,0CACCzY,GAAS,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACDnO,IAEPD,GAAW,eAAC,GAAD,IACb,gBAACmN,GAAA,EAAD,CAAMC,SAZY,SAAC4E,GACnBA,EAAM1E,iBACNyC,EnBtCa,SAACuI,EAAOE,GACzB,gDAAO,WAAOzI,GAAP,iFAEGoD,EAFH,yCAEe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAJT,SAOSxF,KAAMyF,KAAK,oBAClC,CACI,MAASP,EACT,SAAYE,GACbG,GAXW,uBAONrF,EAPM,EAONA,KAPM,kBAYPA,GAZO,2CAFf,8DAkBCvD,EAASxM,EAAYJ,oBAlBtB,SAmBoBgQ,IAnBpB,OAmBOG,EAnBP,OAoBCvD,EAASxM,EAAYH,iBAAiBkQ,IAEtC/R,aAAasU,QAAQ,WAAYpU,KAAKqU,UAAUxC,IAtBjD,kDA2BCvD,EACIxM,EAAYF,cACV,KAAMmQ,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UA/Bf,0DAAP,qDAoCH,CmBCgBoF,CAAMR,EAAOE,GAEzB,EAQG,UACQ,gBAACrL,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,2BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,QACLqL,YAAY,mBACZhL,MAAOoK,EACPtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,uBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,WACLqL,YAAY,sBACZhL,MAAOsK,EACPxK,SAAU,SAACX,GAAD,OAAOoL,EAAYpL,EAAEY,OAAOC,MAA5B,OAKtB,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASsL,SAAS,UAA/B,6BAKR,eAAC1L,GAAA,EAAD,CAAKM,UAAU,OAAf,SACI,gBAACL,GAAA,EAAD,6BACe,eAAC,QAAD,CAAM2C,GAAKqI,EAAQ,6BAAyBA,GAAa,YAAzD,iCAKxB,E,2yMCgHYU,OAjMf,WAEI,MAA6BxM,mBAAS,IAAtC,oBAAOyM,EAAP,KAAkBC,EAAlB,KACA,EAA2B1M,mBAAS,IAApC,oBAAO0L,EAAP,KAAeC,EAAf,KACA,EAAiC3L,mBAAS,IAA1C,oBAAO2M,EAAP,KAAkBC,EAAlB,KACA,EAA2B5M,mBAAS,IAApC,oBAAO6M,EAAP,KAAeC,EAAf,KACA,EAA+B9M,mBAAS,IAAxC,oBAAO+M,EAAP,KAAiBC,EAAjB,KACA,EAAoChN,mBAAS,IAA7C,oBAAOiN,EAAP,KAAoBC,EAApB,KACA,EAAkClN,mBAAS,IAA3C,oBAAOmN,EAAP,KAAmBC,EAAnB,KACA,EAAkCpN,mBAAS,IAA3C,oBAAO4L,EAAP,KAAkBC,EAAlB,KACA,EAAgD7L,mBAAS,IAAzD,oBAAOqN,EAAP,KAAyBC,EAAzB,KACA,EAAgCtN,mBAAS,IAAzC,oBAAO8G,EAAP,KAAiByG,EAAjB,KAGMpK,EAAWC,cAEXjD,EAAWC,eAEjB,EAA4BuI,6BAA5B,oBAAOC,EAAP,KACMkD,GADN,KACiBlD,EAAOnC,IAAI,aAEtB3H,EAAeoD,aAAY,SAAAxO,GAAK,OAAIA,EAAMoL,YAAV,IAC9BxI,EAA6BwI,EAA7BxI,SAAUjD,EAAmByL,EAAnBzL,MAAOD,EAAY0L,EAAZ1L,QAsB3B,OApBEsP,qBAAU,WAEHpM,GACC6J,EAAS,sBAAD,OAAuB2L,GAEtC,GAAC,CAAC3L,EAAU7J,EAAUwV,IAgBvB,gBAAC,GAAD,WACI,+CACChF,GAAW,eAAC,GAAD,CAAStF,QAAQ,SAAjB,SACHsF,IAERzT,GAAS,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACDnO,IAEPD,GAAW,eAAC,GAAD,IACb,gBAACmN,GAAA,EAAD,CAAMC,SAtBY,SAAC4E,GACnBA,EAAM1E,iBACHkL,GAAYyB,EAEXE,EAAW,0BAEfpK,EC/CgB,SAACsJ,EAAUf,EAAOE,EAAUe,EAAUE,EAAOE,EAASE,EAAYE,GACtF,gDAAO,WAAOhK,GAAP,iFAGGoD,EAHH,yCAGe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,qBAJT,SAOSxF,KAAMyF,KAAK,uBAClC,CACI,KAAOQ,EACP,MAASf,EACT,SAAYiB,EACZ,MAASE,EACT,QAAWE,EACX,WAAcE,EACd,UAAaE,EACb,SAAYvB,GACbG,GAjBW,uBAONrF,EAPM,EAONA,KAPM,kBAkBPA,GAlBO,2CAHf,8DAyBCvD,EAASlM,EAAoBH,uBAzB9B,SA0BoByP,IA1BpB,OA0BOG,EA1BP,OA2BCvD,EAASlM,EAAoBF,oBAAoB2P,IAEjDvD,EAASxM,EAAYH,iBAAiBkQ,IAEtC/R,aAAasU,QAAQ,WAAYpU,KAAKqU,UAAUxC,IA/BjD,kDAmCCvD,EACIlM,EAAoBD,iBAClB,KAAM4P,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAvCf,0DAAP,qDA4CH,CDEgB0G,CAASf,EAAUf,EAAOE,EAAUe,EAAUE,EAAOE,EAASE,EAAYE,GAGtF,EAaG,UACQ,gBAAC5M,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,wBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,uBACZhL,MAAOmL,EACPrL,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAMtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,2BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,QACLqL,YAAY,mBACZhL,MAAOoK,EACPtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,4BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,WACLqL,YAAY,gCACZhL,MAAOqL,EACPvL,SAAU,SAACX,GAAD,OAAOmM,EAAYnM,EAAEY,OAAOC,MAA5B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,6BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,QACLqL,YAAY,gCACZhL,MAAOuL,EACPzL,SAAU,SAACX,GAAD,OAAOqM,EAASrM,EAAEY,OAAOC,MAAzB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,qBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,UACLqL,YAAY,yBACZhL,MAAOyL,EACP3L,SAAU,SAACX,GAAD,OAAOuM,EAAWvM,EAAEY,OAAOC,MAA3B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,aAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,4BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,aACLqL,YAAY,iCACZhL,MAAO2L,EACP7L,SAAU,SAACX,GAAD,OAAOyM,EAAazM,EAAEY,OAAOC,MAA7B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,YAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,mCAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQC,KAAK,YACLqL,YAAY,+BACZhL,MAAO6L,EACP/L,SAAU,SAACX,GAAD,OAAO2M,EAAY3M,EAAEY,OAAOC,MAA5B,OAItB,wBACA,wBACA,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,uBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,WACLqL,YAAY,mBACZhL,MAAOsK,EACPxK,SAAU,SAACX,GAAD,OAAOoL,EAAYpL,EAAEY,OAAOC,MAA5B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,+BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,WACLqL,YAAY,uBACZhL,MAAO+L,EACPjM,SAAU,SAACX,GAAD,OAAO6M,EAAmB7M,EAAEY,OAAOC,MAAnC,OAKtB,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASsL,SAAS,UAA/B,6BAMR,eAAC1L,GAAA,EAAD,CAAKM,UAAU,OAAf,SACI,gBAACL,GAAA,EAAD,+BACiB,eAAC,QAAD,CAAM2C,GAAKqI,EAAQ,0BAAsBA,GAAa,SAAtD,0BAK5B,E,qzMExMM,IAAM4B,GAAiB,SAAClY,GAC3B,gDAAO,WAAO2N,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAEhByE,QAAQC,IAAI,iBAAiBxF,GACvB+Q,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMC,IAAN,qBAAwBjR,EAAxB,KAA+BuW,GATxC,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CANf,8DAoBCvD,EAAS1L,EAAmBJ,sBApB7B,SAqBoBkP,IArBpB,OAqBOG,EArBP,OAsBC3L,QAAQC,IAAI,qCACZmI,EAAS1L,EAAmBH,mBAAmBoP,IAvBhD,kDA4BCvD,EACI1L,EAAmBF,gBACjB,KAAMqP,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAhCf,0DAAP,uDAqCH,E,slZCqKc+G,OA9Lf,WAEI,MAAyB7N,mBAAS,IAAlC,oBAAO/M,EAAP,KAAcyZ,EAAd,KACA,EAA2B1M,mBAAS,IAApC,oBAAO0L,EAAP,KAAeC,EAAf,KACA,EAAkC3L,mBAAS,IAA3C,oBAAO4L,EAAP,KAAkBC,EAAlB,KACA,EAAgD7L,mBAAS,IAAzD,oBAAOqN,EAAP,KAAyBC,EAAzB,KACA,EAAgCtN,mBAAS,IAAzC,oBAAO8G,EAAP,KAAiByG,EAAjB,KAEMpK,EAAWC,cAEXjD,EAAWC,eAEXrB,EAAcmD,aAAY,SAAAxO,GAAK,OAAIA,EAAMqL,WAAV,IAC7B3H,EAAyB2H,EAAzB3H,KAAM/D,EAAmB0L,EAAnB1L,MAAOD,EAAY2L,EAAZ3L,QAGbkD,EADU4L,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC3BvI,SAGAsB,EADkBsK,aAAY,SAAAxO,GAAK,OAAIA,EAAMsL,iBAAV,IACnCpH,QAEFyH,EAAqB6C,aAAY,SAAAxO,GAAK,OAAIA,EAAM2L,kBAAV,IACpClF,EAAuDkF,EAAvDlF,OAAiB2T,EAAsCzO,EAA/CjM,QAA+B2a,EAAgB1O,EAAvBhM,MAsC1C,OAnCEqP,qBAAU,WAEFpM,EAGgC,IAA7B0X,OAAOlG,KAAK1Q,GAAMuL,QAAgB/K,GACjCuL,EAASnL,EAAyBD,0BAClCoL,EAASuK,GAAe,YACxBvK,EC7CZ,yCAAO,WAAOA,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAIViQ,EAPH,yCAOe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SAUSpH,KAAMC,IAAN,uBAAkCsF,GAV3C,uBAUNrF,EAVM,EAUNA,KAVM,kBAYPA,GAZO,2CAPf,8DAuBCvD,EAAS3I,EAA0BJ,6BAvBpC,SAwBoBmM,IAxBpB,OAwBOG,EAxBP,OA0BCvD,EAAS3I,EAA0BH,0BAA0BqM,IA1B9D,kDA+BCvD,EACI3I,EAA0BF,uBACxB,KAAMsM,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAnCf,0DAAP,2DD+CY4F,EAAQtV,EAAKnE,MACb0Y,EAASvU,EAAKsU,QARlBvL,EAAS,SAWhB,GAAC,CAACA,EAAU7J,EAAU6M,EAAU/L,EAAMQ,IAsBvC,gBAACiJ,GAAA,EAAD,WAEI,gBAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,UACI,+CACC+F,GAAW,eAAC,GAAD,CAAStF,QAAQ,SAAjB,SACPsF,IAERzT,GAAS,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACDnO,IAEPD,GAAW,eAAC,GAAD,IACb,gBAACmN,GAAA,EAAD,CAAMC,SA9BY,SAAC4E,GACnBA,EAAM1E,iBACHkL,GAAYyB,EAEXE,EAAW,2BAEPpK,EE7DiB,SAAC/L,GAC9B,gDAAO,WAAO+L,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGViQ,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMyH,IAAN,6BAAwC7W,EAAM2U,GATvD,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CANf,8DAoBCvD,EAASnL,EAAyBH,4BApBnC,SAqBoB0O,IArBpB,OAqBOG,EArBP,OAuBCvD,EAASnL,EAAyBkW,yBAAyBxH,IAE3DvD,EAASxM,EAAYH,oBAErB7B,aAAasU,QAAQ,WAAYpU,KAAKqU,UAAUxC,IA3BjD,kDA+BCvD,EACInL,EAAyBF,sBACvB,KAAM8O,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAnCf,0DAAP,uDAwCH,CFoBwBqH,CAAkB,CACvB,GAAM/W,EAAKwO,IACX,KAAO3S,EACP,MAAQyY,EAER,SAAWE,KAEf2B,EAAW,IAGtB,EAcG,UACQ,gBAAChN,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,mBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,gBACZhL,MAAOrO,EACPmO,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAMtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,2BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,QACLqL,YAAY,kBACZhL,MAAOoK,EACPtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,uBAGA,eAAC9L,GAAA,EAAKS,QAAN,CAEQC,KAAK,WACLqL,YAAY,qBACZhL,MAAOsK,EACPxK,SAAU,SAACX,GAAD,OAAOoL,EAAYpL,EAAEY,OAAOC,MAA5B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,kBAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,+BAGA,eAAC9L,GAAA,EAAKS,QAAN,CAEQC,KAAK,WACLqL,YAAY,uBACZhL,MAAO+L,EACPjM,SAAU,SAACX,GAAD,OAAO6M,EAAmB7M,EAAEY,OAAOC,MAAnC,OAKtB,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASsL,SAAS,UAA/B,0BAMR,gBAACzL,GAAA,EAAD,CAAKC,GAAI,EAAT,UACI,kDAEC+M,EACG,eAAC,GAAD,IAGAC,EACA,eAAC,GAAD,CAASvM,QAAU,SAAnB,SACSuM,IAIT,gBAACK,GAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACnN,UAAU,WAApC,UACI,iCACI,gCACI,qCACA,uCACA,wCACA,uCACA,4CACA,6BAIR,iCAEKhH,EAAO4N,KAAI,SAAAjP,GAAK,OACb,gCACI,8BAAKA,EAAM8M,MACX,8BAAK9M,EAAMyV,UAAUC,UAAU,EAAG,MAClC,gCAAK1V,EAAM2V,WAAX,UACA,8BAAK3V,EAAM4V,OAAS5V,EAAM6V,OAAOH,UAAU,EAAG,IAC1C,oBAAGrN,UAAU,eAAeyC,MAAO,CAAEuC,MAAO,WAEhD,8BAAKrN,EAAM8M,MACX,8BACI,eAAC,iBAAD,CAAenC,GAAE,iBAAY3K,EAAM8M,KAAnC,SACI,eAACrE,GAAA,EAAD,CAAQJ,UAAU,SAAlB,2BAVHrI,EAAM8M,IADF,cAyBxC,EGzMYgJ,GAAsB,SAAClI,GAChC,OAAQ,SAACvD,GAEDA,EAAS7K,EAAgBD,mBAAmBqO,IAE5C/R,aAAasU,QAAQ,kBAAmBpU,KAAKqU,UAAUxC,GAE9D,CACJ,EC6CcmI,OArDf,YAA+C,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MACpC,OACE,gBAAChL,GAAA,EAAD,CAAK7C,UAAU,8BAAf,UACI,eAAC6C,GAAA,EAAImB,KAAL,UACK2J,EACO,eAAC,iBAAD,CAAerL,GAAG,SAAlB,SACI,eAACO,GAAA,EAAIC,KAAL,sBAKR,eAACD,GAAA,EAAIC,KAAL,CAAUkG,UAAQ,EAAlB,qBAOR,eAACnG,GAAA,EAAImB,KAAL,UACK4J,EACO,eAAC,iBAAD,CAAetL,GAAG,YAAlB,SACI,eAACO,GAAA,EAAIC,KAAL,uBAKR,eAACD,GAAA,EAAIC,KAAL,CAAUkG,UAAQ,EAAlB,sBAOR,eAACnG,GAAA,EAAImB,KAAL,UACK6J,EACO,eAAC,iBAAD,CAAevL,GAAG,cAAlB,SACI,eAACO,GAAA,EAAIC,KAAL,yBAKR,eAACD,GAAA,EAAIC,KAAL,CAAUkG,UAAQ,EAAlB,0BAUf,E,kDC8Lc8E,OAtOf,WAEI,IACQ7W,EADS8J,aAAY,SAAAxO,GAAK,OAAIA,EAAMuL,QAAV,IAC1B7G,gBAER,EAA2B4H,mBAAS,KAApC,oBAAOsB,EAAP,KAAe4N,EAAf,KACA,EAAyBlP,mBAAS5H,EAAgBnF,MAAlD,oBAAOA,EAAP,KAAcyZ,EAAd,KACA,EAA2B1M,mBAAS5H,EAAgBsT,OAApD,oBAAOA,EAAP,KAAeC,EAAf,KACA,EAAiC3L,mBAAS5H,EAAgBwT,UAA1D,oBAAOA,EAAP,KAAkBC,EAAlB,KACA,EAAyB7L,mBAAS5H,EAAgB6T,MAAlD,oBAAOA,EAAP,KAAckD,EAAd,KACA,EAA+BnP,mBAAS5H,EAAgB2U,SAAxD,oBAAOA,EAAP,KAAiBC,EAAjB,KACA,EAAkChN,mBAAS5H,EAAgB+U,WAA3D,oBAAOA,EAAP,KAAmBC,EAAnB,KACA,EAAoCpN,mBAAS5H,EAAgB6U,YAA7D,oBAAOA,EAAP,KAAoBC,EAApB,KACA,EAAgClN,mBAAS5H,EAAgBgX,SAAzD,oBAAOA,EAAP,KAAiBC,EAAjB,KAEMlM,EAAWC,cAEXjD,EAAWC,eAEjB,EAA4BuI,6BAA5B,oBAAOC,EAAP,KAwBF,OAxBE,KACiBA,EAAOnC,IAAI,YAwB5B,iCACE,eAAC,GAAD,CAAeqI,OAAK,EAACC,OAAK,IAC1B,gBAACO,GAAA,EAAD,CAAYhO,MAAOA,EAAnB,UACA,eAACiO,GAAA,EAAD,CAAKC,GAAI,CAAEC,aAAa,EAAGC,YAAa,WAAxC,SACE,gBAACC,GAAA,EAAD,CAASvO,SA1BK,SAACX,EAAGa,GAAJ,OAAc4N,EAAS5N,EAAvB,EA0BgB,aAAW,uBAAzC,UACE,eAACsO,GAAA,EAAD,CAAKrE,MAAM,aAAajK,MAAM,MAC9B,eAACsO,GAAA,EAAD,CAAKrE,MAAM,kBAAkBjK,MAAM,WAIvC,eAACuO,GAAA,EAAD,CAAUvO,MAAM,IAAhB,SACI,gBAAC,GAAD,WAEF,+CACA,gBAACf,GAAA,EAAD,CAAMC,SAnCa,SAAC4E,GAEpBA,EAAM1E,iBACNyC,EAASyL,GAAoB,CACzB3b,OAAMyY,QAAOE,WAAUK,OACvBc,UAASI,YAAWF,aAAYmC,aAEpCjP,EAAS,cACZ,EA2BG,UAEQ,gBAACI,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,iCAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,gCACZhL,MAAOrO,GAAc,GACrBmO,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,oBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,mBACZhL,MAAOoK,GAAgB,GACvBtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAKrB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACG,eAAC7L,GAAA,EAAK8L,MAAN,uBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,WACLqL,YAAY,qBACZhL,MAAOsK,GAAsB,GAC7BxK,SAAU,SAACX,GAAD,OAAOoL,EAAYpL,EAAEY,OAAOC,MAA5B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,iBAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,qCAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,oCACZhL,MAAO2K,GAAc,GACrB7K,SAAU,SAACX,GAAD,OAAO0O,EAAQ1O,EAAEY,OAAOC,MAAxB,OAKrB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,UAAtB,UACG,eAAC7L,GAAA,EAAK8L,MAAN,qBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,mBACZhL,MAAOyL,GAAoB,GAC3B3L,SAAU,SAACX,GAAD,OAAOuM,EAAWvM,EAAEY,OAAOC,MAA3B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,YAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,4BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,gCACZhL,MAAO6L,GAAwB,GAC/B/L,SAAU,SAACX,GAAD,OAAO2M,EAAY3M,EAAEY,OAAOC,MAA5B,OAMtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,aAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,8BAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,4BACZhL,MAAO2L,GAA0B,GACjC7L,SAAU,SAACX,GAAD,OAAOyM,EAAazM,EAAEY,OAAOC,MAA7B,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,UAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,mCAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,kBACZhL,MAAO8N,GAAoB,GAC3BhO,SAAU,SAACX,GAAD,OAAO4O,EAAW5O,EAAEY,OAAOC,MAA3B,IAIlB,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAA9B,kCAQd,eAACqO,GAAA,EAAD,CAAUvO,MAAM,IAAhB,SACI,gBAAC,GAAD,WAEF,+CACA,gBAACf,GAAA,EAAD,CAAMC,SAvJa,SAAC4E,GAEpBA,EAAM1E,iBACNyC,EAASyL,GAAoB,CACzB3b,OAAMyY,QAAOE,WAAUK,OACvBc,UAASI,YAAWF,aAAYmC,aAEpCjP,EAAS,cACZ,EA+IG,UAEQ,gBAACI,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,iCAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,gCACZhL,MAAOrO,GAAc,GACrBmO,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAKtB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,oBAGA,eAAC9L,GAAA,EAAKS,QAAN,CACQyM,UAAQ,EACRxM,KAAK,OACLqL,YAAY,mBACZhL,MAAOoK,GAAgB,GACvBtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAIlB,eAACf,GAAA,EAAK4L,MAAN,UACA,eAAC5K,GAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAA9B,sCAchB,E,2yMCzKWsO,OA9Df,WAEI,IACQ1X,EADS8J,aAAY,SAAAxO,GAAK,OAAIA,EAAMuL,QAAV,IAC1B7G,gBAEF+K,EAAWC,cAEXjD,EAAWC,eAEjB,EAA0CJ,mBAAS,UAAnD,oBAAOvH,EAAP,KAAsBsX,EAAtB,KAWF,OATM3X,EAAgB2U,SACZ5M,EAAS,aAUjB,gBAAC,GAAD,WACI,eAAC,GAAD,CAAe2O,OAAK,EAACC,OAAK,EAACC,OAAK,IAEhC,gBAACzO,GAAA,EAAD,CAAMC,SAVY,SAAC4E,GCxBM,IAACsB,EDyB1BtB,EAAM1E,iBACNyC,GC1B0BuD,ED0BCjO,ECzB/B,yCAAO,WAAO0K,GAAP,kEAGCA,EAASxK,EAAeD,kBAAkBgO,IAE1C/R,aAAasU,QAAQ,gBAAiBpU,KAAKqU,UAAUxC,IALtD,2CAAP,wDD0BIvG,EAAS,cACZ,EAMG,UAEI,gBAACI,GAAA,EAAK4L,MAAN,WAEI,eAAC5L,GAAA,EAAK8L,MAAN,CAAYnG,GAAG,SAAf,6BAGA,gBAACpF,GAAA,EAAD,WACI,eAACP,GAAA,EAAKyP,MAAN,CACQ/O,KAAK,QACLsK,MAAM,wBACN/V,GAAG,SACHvC,KAAK,gBACLgd,SAAO,EACP7O,SAAU,SAACX,GAAD,OAAMsP,EAAiBtP,EAAEY,OAAOC,MAAhC,IAGlB,eAACf,GAAA,EAAKyP,MAAN,CACQ/O,KAAK,QACLsK,MAAM,WACN/V,GAAG,UACHvC,KAAK,gBAELmO,SAAU,SAACX,GAAD,OAAMsP,EAAiBtP,EAAEY,OAAOC,MAAhC,UAM1B,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAA9B,4BAMX,E,2yMEuIc0O,OAjMf,SAA0BnO,GAEtB,IAAMoB,EAAYC,cACZjD,EAAWC,eACX+P,EAAcjO,aAAY,SAAAxO,GAAK,OAAIA,EAAMoF,KAAV,IACtBzF,GAAkB8c,EAAzBrX,MAAyBqX,EAAlB9c,OAAOuE,EAAWuY,EAAXvY,QAGdQ,EADW8J,aAAY,SAAAxO,GAAK,OAAIA,EAAMuL,QAAV,IAC5B7G,gBAKFwG,GAHgBsD,aAAY,SAAAxO,GAAK,OAAIA,EAAMyL,WAAV,IAC/BrG,MAAS8M,IAEJ1D,aAAY,SAAAxO,GAAK,OAAIA,EAAMkL,IAAV,KACvB1J,EAAsB0J,EAAtB1J,SAAUD,EAAY2J,EAAZ3J,QAEXmb,EAAaxR,EAAK5J,UAAUoN,QAAO,SAAC4I,EAAIvV,GAAL,OAAcuV,EAAMvV,EAAK2Q,MAAQ3Q,EAAKC,GAAtC,GAA2C,GAAGqV,QAAQ,GACzFsF,GAAkBD,EAAa,IAAM,EAAI,IAAIrF,QAAQ,GACrDuF,EAAWpG,OAAQ,MAAUkG,GAAYrF,QAAQ,GACjD0D,GAAcvE,OAAOkG,GAAclG,OAAOmG,GAAiBnG,OAAOoG,IAAWvF,QAAQ,GAuC7F,OApCErI,qBAAU,WAGF9K,IAGAmK,EAAMwO,cACNpN,ECKR,yCAAO,WAAOA,GAAP,kEAGHA,EAAShK,EAAaD,oBAHnB,2CAAP,uDDDC,GAAE,CAACtB,EAASuI,IA0Bb,iCACI,eAAC,GAAD,CAAe2O,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,gBAACnO,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SAEI,gBAAC8I,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,gBAACqI,GAAA,EAAU1E,KAAX,WAEI,yCACA,iCAEI,iCACI,4CADJ,IAC6B/M,EAAgBnF,QAE7C,iCACI,8CADJ,IAC+BmF,EAAgB2U,WAE/C,iCACI,6CADJ,IAC4B,wBAAO9L,KAAK,QAAZ,SAAsB7I,EAAgBsT,QAC9D,iGAEJ,iCACI,4CADJ,IAC6BtT,EAAgB6T,QAE7C,iCACI,qDADJ,IACsC7T,EAAgB+U,aAEtD,iCACI,uDADJ,IACwC/U,EAAgB6U,cAExD,iCACI,uDADJ,IACwC7U,EAAgBgX,iBAK/D,gBAACvF,GAAA,EAAU1E,KAAX,WAEG,iDACA,+BACI,8CADJ,IAC+BjQ,QAKlC,gBAAC2U,GAAA,EAAU1E,KAAX,WAEG,kDAC4B,IAA1BvG,EAAK5J,UAAU2N,OACX,eAAC,GAAD,CAASnB,QAAS,OAAlB,mCAEE,eAACqI,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,SAEQ5C,EAAK5J,UAAU+S,KAAK,SAACtS,EAAK+a,GAAN,OACZ,eAAC3G,GAAA,EAAU1E,KAAX,UAEI,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACuH,GAAA,EAAD,CAAOxC,IAAKrQ,EAAKsQ,MAAOwC,IAAK9S,EAAKxC,KAAMuV,OAAK,EAACoC,SAAO,MAEzD,eAAC9J,GAAA,EAAD,UAEI,eAAC,QAAD,CAAM2C,GAAE,oBAAehO,EAAKD,IAA5B,SAAmCC,EAAKxC,SAE5C,gBAAC6N,GAAA,EAAD,CAAKC,GAAI,EAAT,UACKtL,EAAKC,IADV,MACkBD,EAAK2Q,MADvB,WACsC3Q,EAAKC,IAAKD,EAAK2Q,OAAO2E,QAAQ,GADpE,cAVayF,EADT,cA4BhD,eAAC1P,GAAA,EAAD,CAAKC,GAAI,EAAT,SACQ,eAAC4E,GAAA,EAAD,UACI,gBAACkE,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,eAACqI,GAAA,EAAU1E,KAAX,UACI,6CAEJ,eAAC0E,GAAA,EAAU1E,KAAX,UACG,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UAAK,wDACL,gBAACA,GAAA,EAAD,WAAMsP,EAAN,eAGP,eAACvG,GAAA,EAAU1E,KAAX,UACG,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UAAK,iDACL,gBAACA,GAAA,EAAD,WAAMuP,EAAN,eAGP,eAACxG,GAAA,EAAU1E,KAAX,UACG,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UAAK,6CACL,gBAACA,GAAA,EAAD,WAAMwP,EAAN,eAGP,eAACzG,GAAA,EAAU1E,KAAX,UACG,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UAAK,gDACL,gBAACA,GAAA,EAAD,WAAM2N,EAAN,eAGNpb,GACG,gBAACwW,GAAA,EAAU1E,KAAX,WACI,eAAC,GAAD,CAAS3D,QAAQ,SAAjB,SACKnO,IAFT,OAMJ,eAACwW,GAAA,EAAU1E,KAAX,UACI,eAAC5D,GAAA,EAAD,CAESN,KAAK,SACLE,UAAU,YACVgJ,SAAoC,IAA1BvL,EAAK5J,UAAU2N,OACzBI,QAnJlB,SAACqC,GAEhBA,EAAM1E,iBACNyC,ECjDmB,SAACrK,GACxB,gDAAO,WAAOqK,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGViQ,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMyF,KAAN,mBAA+BnT,EAAOiT,GAT/C,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CANf,8DAoBCvD,EAAShK,EAAaJ,sBApBvB,SAqBoBwN,IArBpB,OAqBOG,EArBP,OAuBCvD,EAAShK,EAAaH,mBAAmB0N,IACzCvD,EAASjN,EAAYH,kBAErBpB,aAAa8b,OAAO,aA1BrB,kDA+BCtN,EACIhK,EAAaF,gBACX,KAAM2N,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAnCf,0DAAP,uDAwCH,CDQgB4J,CAAY,CACjBC,WAAW/R,EAAK5J,UAChB/B,KAAMmF,EAAgBnF,KACtByY,MAAMtT,EAAgBsT,MACtBE,SAAUxT,EAAgBwT,SAC1BmB,QAAS3U,EAAgB2U,QACzBqD,WAAYA,EACZvD,MAAOzU,EAAgB6T,KACvBkB,UAAW/U,EAAgB+U,UAC3BF,WAAY7U,EAAgB6U,WAC5BmC,QAAShX,EAAgBgX,QACzBna,QAASA,EACTC,SAASA,EACT0b,OAAQnC,KAGZ1T,QAAQC,IAAI,mBAEf,EAyH2B,4CAa/B,E,2yMEzMM,I,qzMC8KQ6V,OAvKf,WAAwB,IAAD,UAEbC,EAAWzH,aAAU,MACrBlG,EAAYC,cACZ2N,EAAe7O,aAAY,SAAAxO,GAAK,OAAIA,EAAMyL,WAAV,IAC7BrG,EAA0BiY,EAA1BjY,MAAOzF,EAAmB0d,EAAnB1d,MAAOD,EAAY2d,EAAZ3d,QAEjBgM,EAAW8C,aAAY,SAAAxO,GAAK,OAAIA,EAAM0L,QAAV,IACjB4R,EAAoC5R,EAA7ChM,QAA8B6d,EAAe7R,EAAxBxH,QAE7B,EAAmCoI,mBAAS,GAA5C,oBAAmBkR,GAAnB,WA4BF,OA1BM9d,GAAWC,GACX6d,EAAapY,EAAM6X,WAAWvO,QAAO,SAAC4I,EAAIvV,GAAL,OAAcuV,EAAMvV,EAAK2Q,MAAQ3Q,EAAKC,GAAtC,GAA2C,GAAGqV,QAAQ,IAG/FrI,qBAAU,WAAO,IAAD,EDvBYlN,GCyBQ,KAAxB,OAALsD,QAAK,IAALA,GAAA,UAAAA,EAAO6X,kBAAP,eAAmBhO,SAAesO,GAAcnY,EAAM8M,MAAQsE,OAAO4G,EAAQtb,MAC5E2N,GD1BoB3N,EC0BK0U,OAAO4G,EAAQtb,IDzBhD,yCAAO,WAAO2N,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAEhByE,QAAQC,IAAI,kCACNuL,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAI1C7S,QAAQC,IAAI,yBAAZ,sBAAoDxF,IATtC,SAUSgR,KAAMC,IAAN,sBAAyBjR,GAAMuW,GAVxC,uBAUNrF,EAVM,EAUNA,KACR3L,QAAQC,IAAI,gBAAgB0L,GAXd,kBAYPA,GAZO,2CANf,8DAsBCvD,EAAS1J,EAAoBH,uBAtB9B,SAuBoBiN,IAvBpB,OAuBOG,EAvBP,OAwBC3L,QAAQC,IAAI,kBAAkB0L,GAC9BvD,EAAS1J,EAAoBF,oBAAoBmN,IAzBlD,kDA8BCvD,EACI1J,EAAoBD,iBAClB,KAAMoN,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAlCf,0DAAP,yDC4BC,GAAE,CAAEgK,EAAQlL,IAAKzC,IAiBlB/P,EAAW,eAAC,GAAD,IAEMC,EACT,eAAC,GAAD,CAASmO,QAAU,SAAnB,SACKnO,IAGZ,iCAEE,6CAAeyF,EAAM8M,OACpB,gBAAC/E,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SAEI,gBAAC8I,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,gBAACqI,GAAA,EAAU1E,KAAX,WAEI,qEACA,+BACI,6CADJ,cAC8BrM,EAAM1B,YADpC,aAC8B,EAAY8N,aAE1C,+BACI,8CADJ,IAC6B,oBAAGiM,KAAI,2BAAYrY,EAAM1B,YAAlB,aAAY,EAAYsU,OAA/B,mBAAyC5S,EAAM1B,YAA/C,aAAyC,EAAYsU,WAElF,wBAEE5S,EAAMsY,YACJ,gBAAC,GAAD,CAAS5P,QAAQ,UAAjB,8BACyB1I,EAAMuY,eAG/B,eAAC,GAAD,CAAS7P,QAAQ,UAAjB,gCAMP,gBAACqI,GAAA,EAAU1E,KAAX,WAEG,iDACA,+BACI,8CADJ,IACuD,WAAxBrM,EAAML,cAA6B,oBAAsB,uBAGtFK,EAAM4V,OACJ,gBAAC,GAAD,CAASlN,QAAQ,UAAjB,UACQ,iDADR,MACoC1I,EAAM6V,UAG1C,eAAC,GAAD,CAASnN,QAAQ,UAAjB,6BAMP,gBAACqI,GAAA,EAAU1E,KAAX,WAEG,kDAC+B,KAA7B,UAAArM,EAAM6X,kBAAN,eAAkBW,QACd,eAAC,GAAD,CAAS9P,QAAS,OAAlB,iCAEE,eAACqI,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,mBAEQ1I,EAAM6X,kBAFd,aAEQ,EAAkB5I,KAAK,SAACtS,EAAK+a,GAAN,OACf,eAAC3G,GAAA,EAAU1E,KAAX,UAEI,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACuH,GAAA,EAAD,CAAOxC,IAAKrQ,EAAKsQ,MAAOwC,IAAK9S,EAAKxC,KAAMuV,OAAK,EAACoC,SAAO,MAEzD,eAAC9J,GAAA,EAAD,UAEI,eAAC,QAAD,CAAM2C,GAAE,oBAAehO,EAAKD,IAA5B,SAAmCC,EAAKxC,SAE5C,gBAAC6N,GAAA,EAAD,CAAKC,GAAI,EAAT,UACKtL,EAAKC,IADV,OACmBD,EAAK2Q,MADxB,QACoC3Q,EAAKC,IAAKD,EAAK2Q,OAAO2E,QAAQ,UAXrDyF,EADN,cA4BnD,eAAC1P,GAAA,EAAD,CAAKC,GAAI,EAAT,SACQ,eAAC4E,GAAA,EAAD,UACI,gBAACkE,GAAA,EAAD,CAAWrI,QAAQ,QAAnB,UACI,eAACqI,GAAA,EAAU1E,KAAX,UACI,sDAEJ,eAAC0E,GAAA,EAAU1E,KAAX,UACG,gBAACtE,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,2BACA,gBAACA,GAAA,EAAD,kBAAUhI,EAAM2V,mBAIvB,eAAC5E,GAAA,EAAU1E,KAAX,WACMrM,EAAM4V,QAAUsC,EACV,eAAC,GAAD,IAIA,eAACnQ,GAAA,EAAD,UACI,eAAC,KAAD,CAAsB0Q,QAAS,CAAE,YAAa,oFAA9C,SACI,eAAC,KAAD,CACI3N,MAAO,CAAE4N,OAAQ,cACjBC,OAAQ3Y,EAAM2V,WACdiD,UAhIlB,SAACC,GAE3BxO,EClCgB,SAAC3N,EAAImc,GACzB,gDAAO,WAAOxO,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGhByE,QAAQC,IAAI,kCACNuL,EAPH,yCAOe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAI1C7S,QAAQC,IAAI,yBAAZ,sBAAoDxF,IATtC,SAUSgR,KAAMyH,IAAN,sBAAyBzY,EAAzB,QAAmCmc,EAAe5F,GAV3D,uBAUNrF,EAVM,EAUNA,KACR3L,QAAQC,IAAI,gBAAgB0L,GAXd,kBAYPA,GAZO,2CAPf,8DAuBCvD,EAASnJ,EAAgBJ,mBAvB1B,SAwBoB2M,IAxBpB,OAwBOG,EAxBP,OAyBC3L,QAAQC,IAAI,kBAAkB0L,GAC9BvD,EAASnJ,EAAgBH,gBAAgB6M,IA1B1C,kDA+BCvD,EACInJ,EAAgBF,aACd,KAAM8M,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAnCf,0DAAP,uDAwCH,CDPgB8K,CAASd,EAAQlL,IAAK+L,GAElC,sBAwIJ,E,2yME7KM,IAAME,GAAY,WACrB,gDAAO,WAAO1O,EAAUgF,GAAjB,uFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGViQ,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMC,IAAN,cAAyBsF,GATlC,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CANf,8DAoBCvD,EAASjI,EAAgBN,mBApB1B,SAqBoB2L,IArBpB,OAqBOG,EArBP,OAuBCvD,EAASjI,EAAgBL,gBAAgB6L,IAvB1C,kDA4BCvD,EACIjI,EAAgBJ,aACd,KAAM8L,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAhCf,0DAAP,uDAqCH,E,2yMCoEcgL,OA/Ff,WAEI,IAAM3O,EAAWC,cACX9D,EAAW4C,aAAY,SAAAxO,GAAK,OAAIA,EAAM4L,QAAV,IAC1BlM,EAAyBkM,EAAzBlM,QAASC,EAAgBiM,EAAhBjM,MAAOsH,EAAS2E,EAAT3E,MAGhBrE,EADU4L,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC3BvI,SAEFyb,EAAU7P,aAAY,SAAAxO,GAAK,OAAIA,EAAM6L,UAAV,IAG3BY,GAFyE4R,EAAvEna,QAAuEma,EAA/C3e,QAA+C2e,EAAvB1e,MAEvC+M,gBAEjBsC,qBAAU,WAEHpM,GAAYA,EAASiP,SACpBpC,EAAS0O,MACT1O,EfaR,yCAAO,WAAOA,GAAP,kEAEH,IACIA,EAAS1L,EAAmBD,mBAW/B,CATC,MAAOnE,GAEL8P,EACI1L,EAAmBF,gBACjBlE,EAAMuT,UAAYvT,EAAMuT,SAASF,KAAKG,OACpCxT,EAAMuT,SAASF,KAAKG,OACpBxT,EAAMyT,SAGjB,CAdE,2CAAP,wDeXQ3G,EAAS,SAIhB,GAAE,CAACgD,EAAUhD,IAEd,IAAM6R,EAAgB,SAACxc,GAEhBgU,OAAOyI,QAAQ,gDAEd9O,ECzCc,SAAC3N,GACvB,gDAAO,WAAO2N,EAAUgF,GAAjB,qFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGViQ,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAM0L,OAAN,4BAAkC1c,GAAMuW,GATjD,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CANf,8DAoBCvD,EAAS1H,GAAkBJ,qBApB5B,SAqBoBkL,IArBpB,cAuBCpD,EAAS1H,GAAkBH,qBAvB5B,kDA4BC6H,EACI1H,GAAkBF,eAChB,KAAMqL,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAhCf,0DAAP,uDAqCH,CDGoBqL,CAAW3c,IACpB2N,ECDR,yCAAO,WAAOA,GAAP,kEAEHA,EAAS1H,GAAkB2W,mBAFxB,2CAAP,uDDEQjP,EAAS0O,MAEhB,EAEH,OACE,iCACI,wCACCze,EAEW,eAAC,GAAD,IAIFC,EACU,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACSnO,IAIjB,gBAAC+a,GAAA,EAAD,CAAOC,SAAO,EAACgE,UAAQ,EAACC,OAAK,EAAChE,YAAU,EAACnN,UAAU,WAAnD,UACQ,iCACI,gCACI,qCACA,uCACA,wCACA,wCACA,6BAGR,wCACKxG,QADL,IACKA,OADL,EACKA,EAAOoN,KAAI,SAAA3Q,GAAI,OAEZ,gCACI,8BAAKA,EAAKwO,MACV,8BAAKxO,EAAKnE,OACV,8BAAKmE,EAAKsU,QACV,8BAAKtU,EAAKmO,QACN,oBAAGpE,UAAU,eAAeyC,MAAO,CAAEuC,MAAO,WAC5C,oBAAGhF,UAAU,eAAeyC,MAAO,CAAEuC,MAAO,WAChD,8BAAI,eAAC,iBAAD,CAAe1C,GAAE,sBAAiBrM,EAAKwO,IAAtB,SAAjB,SAEI,eAACrE,GAAA,EAAD,CAAQC,QAAU,QAAQL,UAAU,MAApC,SACK,oBAAGA,UAAU,sBAI1B,8BACI,eAACI,GAAA,EAAD,CAASJ,UAAU,MAAM4B,QAAS,SAACtC,GAAD,OAAOuR,EAAc5a,EAAKwO,IAA1B,EAAlC,SACI,oBAAGzE,UAAU,uBAhBhB/J,EAAKwO,IAFF,WA+B/C,E,slZEsCc2M,OAjIf,WAEI,IAAMpP,EAAWC,cAEXzE,EAAcuD,aAAY,SAAAxO,GAAK,OAAIA,EAAMiL,WAAV,IAC7BvL,EAAwCuL,EAAxCvL,QAASC,EAA+BsL,EAA/BtL,MAAOF,EAAwBwL,EAAxBxL,SAElBqf,GAF0C7T,EAAfrL,KAAeqL,EAATpL,MAEpB2O,aAAY,SAAAxO,GAAK,OAAIA,EAAMgM,aAAV,KACnB+S,EAA6DD,EAAtEpf,QAA+Bsf,EAAuCF,EAA9Cnf,MAA6Bsf,EAAiBH,EAA1B5a,QAE9Cgb,EAAS1Q,aAAY,SAAAxO,GAAK,OAAIA,EAAMiM,aAAV,IACfkT,EAAsFD,EAA/Fxf,QAA+B0f,EAAgEF,EAAvEvf,MAA6B0f,EAA0CH,EAAnDhb,QAAiCob,EAAkBJ,EAA3Bxe,QAGpEkC,EADU4L,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC3BvI,SAIF6J,EAAWC,eAEjBsC,qBAAU,WAEDpM,EAASiP,SACTpF,EAAS,UAIV4S,GAEA5P,ECFR,yCAAO,WAAOA,GAAP,kEAEHA,EAAShG,GAAqBD,sBAF3B,2CAAP,uDDGQiD,EAAS,kBAAD,OAAmB6S,EAAepN,IAAlC,WAGRzC,EAASmD,KAIf,GAAE,CAACnD,EAAUhD,EAAU7J,EAAUqc,EAAeI,EAAgBC,IAElE,IAAMhB,EAAgB,SAACxc,GAEhBgU,OAAOyI,QAAQ,gDAEd9O,EExDiB,SAAC3N,GAC1B,gDAAO,WAAO2N,EAAUgF,GAAjB,uFAKCA,IADY7R,EAJb,EAICuI,UAAYvI,SAGViQ,EAPH,yCAOe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAM0L,OAAN,+BAAqC1c,GAAMuW,GATpD,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CAPf,8DAqBCvD,EAASvG,GAAqBJ,wBArB/B,SAsBwB+J,IAtBxB,OAsBOI,EAtBP,OAuBCxD,EAASvG,GAAqBH,qBAAqBkK,IAvBpD,kDA0BCxD,EACIvG,GAAqBF,kBACnB,KAAMkK,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UA9Bf,0DAAP,uDAoCH,CFmBoBpH,CAAclK,IACvB2N,EEjBR,yCAAO,WAAOA,GAAP,kEAEHA,EAASvG,GAAqBD,sBAF3B,2CAAP,uDFkBQ5B,QAAQC,IAAI,oBACZmI,EAASmD,MAEhB,EAEK2M,EAAuB,WAEzB9P,EChEJ,yCAAO,WAAOA,EAAUgF,GAAjB,uFAKCA,IADY7R,EAJb,EAICuI,UAAYvI,SAGViQ,EAPH,yCAOe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMyF,KAAN,wBAAmC,CAAC,EAAGF,GAThD,uBASNrF,EATM,EASNA,KATM,kBAUPA,GAVO,2CAPf,8DAqBCvD,EAAShG,GAAqBJ,wBArB/B,SAsBwBwJ,IAtBxB,OAsBOI,EAtBP,OAuBCxD,EAAShG,GAAqBH,qBAAqB2J,IAvBpD,kDA0BCxD,EACIhG,GAAqBF,kBACnB,KAAM2J,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UA9Bf,0DAAP,wDDiEC,EACH,OACE,iCACI,gBAACjG,GAAA,EAAD,CAAKM,UAAU,qBAAf,UACI,eAACL,GAAA,EAAD,UACI,2CAEJ,eAACA,GAAA,EAAD,CAAKK,UAAU,aAAf,SACI,gBAACI,GAAA,EAAD,CAAQJ,UAAU,OAAO4B,QAAS,SAACtC,GAAD,OAAOwS,GAAP,EAAlC,UACI,oBAAG9R,UAAU,gBADjB,4BAONsR,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAASlR,QAAQ,SAAjB,SAA2BkR,IAE1CG,GAAiB,eAAC,GAAD,IACjBC,GAAe,eAAC,GAAD,CAAStR,QAAQ,SAAjB,SAA2BsR,IAC3C1f,EAEW,eAAC,GAAD,IAIFC,EACU,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACSnO,IAIjB,gBAAC+a,GAAA,EAAD,CAAOC,SAAO,EAACgE,UAAQ,EAACC,OAAK,EAAChE,YAAU,EAACnN,UAAU,WAAnD,UACQ,iCACI,gCACI,qCACA,uCACA,uCACA,6CACA,uCACA,yCACA,6BAGR,iCACKhO,EAAS4U,KAAI,SAAA3T,GAAO,OAEjB,gCACI,8BAAKA,EAAQwR,MACb,8BAAKxR,EAAQnB,OACb,gCAAKmB,EAAQgS,MAAb,UACA,8BAAKhS,EAAQ0V,WACb,8BAAK1V,EAAQ+R,QACb,8BAAK/R,EAAQiS,eACb,8BAAI,eAAC,iBAAD,CAAe5C,GAAE,yBAAoBrP,EAAQwR,IAA5B,SAAjB,SAEI,eAACrE,GAAA,EAAD,CAAQC,QAAU,QAAQL,UAAU,SAApC,SACK,oBAAGA,UAAU,sBAG1B,8BACQ,eAACI,GAAA,EAAD,CAASJ,UAAU,SAAS4B,QAAS,SAACtC,GAAD,OAAOuR,EAAc5d,EAAQwR,IAA7B,EAArC,SACK,oBAAGzE,UAAU,uBAfrB/M,EAAQwR,IAFA,WA6BpD,EGnIcsN,OAVf,WACE,OACI,iCACM,wCACA,iLAIX,ECCcC,OATf,WACE,OACE,iCACE,yCACA,qFAGL,ECEcC,OATf,WACE,OACE,iCACE,0CACA,oFAGL,E,2yMCsHcC,OAlHf,WACE,MAAwBrT,mBAAS,IAAjC,oBAAO/M,EAAP,KAAayZ,EAAb,KACA,EAA0B1M,mBAAS,IAAnC,oBAAO0L,EAAP,KAAcC,EAAd,KACA,EAA8B3L,oBAAS,GAAvC,oBAAOuF,EAAP,KAAgB+N,EAAhB,KAEMnQ,EAAWC,cAEXjD,EAAWC,eAET5K,EAAO6T,eAAP7T,GACF+d,EAAS/d,EACbuF,QAAQC,IAAI,SAAUuY,GAExB,IAAMxU,EAAcmD,aAAY,SAACxO,GAAD,OAAWA,EAAMqL,WAAjB,IACxB3H,EAAyB2H,EAAzB3H,KAAM/D,EAAmB0L,EAAnB1L,MAAOD,EAAY2L,EAAZ3L,QAEfwM,EAAasC,aAAY,SAACxO,GAAD,OAAWA,EAAMkM,UAAjB,IAChB4T,EAAgE5T,EAAvEvM,MAA6BogB,EAA0C7T,EAAnDxM,QAAkCsgB,EAAiB9T,EAA1BhI,QAwCrD,OAtCAmD,QAAQC,IAAI,kBAAmB5D,EAAKwO,KACpC7K,QAAQC,IAAI,oBAAqB5D,EAAKnE,MACtCyP,qBAAU,WAGDgR,GACCvQ,ECUR,yCAAO,WAAOA,GAAP,kEAIH,IACIA,EAASzF,GAAkBD,kBAW9B,CATC,MAAOpK,GAEL8P,EACIzF,GAAkBF,eAChBnK,EAAMuT,UAAYvT,EAAMuT,SAASF,KAAKG,OACpCxT,EAAMuT,SAASF,KAAKG,OACpBxT,EAAMyT,SAGjB,CAhBE,2CAAP,uDDTQ3G,EAAS,oBAIL/I,EAAKnE,MAAQmE,EAAKwO,MAAQsE,OAAOqJ,IAIjCxY,QAAQC,IAAI,0BACZ0R,EAAQtV,EAAKnE,MACb0Y,EAASvU,EAAKsU,OACd4H,EAAWlc,EAAKmO,WANhBxK,QAAQC,IAAI,wBACZmI,EAASuK,GAAelY,IAYrC,GAAE,CAAC2N,EAAU/L,EAAMmc,EAAQG,EAAevT,IAczC,iCAEI,eAAC,QAAD,CAAMsD,GAAG,kBAAT,qBAGF,gBAAC,GAAD,WACE,4CACEgQ,GAAiB,eAAC,GAAD,IACjBD,GAAe,eAAC,GAAD,CAAShS,QAAS,SAAlB,SAA4BgS,IAC3CpgB,EAAW,eAAC,GAAD,IACDC,EACC,eAAC,GAAD,CAASmO,QAAS,SAAlB,SAA4BnO,IAEjC,gBAACkN,GAAA,EAAD,CAAMC,SAzBE,SAAC4E,GACrBA,EAAM1E,iBACNyC,ECxDsB,SAAC/L,GACvB,gDAAO,WAAO+L,EAAUgF,GAAjB,qFAICA,IADY7R,EAHb,EAGCuI,UAAYvI,SAGViQ,EANH,yCAMe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMyH,IAAN,4BAA+B7W,EAAKwO,IAApC,KACvBxO,EAAM2U,GAVQ,uBASNrF,EATM,EASNA,KATM,kBAWPA,GAXO,2CANf,8DAqBCvD,EAASzF,GAAkBJ,qBArB5B,SAsBoBiJ,IAtBpB,cAuBCxL,QAAQC,IAAI,qCACZmI,EAASzF,GAAkBH,qBAC3B4F,EAAS0O,MAzBV,kDA6BC1O,EACIzF,GAAkBF,eAChB,KAAMoJ,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAjCf,0DAAP,uDAsCH,CDiBY6M,CAAW,CAChB/N,IAAKxO,EAAKwO,IACV3S,KAAMA,EACNyY,MAAOA,EACPnG,QAASA,IAGd,EAgBa,UACI,gBAAChF,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACE,eAAC7L,GAAA,EAAK8L,MAAN,kBACA,eAAC9L,GAAA,EAAKS,QAAN,CACEC,KAAK,OACLqL,YAAY,iBACZhL,MAAOrO,EACPmO,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAId,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACE,eAAC7L,GAAA,EAAK8L,MAAN,2BACA,eAAC9L,GAAA,EAAKS,QAAN,CACEC,KAAK,QACLqL,YAAY,mBACZhL,MAAOoK,EACPtK,SAAU,SAACX,GAAD,OAAOkL,EAASlL,EAAEY,OAAOC,MAAzB,OAId,eAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,UAAtB,SACE,eAAC7L,GAAA,EAAKyP,MAAN,CACE/O,KAAK,WACLsK,MAAM,UACN0E,QAAS1K,EACTnE,SAAU,SAACX,GAAD,OAAO6S,EAAW7S,EAAEY,OAAO4O,QAA3B,MAMd,eAAC1O,GAAA,EAAD,CAAQN,KAAK,SAASsL,SAAS,UAA/B,4BASnB,E,slZE8IcqH,OA5Pf,WAA+B,IAAD,QAGpBC,EADSxK,eAAP7T,GAGJuF,QAAQC,IAAI,qBAAsB6Y,GACtC,MAAwB7T,mBAAS,IAAjC,oBAAO/M,EAAP,KAAayZ,EAAb,KACA,EAA0B1M,mBAAS,GAAnC,oBAAOoG,EAAP,KAAc0N,EAAd,KACA,EAA0B9T,mBAAS,IAAnC,oBAAO+F,EAAP,KAAcgO,EAAd,KACA,EAA0B/T,mBAAS,IAAnC,oBAAOmG,EAAP,KAAc6N,EAAd,KACA,EAA0BhU,mBAAS,IAAnC,oBAAO6M,EAAP,KAAcC,EAAd,KACA,EAAwB9M,mBAAS,IAAjC,oBAAOiU,EAAP,KAAaC,EAAb,KACA,EAAgClU,mBAAS,IAAzC,oBAAO8J,EAAP,KAAiBqK,EAAjB,KACA,EAAwCnU,mBAAS,GAAjD,oBAAOqG,EAAP,KAAqB+N,EAArB,KACA,EAAsCpU,mBAAS,IAA/C,oBAAOoK,EAAP,KAAoBiK,EAApB,KACA,EAAkCrU,oBAAS,GAA3C,oBAAOsU,EAAP,KAAkBC,EAAlB,KAEMpR,EAAWC,cACXjD,EAAWC,eAEXoU,EAAgBtS,aAAY,SAAAxO,GAAK,OAAIA,EAAMU,OAAV,IAC/BhB,EAA4BohB,EAA5BphB,QAASgB,EAAmBogB,EAAnBpgB,QAASf,EAAUmhB,EAAVnhB,MAEpBohB,EAAavS,aAAY,SAAAxO,GAAK,OAAIA,EAAMmM,aAAV,IACrB2T,GAAgEiB,EAAvEphB,MAA6BogB,GAA0CgB,EAAnDrhB,QAAiCsgB,GAAkBe,EAA3B7c,QAGpD8K,qBAAU,WAEHgR,IACCvQ,ECCR,yCAAO,WAAOA,GAAP,kEAEHA,EAASlF,GAAqBD,sBAF3B,2CAAP,uDDAQmC,EAAS,uBAGL/L,EAAQnB,MAAQmB,EAAQwR,MAAQsE,OAAO2J,IAIvC9Y,QAAQC,IAAI,0BACZ0R,EAAQtY,EAAQnB,MAChB6gB,EAAS1f,EAAQgS,OACjB2N,EAAS3f,EAAQ2R,OACjBiO,EAAS5f,EAAQ+R,OACjB2G,EAAS1Y,EAAQyY,OACjBqH,EAAQ9f,EAAQ6f,MAChBE,EAAY/f,EAAQ0V,UACpBsK,EAAgBhgB,EAAQiS,cACxBgO,EAAejgB,EAAQgW,eAZvBrP,QAAQC,IAAI,wBACZmI,EAAS4D,GAAe8M,IAiBnC,GAAE,CAAC1Q,EAAU/O,EAAUyf,EAAU1T,EAASuT,KAE3C,IAkBMgB,GAAiB,yCAAG,WAAOjU,GAAP,uFACfkU,EAAOlU,EAAEY,OAAOuT,MAAM,GAC5B7Z,QAAQC,IAAI,cAAe2Z,IACrBE,EAAW,IAAIC,UAEZC,OAAO,QAASJ,GACzBE,EAASE,OAAO,aAAclB,GAE9BU,GAAa,GARQ,SAWXxI,EAAS,CACXC,QAAS,CACL,eAAgB,wBAbP,UAiBMxF,KAAMyF,KAAK,wBAAyB4I,EAAU9I,GAjBpD,iBAiBTrF,EAjBS,EAiBTA,KAGRqN,EAASrN,GACT6N,GAAa,GArBI,kDAwBlBA,GAAa,GAxBK,0DAAH,sDA4BvB,OACI,iCACI,eAAC,QAAD,CAAM9Q,GAAG,qBAAT,qBAIA,gBAAC,GAAD,WACI,+CACCgQ,IAAiB,eAAC,GAAD,IACjBD,IAAe,eAAC,GAAD,CAAShS,QAAQ,SAAjB,SAA2BgS,KAE1CpgB,EAAU,eAAC,GAAD,IAAaC,EAAQ,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SAA2BnO,IAEnD,gBAACkN,GAAA,EAAD,CAAMC,SA3DJ,SAACC,GACnBA,EAAEC,iBACFyC,ECpEqB,SAAC/O,GAC1B,gDAAO,WAAO+O,EAAUgF,GAAjB,uFAKCA,IADY7R,EAJb,EAICuI,UAAYvI,SAGViQ,EAPH,yCAOe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,mBACf2B,cAAc,UAAD,OAAYrX,EAASsX,SAL5B,SASSpH,KAAMyH,IAAN,+BAAkC7Z,EAAQwR,IAA1C,KACvBxR,EAAS2X,GAVK,uBASNrF,EATM,EASNA,KATM,kBAWPA,GAXO,2CAPf,8DAsBCvD,EAASlF,GAAqBJ,wBAtB/B,SAuBwB0I,IAvBxB,OAuBOI,EAvBP,OAwBCxD,EAASlF,GAAqBH,qBAAqB6I,IACnDxD,EAAS4D,GAAe3S,EAAQwR,MAzBjC,kDA4BCzC,EACIlF,GAAqBF,kBACnB,KAAM6I,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UAhCf,0DAAP,uDAsCH,CD6BgBjH,CAAc,CACnB+F,IAAIiO,EACJ5gB,OACAmT,QACAL,QACAI,QACA0G,QACAoH,OACAnK,WACAzD,eACA+D,gBAIP,EA2CmB,UAEI,gBAAC7J,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,6CACZ,eAAC9L,GAAA,EAAKS,QAAN,CAEIC,KAAK,OACLqL,YAAY,aACZ0I,aAAc/hB,EACdmO,SAAU,SAACX,GAAD,OAAOiM,EAAQjM,EAAEY,OAAOC,MAAxB,OAKlB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,6CACZ,eAAC9L,GAAA,EAAKS,QAAN,CAEIC,KAAK,SACLqL,YAAY,cACZ0I,aAAc5O,EACdhF,SAAU,SAACX,GAAD,OAAOqT,EAASrT,EAAEY,OAAOC,MAAzB,OAMlB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,8CACZ,eAAC9L,GAAA,EAAKS,QAAN,CAEIC,KAAK,OACLqL,YAAY,cACZ0I,aAAcjP,IAKlB,eAACxF,GAAA,EAAKS,QAAN,CACIiU,UAAU,aACVhU,KAAK,OACLsK,MAAM,mBAENnK,SAAQ,yCAAE,WAAOX,GAAP,2FAAciU,GAAkBjU,IAAhC,2CAAF,wDAIX6T,GAAa,eAAC,GAAD,OAKlB,gBAAC/T,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,6CACZ,gBAAC9L,GAAA,EAAK2U,OAAN,CAAa,aAAW,yBACX9T,SAAU,SAACX,GAAD,OAAOuT,EAASvT,EAAEY,OAAOC,MAAzB,EADvB,UAEI,8DAFJ,UAGKlN,EAAQ+gB,oBAHb,aAGK,EAAsBpN,KAAI,SAAAqN,GAAG,OAC1B,yBAAQ9T,MAAO8T,EAAf,SAAqBA,GADK,UAOtC,gBAAC7U,GAAA,EAAK4L,MAAN,CAAYC,UAAU,eAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,+CACZ,eAAC9L,GAAA,EAAKS,QAAN,CAEIC,KAAK,SACLqL,YAAY,cACZ0I,aAAc3O,EACdjF,SAAU,SAACX,GAAD,OAAO2T,EAAgB3T,EAAEY,OAAOC,MAAhC,OAKlB,gBAACf,GAAA,EAAK4L,MAAN,CAAYC,UAAU,WAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,mDACZ,gBAAC9L,GAAA,EAAK2U,OAAN,CAAa,aAAW,yBACX9T,SAAU,SAACX,GAAD,OAAO0T,EAAY1T,EAAEY,OAAOC,MAA5B,EADvB,UAEI,kEAFJ,UAGKlN,EAAQihB,uBAHb,aAGK,EAAyBtN,KAAI,SAAAuN,GAAG,OAC7B,yBAAQhU,MAAOgU,EAAf,SAAqBA,GADQ,UAOzC,gBAAC/U,GAAA,EAAK4L,MAAN,CAAYC,UAAU,OAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,uDACZ,gBAAC9L,GAAA,EAAK2U,OAAN,CAAa,aAAW,yBACX9T,SAAU,SAACX,GAAD,OAAOyT,EAAQzT,EAAEY,OAAOC,MAAxB,EADvB,UAEI,gEAFJ,UAGKlN,EAAQmhB,wBAHb,aAGK,EAA0BxN,KAAI,SAAAuN,GAAG,OAC9B,yBAAQhU,MAAOgU,EAAf,SAAqBA,GADS,UAO1C,gBAAC/U,GAAA,EAAK4L,MAAN,CAAYC,UAAU,QAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,qDACZ,gBAAC9L,GAAA,EAAK2U,OAAN,CAAa,aAAW,yBACX9T,SAAU,SAACX,GAAD,OAAOqM,EAASrM,EAAEY,OAAOC,MAAzB,EADvB,UAEI,8DAFJ,UAGKlN,EAAQohB,oBAHb,aAGK,EAAsBzN,KAAI,SAAAuN,GAAG,OAC1B,yBAAQhU,MAAOgU,EAAf,SAAqBA,GADK,UAOtC,gBAAC/U,GAAA,EAAK4L,MAAN,CAAYC,UAAU,cAAtB,UACI,eAAC7L,GAAA,EAAK8L,MAAN,UAAY,oDACZ,eAAC9L,GAAA,EAAKS,QAAN,CAEIC,KAAK,OACLqL,YAAY,oBACZ0I,aAAc5K,EACdhJ,SAAU,SAACX,GAAD,OAAO4T,EAAe5T,EAAEY,OAAOC,MAA/B,OAMlB,eAACC,GAAA,EAAD,CAAQN,KAAK,SAASO,QAAQ,UAA9B,4BAW3B,E,2yMEzJciU,OAlGf,WAEI,IAAMtS,EAAWC,cACXsS,EAAWxT,aAAY,SAAAxO,GAAK,OAAIA,EAAMoM,SAAV,IAC1B1M,EAA0BsiB,EAA1BtiB,QAASC,EAAiBqiB,EAAjBriB,MAAO8G,EAAUub,EAAVvb,OAGhB7D,EADU4L,aAAY,SAAAxO,GAAK,OAAIA,EAAMmL,SAAV,IAC3BvI,SAEF6J,EAAWC,eAgBnB,OAdEsC,qBAAU,WAEHpM,GAAYA,EAASiP,QACpBpC,ECxBR,yCAAO,WAAOA,EAAUgF,GAAjB,uFAE6BA,IAAb7R,EAFhB,EAEIuI,UAAYvI,SAEbiQ,EAJH,yCAIe,gGAERwF,EAAS,CACXC,QAAQ,CACJ,eAAe,oBACf2B,cAAc,UAAD,OAAWrX,EAASsX,SAL3B,SAUSpH,KAAMC,IAAN,eAA0BsF,GAVnC,uBAUNrF,EAVM,EAUNA,KACR3L,QAAQC,IAAI0L,GAXE,kBAYPA,GAZO,2CAJf,8DAoBCvD,EAAS5E,GAAiBH,oBApB3B,SAqBwBmI,IArBxB,OAqBOI,EArBP,OAsBCxD,EAAS5E,GAAiBF,iBAAiBsI,IAtB5C,kDAyBCxD,EACI5E,GAAiBD,cACf,KAAMsI,UAAY,KAAMA,SAASF,KAAKG,OACpC,KAAMD,SAASF,KAAKG,OACpB,KAAMC,UA7Bf,0DAAP,yDD2BQ3G,EAAS,SAIhB,GAAE,CAACgD,EAAUhD,EAAU7J,IAKxB,iCACI,yCACClD,EAEW,eAAC,GAAD,IAIFC,EACU,eAAC,GAAD,CAASmO,QAAQ,SAAjB,SACSnO,IAIjB,gBAAC+a,GAAA,EAAD,CAAOC,SAAO,EAACgE,UAAQ,EAACC,OAAK,EAAChE,YAAU,EAACnN,UAAU,WAAnD,UACQ,iCACI,gCACI,qCACA,uCACA,uCACA,wCACA,uCACA,4CACA,6BAGR,wCACKhH,QADL,IACKA,OADL,EACKA,EAAQ4N,KAAI,SAAAjP,GAAK,eAEd,gCACI,8BAAKA,EAAM8M,MACX,8BAAK9M,EAAM1B,MAAQ0B,EAAM1B,KAAKnE,OAC9B,wCAAK6F,EAAMyV,iBAAX,aAAK,EAAiBC,UAAU,EAAE,MAClC,sCAAQ1V,EAAM2V,cACd,8BAAK3V,EAAM4V,OACP5V,EAAM4V,OAGN,oBAAGvN,UAAU,eAAeyC,MAAO,CAAEuC,MAAO,WAKhD,8BAAKrN,EAAMsY,YAAN,UACDtY,EAAM6c,kBADL,aACD,EAAkBnH,UAAU,EAAE,IAG9B,oBAAGrN,UAAU,eAAeyC,MAAO,CAAEuC,MAAO,WAKhD,8BAAI,eAAC,iBAAD,CAAe1C,GAAE,iBAAY3K,EAAM8M,IAAlB,KAAjB,SAEI,eAACrE,GAAA,EAAD,CAAQC,QAAU,QAAQL,UAAU,MAApC,2BAzBHrI,EAAM8M,IAFD,WA2CjD,E,6DE1GKgQ,GAAW,SAAA7T,GAEb,OAAO,sBAAKZ,UAAWoB,KAAQsT,SAAU9S,QAAShB,EAAM+T,SAC3D,EACKC,GAAe,SAAAhU,GACjB,OAAO,sBAAKZ,UAAWoB,KAAQyT,MAAxB,SACH,sBAAK7U,UAAWoB,KAAQ0T,QAAxB,SAAkClU,EAAMyF,YAE/C,EAEK0O,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAACtU,GAEX,OAAO,gBAAC,WAAD,WACFuU,KAASC,aAAa,eAAC,GAAD,CAAUT,QAAS/T,EAAM+T,UAAqBI,IACpEI,KAASC,aAAa,eAAC,GAAD,UAAexU,EAAMyF,WAA0B0O,MAI7E,E,oBCFcM,GApBE,SAACzU,GAChB,IAAMqE,EAAK,cAAUrE,EAAMqE,OAE3B,OACE,sBAAIjF,UAAWoB,KAAQ,aAAvB,UACE,iCACE,8BAAKR,EAAM9O,OACX,uBAAKkO,UAAWoB,KAAQkU,QAAxB,UACE,uBAAMtV,UAAWoB,KAAQ6D,MAAzB,SAAiCA,IACjC,wBAAMjF,UAAWoB,KAAQkP,OAAzB,eAAoC1P,EAAMrM,aAG9C,uBAAKyL,UAAWoB,KAAQvO,QAAxB,UACE,yBAAQ+O,QAAShB,EAAM2U,SAAvB,oBACA,yBAAQ3T,QAAShB,EAAM4U,MAAvB,oBAIP,ECqCcC,GApDF,SAAC7U,GAEV,IACQ/M,EADKkN,aAAY,SAACxO,GAAD,OAAWA,EAAMkL,IAAjB,IACjB5J,UAEF6hB,EAAW,OAAG7hB,QAAH,IAAGA,OAAH,EAAGA,EAAWoN,QAAO,SAAC0U,EAAOrhB,GAEtC,OAAOqhB,EAAQrhB,EAAKC,IAAMD,EAAK2Q,KAClC,GAAE,GAED2Q,GAAoB,OAAT/hB,QAAS,IAATA,OAAA,EAAAA,EAAW2N,QAAQ,EAE9BqU,EAAuB,SAAAxhB,GAG5B,EAEKyhB,EAAqB,SAAAxhB,GAG1B,EACKyhB,EACN,qBAAI/V,UAAWoB,KAAQ,cAAvB,gBAEIvN,QAFJ,IAEIA,OAFJ,EAEIA,EAAW+S,KAAI,SAAAjP,GAAK,OACf,eAAC,GAAD,CACU7F,KAAM6F,EAAM7F,KACZyC,IAAKoD,EAAMpD,IACX0Q,MAAOtN,EAAMsN,MACbsQ,SAAUM,EAAsBG,KAAK,KAAMre,EAAM8M,KACjD+Q,MAAOM,EAAmBE,KAAK,KAAMre,IALhCA,EAAMtD,GADN,MAexB,OAAO,gBAAC4hB,GAAD,CAAWtB,QAAS/T,EAAM+T,QAA1B,UACFoB,EACD,uBAAK/V,UAAWoB,KAAQuU,MAAxB,UACI,iDACA,yCAAWD,EAAY9L,QAAQ,SAEnC,uBAAK5J,UAAWoB,KAAQvO,QAAxB,UACI,yBAAQmN,UAAWoB,KAAQ,eAAgBQ,QAAShB,EAAM+T,QAA1D,mBACCiB,GAAY,yBAAQ5V,UAAWoB,KAAQC,OAA3B,4BAGxB,E,oBCnDKoT,GAAW,SAAA7T,GAEb,OAAO,sBAAKZ,UAAWoB,KAAQsT,SAAU9S,QAAShB,EAAM+T,SAC3D,EACKC,GAAe,SAAAhU,GACjB,OAAO,sBAAKZ,UAAWoB,KAAQyT,MAAxB,SACH,sBAAK7U,UAAWoB,KAAQ0T,QAAxB,SAAkClU,EAAMyF,YAE/C,EAEK0O,GAAeC,SAASC,eAAe,YAY9BC,GAVD,SAACtU,GAEX,OAAO,gBAAC,WAAD,WACFuU,KAASC,aAAa,eAAC,GAAD,CAAUT,QAAS/T,EAAM+T,UAAqBI,IACpEI,KAASC,aAAa,eAAC,GAAD,UAAexU,EAAMyF,WAA0B0O,MAI7E,EC2CcmB,GA9DD,SAACtV,GAEX,IACQ/M,EADYkN,aAAY,SAACxO,GAAD,OAAWA,EAAMyL,WAAjB,IACxBnK,UAGA8D,EADIoJ,aAAY,SAACxO,GAAD,OAAWA,EAAMoF,KAAjB,IAChBA,MAEF+d,EAAW,OAAG7hB,QAAH,IAAGA,OAAH,EAAGA,EAAWoN,QAAO,SAAC0U,EAAOrhB,GAEtC,OAAOqhB,EAAQrhB,EAAKC,IAAMD,EAAK2Q,KAClC,GAAE,GAID4Q,GAFoB,OAAThiB,QAAS,IAATA,KAAW2N,OAEC,SAAAnN,GAG5B,GAEKyhB,EAAqB,SAAAxhB,GAG1B,EACKyhB,EACN,qBAAI/V,UAAWoB,KAAQ,cAAvB,gBAEIvN,QAFJ,IAEIA,OAFJ,EAEIA,EAAW+S,KAAI,SAAAjP,GAAK,OACf,eAAC,GAAD,CACU7F,KAAM6F,EAAM7F,KACZyC,IAAKoD,EAAMpD,IACX0Q,MAAOtN,EAAMsN,MACbsQ,SAAUM,EAAsBG,KAAK,KAAMre,EAAM8M,KACjD+Q,MAAOM,EAAmBE,KAAK,KAAMre,IALhCA,EAAMtD,GADN,MAexB,OAAO,gBAAC8hB,GAAD,CAAYxB,QAAS/T,EAAM+T,QAA3B,UACFoB,EACD,uBAAK/V,UAAWoB,KAAQuU,MAAxB,UACI,iDACA,gDAAWD,QAAX,IAAWA,OAAX,EAAWA,EAAa9L,QAAQ,SAEpC,uBAAK5J,UAAWoB,KAAQuU,MAAxB,UACI,kDACA,gCAAOhe,EAAMtD,QAEjB,+BACI,0JAEJ,sBAAK2L,UAAWoB,KAAQvO,QAAxB,SACI,yBAAQmN,UAAWoB,KAAQ,eAAgBQ,QAAShB,EAAM+T,QAA1D,uBAIX,ECoBcyB,OA3Df,WAEE,MAAsCvX,oBAAS,GAA/C,oBAAOwX,EAAP,KAAoBC,EAApB,KACA,EAAwCzX,oBAAS,GAAjD,oBAAO0X,EAAP,KAAqBC,EAArB,KAkBA,OACE,gBAAC,cAAD,WACIH,GAAgB,eAAC,GAAD,CAAM1B,QAdJ,WACtB2B,GAAe,EAChB,IAaKC,GAAiB,eAAC,GAAD,CAAO5B,QAPL,WACvB6B,GAAgB,EACjB,IAMG,eAAC,GAAD,CAAQvT,WApBY,WACtBqT,GAAe,EAChB,IAmBG,uBAAMtW,UAAU,OAAhB,SACE,eAACP,GAAA,EAAD,UACE,gBAAC,KAAD,WACE,eAAC,KAAD,CAAOgX,KAAK,IAAIC,QAAS,eAAC,GAAD,IAAgBC,OAAK,IAC9C,eAAC,KAAD,CAAOF,KAAK,gBAAgBC,QAAS,eAAC,GAAD,MACrC,gBAAC,KAAD,CAAOD,KAAK,QAAZ,UACE,eAAC,KAAD,CAAOA,KAAK,OAAOC,QAAS,eAAC,GAAD,MAC5B,eAAC,KAAD,CAAOD,KAAK,MAAMC,QAAS,eAAC,GAAD,MAC3B,eAAC,KAAD,CAAOD,KAAK,GAAGC,QAAS,eAAC,GAAD,SAE1B,eAAC,KAAD,CAAOD,KAAK,SAASC,QAAS,eAAC,GAAD,MAC9B,eAAC,KAAD,CAAOD,KAAK,YAAYC,QAAS,eAAC,GAAD,MACjC,eAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,GAAD,MAChC,eAAC,KAAD,CAAOD,KAAK,YAAYC,QAAS,eAAC,GAAD,MACjC,eAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,GAAD,MAChC,eAAC,KAAD,CAAOD,KAAK,cAAcC,QAAS,eAAC,GAAD,CAAkBtH,YA5BrC,WACxBoH,GAAgB,EACjB,MA2BS,eAAC,KAAD,CAAOC,KAAK,aAAaC,QAAS,eAAC,GAAD,MAClC,eAAC,KAAD,CAAOD,KAAK,kBAAkBC,QAAS,eAAC,GAAD,MACvC,eAAC,KAAD,CAAOD,KAAK,qBAAqBC,QAAS,eAAC,GAAD,MAC1C,eAAC,KAAD,CAAOD,KAAK,QAAQC,QAAS,eAAC,GAAD,MAC7B,eAAC,KAAD,CAAOD,KAAK,SAASC,QAAS,eAAC,GAAD,MAC9B,eAAC,KAAD,CAAOD,KAAK,WAAWC,QAAS,eAAC,GAAD,MAChC,eAAC,KAAD,CAAOD,KAAK,uBAAuBC,QAAS,eAAC,GAAD,MAC5C,eAAC,KAAD,CAAOD,KAAK,0BAA0BC,QAAS,eAAC,GAAD,MAC/C,eAAC,KAAD,CAAOD,KAAK,mBAAmBC,QAAS,eAAC,GAAD,aAI9C,eAAC,GAAD,MAGL,ECvEcE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACT,GAEJ,ECAYQ,IAASC,WAAWtC,SAASC,eAAe,SACpDsC,OACH,eAAC,IAAD,CAAUja,MAASA,GAAnB,SAEI,eAAC,GAAD,OAQNsZ,I,qBCrBAllB,EAAOC,QAAU,CAAC,SAAW,6BAA6B,MAAQ,0BAA0B,aAAa,+B,qBCAzGD,EAAOC,QAAU,CAAC,aAAa,yBAAyB,MAAQ,oBAAoB,QAAU,sBAAsB,cAAc,0BAA0B,OAAS,qB,qBCArKD,EAAOC,QAAU,CAAC,YAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,OAAS,yBAAyB,QAAU,0B,qBCA1KD,EAAOC,QAAU,CAAC,OAAS,iCAAiC,KAAO,+BAA+B,MAAQ,gCAAgC,KAAO,+B","file":"static/js/main.a9b269e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"CartModal_backdrop__1qFmp\",\"modal\":\"CartModal_modal__19arf\",\"slide-down\":\"CartModal_slide-down__1TWY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__q6JIQ\",\"main-image\":\"Header_main-image__1Idjr\"};","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productListSlice = createSlice({\r\n    name: 'productList',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        page:1,\r\n        pages:1\r\n    },\r\n    reducers:{\r\n        productListRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        productListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload.products\r\n                    state.page = action.payload.page\r\n                    state.pages = action.payload.pages\r\n        },\r\n\r\n        productListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productListActions = productListSlice.actions\r\nexport const productListReducer = productListSlice.reducer\r\nexport default productListSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst productDetailsSlice = createSlice({\r\n    name: 'product',\r\n    initialState: {\r\n            product: {},\r\n            loading: false,\r\n            error:null\r\n\r\n    },\r\n    reducers:{\r\n        productDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        productDetailsSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.product = action.payload\r\n        },\r\n\r\n        productDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const productDetailsActions = productDetailsSlice.actions\r\nexport const productDetailsReducer = productDetailsSlice.reducer\r\nexport default productDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems'))\r\n                             : []\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        cartItems:cartItemsFromStorage,\r\n        dostava:'',\r\n        placanje:''\r\n    },\r\n    reducers:{\r\n        addCartItem(state, action){\r\n           \r\n            const newItem = action.payload\r\n            const existItem = state.cartItems.find(x => x.id === newItem.id)\r\n            if(existItem){\r\n                    state.cartItems.find(item => item.id === existItem.id).qty += newItem.qty\r\n\r\n            }else{\r\n                \r\n                    state.cartItems.push(newItem) \r\n            }\r\n        },\r\n\r\n        removeCartItem(state, action) {\r\n                const id = action.payload\r\n                const excludeCartItem = state.cartItems.filter(x => x.id !== id)\r\n                state.cartItems = excludeCartItem\r\n        },\r\n\r\n       cleanCartItems(state, action) {\r\n            \r\n            state.cartItems=[]\r\n       },\r\n\r\n       addDostavaAndPlacanje(state, action) {\r\n            const obj = action.payload\r\n            state.dostava = obj.dostava\r\n            state.placanje = obj.placanje\r\n       },\r\n\r\n    }\r\n})\r\nexport const cartActions = cartSlice.actions\r\nexport const cartReducer = cartSlice.reducer\r\nexport default cartSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            userInfo: userInfoFromStorage,\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userLoginRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userLoginSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n            },\r\n\r\n            userLoginFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userLogout(state, action) {\r\n                state.userInfo = null;\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userActions = userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\nexport default userSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst userRegisterSlice = createSlice({\r\n  name: \"userRegister\",\r\n  initialState: {\r\n    userInfo: userInfoFromStorage,\r\n    loading: false,\r\n    error: \"\",\r\n  },\r\n  reducers: {\r\n    userRegisterRequest(state) {\r\n      state.loading = true;\r\n    },\r\n\r\n    userRegisterSuccess(state, action) {\r\n      state.loading = false;\r\n      state.userInfo = action.payload;\r\n    },\r\n\r\n    userRegisterFail(state, action) {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    userLogout(state, action) {\r\n      state.userInfo = null;\r\n    },\r\n  },\r\n});\r\n\r\n\r\n\r\nexport const userRegisterActions = userRegisterSlice.actions;\r\nexport const userRegisterReducer = userRegisterSlice.reducer;\r\nexport default userRegisterSlice;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userDetailsSlice = createSlice({\r\n        name: \"user\",\r\n        initialState: {\r\n            user: {},\r\n            loading: false,\r\n            error: ''\r\n        },\r\n        reducers: {\r\n            userDetailsRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.user = action.payload;\r\n            },\r\n\r\n            userDetailsFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n\r\n            userDetailsReset(state, action) {\r\n                state.user = {};\r\n               \r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDetailsActions = userDetailsSlice.actions;\r\nexport const userDetailsReducer = userDetailsSlice.reducer;\r\nexport default userDetailsSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst userUpdateProfileSlice = createSlice({\r\n        name: \"userUpdateProfile\",\r\n        initialState: {\r\n            userInfo: {},\r\n            loading: false,\r\n            error: '',\r\n            success: false\r\n        },\r\n        reducers: {\r\n            userUpdateProfileRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDetailsSuccess(state, action) {\r\n                state.loading = false;\r\n                state.userInfo = action.payload;\r\n                state.success= true;\r\n            },\r\n\r\n            userUpdateProfileFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateProfileReset(state, action) {\r\n                state.userInfo = {}\r\n            },\r\n\r\n           \r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateProfileActions = userUpdateProfileSlice.actions;\r\nexport const userUpdateProfileReducer = userUpdateProfileSlice.reducer;\r\nexport default userUpdateProfileSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n                             : {}\r\n\r\nconst shippingSlice = createSlice({\r\n    name: 'shipping',\r\n    initialState: {\r\n       shippingAddress: shippingAddressFromStorage\r\n    },\r\n    reducers:{\r\n\r\n        saveShippingAdress(state, action) {\r\n\r\n                state.shippingAddress = action.payload\r\n                \r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const shippingActions = shippingSlice.actions\r\nexport const shippingReducer = shippingSlice.reducer\r\nexport default shippingSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst paymentSlice = createSlice({\r\n    name: 'payment',\r\n    initialState: {\r\n        paymentMethod:''\r\n    },\r\n    reducers:{\r\n        savePaymentMethod(state, action){\r\n           \r\n            state.paymentMethod = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const paymentActions = paymentSlice.actions\r\nexport const paymentReducer = paymentSlice.reducer\r\nexport default paymentSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderSlice = createSlice({\r\n    name: 'order',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n       order:{},\r\n       error: null\r\n    },\r\n    reducers:{\r\n        orderCreateRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderCreateSuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n                state.success = true;\r\n                state.order = action.payload;\r\n        },\r\n\r\n        orderCreateFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderCreateReset(state, action) {\r\n            state.loading = false;\r\n            state.order = {};\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderActions = orderSlice.actions\r\nexport const orderReducer = orderSlice.reducer\r\nexport default orderSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderDetailsSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        order:{},\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderDetailsRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderDetailsSuccess(state, action) {\r\n                state.loading = false\r\n                state.order = action.payload\r\n        },\r\n\r\n        orderDetailsFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderDetailsActions = orderDetailsSlice.actions\r\nexport const orderDetailsReducer = orderDetailsSlice.reducer\r\nexport default orderDetailsSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\nconst orderPaySlice = createSlice({\r\n    name: 'orderPay',\r\n    initialState: {\r\n       loading: false,\r\n       success: false,\r\n      \r\n    },\r\n    reducers:{\r\n        orderPayRequest(state, action){\r\n           \r\n            state.loading = true\r\n        },\r\n\r\n        orderPaySuccess(state, action) {\r\n               \r\n                state.loading = false;\r\n               \r\n                state.success = true;\r\n        },\r\n\r\n        orderPayFail(state, action) {\r\n            state.loading = false;\r\n            state.error = action.payload\r\n        },\r\n\r\n        orderPayReset(state, action) {\r\n            state.loading = false;\r\n            state.success = false\r\n        },\r\n\r\n\r\n    }\r\n})\r\nexport const orderPayActions = orderPaySlice.actions\r\nexport const orderPayReducer = orderPaySlice.reducer\r\nexport default orderPaySlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderOrdersProfileSlice = createSlice({\r\n    name: 'orderDetails',\r\n    initialState: {\r\n        orders:[],\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        orderOrdersProfileRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        orderOrdersProfileSuccess(state, action) {\r\n                state.loading = false\r\n                state.orders = action.payload\r\n        },\r\n\r\n        orderOrdersProfileFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        orderOrdersProfileReset(state, action) {\r\n            state.loading = false\r\n            state.orders = []\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderOrdersProfileActions = orderOrdersProfileSlice.actions\r\nexport const orderOrdersProfileReducer = orderOrdersProfileSlice.reducer\r\nexport default orderOrdersProfileSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userListSlice = createSlice({\r\n        name: \"userList\",\r\n        initialState: {\r\n            users: [],\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userListRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userListSuccess(state, action) {\r\n                state.loading = false;\r\n                state.users = action.payload;\r\n                state.error = null\r\n            },\r\n\r\n            userListFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n                console.log('jel se ovo ispalilo?')\r\n            },\r\n\r\n            userListReset(state, action) {\r\n                state.users = [];\r\n                \r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userListActions = userListSlice.actions;\r\nexport const userListReducer = userListSlice.reducer;\r\nexport default userListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo'))\r\n                             : null\r\n\r\nconst userDeleteSlice = createSlice({\r\n        name: \"userDelete\",\r\n        initialState: {\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userDeleteRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userDeleteSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userDeleteFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userDeleteReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userDeleteActions = userDeleteSlice.actions;\r\nexport const userDeleteReducer = userDeleteSlice.reducer;\r\nexport default userDeleteSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst reviewCreateSlice = createSlice({\r\n    name: 'reviewCreate',\r\n    initialState: {\r\n        success:false,\r\n        loading: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        reviewCreateRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        reviewCreateSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.success = true\r\n        },\r\n\r\n        reviewCreateFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        reviewCreateReset(state, action){\r\n            state.success = false\r\n            state.loading = false\r\n            state.error =  null\r\n        }\r\n\r\n    }\r\n})\r\nexport const reviewCreateActions = reviewCreateSlice.actions\r\nexport const reviewCreateReducer = reviewCreateSlice.reducer\r\nexport default reviewCreateSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst caruselSlice = createSlice({\r\n    name: 'carusel',\r\n    initialState: {\r\n        products: [],\r\n        loading: false,\r\n        error: null,\r\n        \r\n    },\r\n    reducers:{\r\n        caruselRequest(state){\r\n            state.loading = true\r\n            state.products = []\r\n        },\r\n\r\n        caruselSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.products = action.payload\r\n                    \r\n        },\r\n\r\n        caruselFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const caruselActions = caruselSlice.actions\r\nexport const caruselReducer = caruselSlice.reducer\r\nexport default caruselSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst deleteProductSlice = createSlice({\r\n    name: 'deleteProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null\r\n    },\r\n    reducers:{\r\n        deleteProductRequest(state){\r\n            state.loading = true\r\n        },\r\n\r\n        deleteProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n                    \r\n        },\r\n\r\n        deleteProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        },\r\n        deleteProductReset(state, action) {\r\n            state.error = null\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const deleteProductActions = deleteProductSlice.actions\r\nexport const deleteProductReducer = deleteProductSlice.reducer\r\nexport default deleteProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst createProductSlice = createSlice({\r\n    name: 'createProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null,\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        createProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        createProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        createProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        createProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const createProductActions = createProductSlice.actions\r\nexport const createProductReducer = createProductSlice.reducer\r\nexport default createProductSlice","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userUpdateSlice = createSlice({\r\n        name: \"userUpdate\",\r\n        initialState: {\r\n            user:{},\r\n            success: false,\r\n            loading: false,\r\n            error: null\r\n        },\r\n        reducers: {\r\n            userUpdateRequest(state) {\r\n                state.loading = true;\r\n               \r\n            },\r\n\r\n            userUpdateSuccess(state, action) {\r\n                state.loading = false;\r\n                state.success = true;\r\n            },\r\n\r\n            userUpdateFail(state, action) {\r\n                state.loading = false;\r\n                state.error = action.payload;\r\n            },\r\n            userUpdateReset(state, action) {\r\n                state.loading = false;\r\n                state.success = false;\r\n                state.user = {}\r\n            },\r\n        },\r\n});\r\n\r\n\r\n\r\nexport const userUpdateActions = userUpdateSlice.actions;\r\nexport const userUpdateReducer = userUpdateSlice.reducer;\r\nexport default userUpdateSlice;\r\n","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst updateProductSlice = createSlice({\r\n    name: 'updateProduct',\r\n    initialState: {\r\n        loading:false,\r\n        success: false,\r\n        error: null,\r\n        product: {}\r\n    },\r\n    reducers:{\r\n        updateProductRequest(state){\r\n            state.loading = true\r\n            \r\n        },\r\n\r\n        updateProductSuccess(state, action) {\r\n            state.loading = false\r\n            state.success = true\r\n            state.product = action.payload        \r\n        },\r\n\r\n        updateProductFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n            state.success = false\r\n        },\r\n        updateProductReset(state, action) {\r\n            \r\n            state.product = {}\r\n            state.success = false\r\n        }\r\n\r\n    }\r\n})\r\nexport const updateProductActions = updateProductSlice.actions\r\nexport const updateProductReducer = updateProductSlice.reducer\r\nexport default updateProductSlice","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst orderListSlice = createSlice({\r\n    name: 'orderList',\r\n    initialState: {\r\n        orders: [],\r\n        loading: false,\r\n        error: null,\r\n       \r\n    },\r\n    reducers:{\r\n        orderListRequest(state){\r\n            state.loading = true\r\n            state.orders = []\r\n        },\r\n\r\n        orderListSuccess(state, action) {\r\n                    state.loading = false\r\n                    state.orders = action.payload\r\n                   \r\n        },\r\n\r\n        orderListFail(state, action) {\r\n            state.loading = false\r\n            state.error = action.payload\r\n        }\r\n\r\n    }\r\n})\r\nexport const orderListActions = orderListSlice.actions\r\nexport const orderListReducer = orderListSlice.reducer\r\nexport default orderListSlice","import {configureStore} from '@reduxjs/toolkit'\r\nimport { productListReducer } from './product-slice'\r\nimport { productDetailsReducer } from './productDetails-slice'\r\nimport { cartReducer } from './cart-slice'\r\nimport { userReducer } from './user_slice'\r\nimport { userRegisterReducer } from './userRegister-slice'\r\nimport { userDetailsReducer } from './userDetails-slice'\r\nimport { userUpdateProfileReducer } from './userUpdateProfile-slice'\r\nimport { shippingReducer } from './shipping-slice'\r\nimport { paymentReducer } from './payment-slice'\r\nimport { orderReducer } from './order-slice'\r\nimport { orderDetailsReducer} from './orderDetails-slice'\r\nimport { orderPayReducer} from './orderPay-slice'\r\nimport { orderOrdersProfileReducer} from './orderOrdersProfile-slice'\r\nimport { userListReducer} from './userList-slice'\r\nimport { userDeleteReducer} from './userDelete-slice'\r\nimport { reviewCreateReducer } from './review-slice'\r\nimport { caruselReducer} from './carusel-slice'\r\nimport { deleteProductReducer} from './deleteProduct-slice'\r\nimport { createProductReducer} from './createProduct-slice'\r\nimport { userUpdateReducer } from './userUpdate-slice'\r\nimport { updateProductReducer } from './updateProduct-slice'\r\nimport { orderListReducer } from './orderList-slice'\r\n\r\nconst store = configureStore({\r\n    reducer:{\r\n        productList: productListReducer,\r\n        product: productDetailsReducer,\r\n        cart: cartReducer,\r\n        userLogin: userReducer,\r\n        userRegister: userRegisterReducer,\r\n        userDetails: userDetailsReducer,\r\n        userUpdateProfile: userUpdateProfileReducer,\r\n        shipping: shippingReducer,\r\n        payment: paymentReducer,\r\n        order: orderReducer,\r\n        orderDetail: orderDetailsReducer,\r\n        orderPay: orderPayReducer,\r\n        orderOrdersProfile: orderOrdersProfileReducer,\r\n        userList: userListReducer,\r\n        userDelete: userDeleteReducer,\r\n        reviewCreate: reviewCreateReducer,\r\n        carusel: caruselReducer,\r\n        deleteProduct: deleteProductReducer,\r\n        createProduct: createProductReducer,\r\n        userUpdate: userUpdateReducer,\r\n        updateProduct: updateProductReducer,\r\n        orderList: orderListReducer\r\n    }\r\n})\r\n\r\nexport default store","import React, { useState } from 'react'\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\n\r\n\r\nfunction SearchBox() {\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n    const navigate = useNavigate()\r\n    const location = useLocation();\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log('Vrednost KEYWORDA: ', keyword)\r\n        if(keyword){\r\n            \r\n            navigate(`/?keyword=${keyword}`)\r\n        }else{\r\n\r\n            navigate(location.pathname)\r\n        }\r\n\r\n    }\r\n  return (\r\n    \r\n    <Form onSubmit={submitHandler} >\r\n        <Container>\r\n            <Row>\r\n                <Col md={10}>\r\n                    <Form.Control \r\n                        type='text'\r\n                        name='keyword'\r\n                        inline ='true'\r\n                        className='mr-sm-2 ml-sm-5'\r\n                        onChange={(e) => setKeyword(e.target.value) }>\r\n                    </Form.Control>\r\n                </Col>\r\n                <Col md={2}>\r\n                <Button \r\n                    type='submit'\r\n                    variant='outline-success'\r\n                    className='p-2'>\r\n                    Pretraga\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import { userActions} from './user_slice'\r\nimport { userDetailsActions } from './userDetails-slice'\r\nimport axios from 'axios'\r\nimport { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport { userListActions } from './userList-slice'\r\n\r\n\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/login/',\r\n            {\r\n                'email': email,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userActions.userLoginRequest())\r\n            const data = await fetchData()\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userActions.userLoginFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout =  () => {\r\n\r\n    return (dispatch) => {\r\n\r\n        localStorage.removeItem('userInfo')\r\n        dispatch(userActions.userLogout())\r\n        dispatch(userDetailsActions.userDetailsReset())\r\n        dispatch(orderOrdersProfileActions.orderOrdersProfileReset())\r\n        dispatch(userListActions.userDetailsReset())\r\n    }\r\n}\r\n\r\n// export const productDetails = (id) => {\r\n//     return async (dispatch) => {\r\n\r\n\r\n//         const fetchData = async () => {\r\n           \r\n//             const { data } = await axios.get(`/api/products/${id}`)\r\n//             return data;\r\n//         }\r\n\r\n//         try {\r\n//             dispatch(productDetailsActions.productDetailsRequest())\r\n//             const cartData = await fetchData()\r\n//             dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n//         } catch (error) {\r\n//             dispatch(\r\n//                 productDetailsActions.productDetailsFail(\r\n//                   error.response && error.response.data.detail\r\n//                   ? error.response.data.detail\r\n//                   : error.message\r\n//                 )\r\n//               );\r\n//         }\r\n\r\n//     }\r\n// }\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;","import CartIcon  from './Cart/CartIcon'\r\nimport classes from './HeaderCartButton.module.css'\r\nimport {  useEffect, useState } from 'react';\r\nimport {  useSelector } from 'react-redux'\r\n\r\nconst HeaderCartButton = (props) => {\r\n\r\n    const [btnIsHihg, setBtnIsHigh] = useState(false)\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    \r\n    const numberOfCartItems = cartItems?.reduce((currentNumber, item)=>{\r\n        return currentNumber +  item.qty\r\n    }, 0)\r\n\r\n    const btnClasses = `${classes.button} ${btnIsHihg ?  classes.bump : ''}`\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        if(cartItems?.length === 0 ){\r\n            return;\r\n        }\r\n        setBtnIsHigh(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHigh(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n\r\n    }, [cartItems])\r\n\r\n   \r\n    return(\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={classes.icon}>\r\n                <CartIcon ></CartIcon>\r\n            </span>\r\n            <span>Vasa Korpa</span>\r\n            <span className={classes.badge}>\r\n                {numberOfCartItems}\r\n            </span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default HeaderCartButton","export default __webpack_public_path__ + \"static/media/berberis-erecta-1-350x350.355e0771.jpg\";","import React from \"react\";\r\nimport { Container, Navbar, Nav, Row, Col, NavDropdown } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCartFlatbed,\r\n  faUser,\r\n  faInfo,\r\n  faAddressBook,\r\n  faAnchor,\r\n  faContactBook,\r\n  faPhone,\r\n  faFlag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Fragment } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SearchBox from \"./SearchBox\";\r\nimport { logout } from \"../store/user-actions\";\r\nimport HeaderCardButton from './/UI/HeaderCardButton'\r\nimport classes from './Header.module.css'\r\nimport image from '../../src/assets/images/berberis-erecta-1-350x350.jpg'\r\nfunction Header(props) {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n  const logoutHandler = (event) => {\r\n    dispatch(logout());\r\n  };\r\n  return (\r\n    <Fragment>\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n              <LinkContainer to=\"/\">\r\n                <Navbar.Brand>\r\n                  <h2>PolicPlant</h2>\r\n                </Navbar.Brand>\r\n              </LinkContainer>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n                  <div>                     \r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faPhone} />     Pozovite nas</div>\r\n                      \r\n                    <div >065356458</div>\r\n                  </div>\r\n\r\n              </Navbar.Text>\r\n              \r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"#\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faFlag} /> Placeholder</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n\r\n              <Navbar.Text style={{ textAlign: 'center'}}>\r\n              <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <HeaderCardButton onClick={props.onShowCart}></HeaderCardButton>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n              </Navbar.Text>\r\n        </Container>\r\n      </Navbar>\r\n      <Navbar bg=\"light\" variant=\"light\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <Row>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" md={4} style={{ pading:2}}/>\r\n            \r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n              <Col md={4} style={{ pading:10, margin:10, size:20}} >\r\n                <SearchBox ></SearchBox>\r\n              </Col>\r\n              <Col md={{ span: 10, offset: 2 }}>\r\n                <Nav>\r\n                  <LinkContainer to=\"/cart\" >\r\n                    <Nav.Link >\r\n                      <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faCartFlatbed} />     Korpa</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/info\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faInfo} />  Info</div>\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer to=\"/onama\" >\r\n                  \r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faAnchor}></FontAwesomeIcon>     O nama</div>\r\n                   \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  <LinkContainer\r\n                    to=\"/kontakt\">\r\n                    <Nav.Link>\r\n                    <div style={{fontSize: '20px'}}><FontAwesomeIcon icon={faContactBook} />   Kontakt</div>\r\n                      \r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.user_name} id=\"username\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer\r\n                        to=\"/profile\">\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler} >\r\n                        LogOut\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : (\r\n                    <LinkContainer\r\n                      to=\"/login\"\r\n                      \r\n                    >\r\n                      <Nav.Link>\r\n                        <FontAwesomeIcon icon={faUser} />\r\n                        Login/Register\r\n                      </Nav.Link>\r\n                    </LinkContainer>\r\n                  )}\r\n                  {userInfo && userInfo.isAdmin && (\r\n                    <NavDropdown title=\"Admin\" id=\"adminmenu\" style={{fontSize: '20px'}}>\r\n                      <LinkContainer to=\"/admin/userlist\">\r\n                        <NavDropdown.Item>Users</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/productlist\">\r\n                        <NavDropdown.Item>Products</NavDropdown.Item>\r\n                      </LinkContainer>\r\n\r\n                      <LinkContainer to=\"/admin/orderlist\">\r\n                        <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                    </NavDropdown>\r\n                  )}\r\n                </Nav>\r\n              </Col>\r\n            </Navbar.Collapse>\r\n          </Row>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    { '' && <div className={classes[\"main-image\"]}>\r\n        <img src={image} alt=\"Green color background\" ></img>\r\n    </div>}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"text-center py-3\">Copyright &copy; PolicPlant</Col>\r\n            </Row>\r\n        </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Rating({value, text, color}) {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=1 \r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=2 \r\n              ? 'fas fa-star'\r\n              : value >=1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=3\r\n              ? 'fas fa-star'\r\n              : value >=2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=4 \r\n              ? 'fas fa-star'\r\n              : value >=3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n          <i style={{color}} className={\r\n              value >=5\r\n              ? 'fas fa-star'\r\n              : value >=4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n          {text && text}\r\n      <span>\r\n\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Product({product}) {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded\">\r\n        <Link to={`/products/${product._id}`}>\r\n            <Card.Img src={product.image}></Card.Img>\r\n        </Link>\r\n        <Card.Body>\r\n            <Link to={`/products/${product._id}`}>\r\n             <Card.Title as=\"div\" >\r\n                 <strong style={{ fontSize: 28}}>{product.name}</strong>\r\n             </Card.Title>\r\n            </Link>\r\n            {/* <Card.Text as=\"div\">\r\n                <div className=\"my-3\">\r\n                        <Rating value={product.rating} text={`${product.numReviews} komentara`} color={'#f8e825'}></Rating>\r\n                </div>\r\n            </Card.Text> */}\r\n            <Card.Text as=\"h3\" style={{ color:'black'}}>\r\n                    {product.price} din\r\n            </Card.Text>\r\n            <Card.Text as=\"h7\">\r\n                    {product.countInStock > 0 ? <strong style={{ color:'green'}}>Na stanju</strong> : <strong style={{ color:'red'}}>Nema na stanju</strong>} \r\n            </Card.Text>\r\n        </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Product","import { productListActions} from './product-slice'\r\nimport { productDetailsActions} from './productDetails-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword = '', page) => {\r\n    return async (dispatch) => {\r\n\r\n        console.log('ProductListttt:',keyword)\r\n        const fetchData = async () => {\r\n\r\n            if(keyword === null){\r\n                keyword = ''\r\n            }\r\n           \r\n            const { data } = await axios.get(`/api/products/?keyword=${keyword}&page=${page}`)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productListActions.productListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productListActions.productListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productListActions.productListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productDetails = (id) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n           \r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(productDetailsActions.productDetailsRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(productDetailsActions.productDetailsSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                productDetailsActions.productDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nfunction Loader() {\r\n  return (\r\n    <Spinner\r\n     animation='border' \r\n     role='status'\r\n     style={{\r\n         height: '100px',\r\n         width: '100px',\r\n         margin:'auto',\r\n         display:'block'\r\n     }} >\r\n            <span className='sr-only'>\r\n                Loading...\r\n            </span>\r\n    </Spinner>\r\n  )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nfunction Message({variant, children, message}) {\r\n  return (\r\n    <Alert variant={variant} >\r\n      <Alert.Heading>{message}</Alert.Heading>\r\n        {children}\r\n    </Alert>\r\n  )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\n\r\nfunction Paginate({pages, page, keyword='', isAdmin = false}) {\r\n\r\n    if(keyword === null){\r\n        keyword = ''\r\n    }\r\n    console.log('Pravi rezultati:', pages, page, keyword)\r\n  return (\r\n    \r\n    pages > 1 && (\r\n        <Pagination>\r\n            { [...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x+1}\r\n                    to={`/?keyword=${keyword}&page=${x + 1}`}>\r\n                        <Pagination.Item active={x + 1 == page}>{x + 1}</Pagination.Item>\r\n                    \r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import React, { useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image} from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { caruselTop } from '../store/carusel-actions'\r\n\r\nfunction ProductCarusel() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productTop = useSelector(state => state.carusel)\r\n    const { loading, error, products} = productTop\r\n\r\n    useEffect(() => {\r\n        dispatch(caruselTop())\r\n    }, [dispatch])\r\n  return (\r\n    \r\n    loading ? <Loader></Loader> \r\n            : error ? <Message variant='danger'>\r\n\r\n            </Message>\r\n            : (\r\n                <Carousel pause='hover' className='bg-dark'>\r\n                    {products.map(product => (\r\n                        <Carousel.Item key={product._id}>\r\n                            <Link to={`/product/${product._id}`}>\r\n                                <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                </Image>\r\n                                <Carousel.Caption className='carusel.caption'>\r\n                                    <h4>{product.name} ({product.price} din)</h4>\r\n                                </Carousel.Caption>\r\n\r\n                            </Link>\r\n\r\n                        </Carousel.Item>\r\n                    ))}\r\n                </Carousel>\r\n            )\r\n  )\r\n}\r\n\r\nexport default ProductCarusel","import { caruselActions } from './carusel-slice'\r\nimport axios from 'axios'\r\n\r\nexport const caruselTop = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n       \r\n\r\n        const fetchData = async () => {\r\n\r\n            \r\n            const { data } = await axios.get(\r\n                `/api/products/carusel/top/`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(caruselActions.caruselRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(caruselActions.caruselSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                caruselActions.caruselFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../compontents/Product'\r\nimport { useDispatch , useSelector } from 'react-redux'\r\nimport { listProducts } from '../store/product-actions'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport Paginate from '../compontents/Paginate'\r\nimport ProductCarucel from '../compontents/ProductCarusel'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\nfunction HomeScreen() {\r\n\r\n  const dispatch = useDispatch()\r\n  const product = useSelector(state => state.productList)\r\n  const { error, loading, products, page, pages } = product\r\n  const [search, setSearch] = useSearchParams();\r\n  const keyword = search.get(\"keyword\");\r\n  \r\n  console.log('uspehhhhhh:',page,keyword,page,pages)\r\n\r\n  useEffect(()=>{\r\n\r\n    dispatch(listProducts(keyword,page))\r\n        \r\n }, [dispatch, keyword]);\r\n\r\n \r\n  return (\r\n    <div>\r\n        { keyword && <ProductCarucel></ProductCarucel>}\r\n        \r\n        <h1>Proizvodi:</h1>\r\n        { loading ? <Loader></Loader>\r\n                 : error ? <Message variant='danger'>{error}</Message> \r\n                 :\r\n                 <div>  \r\n                    <Row>\r\n                     {products?.map(product => (\r\n                     <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                         <Product product={product}/>\r\n                     </Col>\r\n                      ))}\r\n                      <Paginate page={page} pages={pages} keyword={keyword}></Paginate>\r\n                    </Row>\r\n                </div>}\r\n                \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import { cartActions } from './cart-slice'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const fetchData = async () => {\r\n\r\n            const { data } = await axios.get(`/api/products/${id}`)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n\r\n            const data = await fetchData()\r\n            const product = {\r\n                id: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty: qty\r\n            }\r\n            dispatch(cartActions.addCartItem(product))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => {\r\n    return  (dispatch, getState) => {\r\n\r\n            dispatch(cartActions.removeCartItem(id))\r\n           \r\n            localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n    }\r\n}\r\n\r\nexport const addDostavaAndPlacanjeCart = (dostava, placanje) => {\r\n    return  (dispatch) => {\r\n            console.log(\"ovo je actions\");\r\n            const item = {\r\n                dostava,\r\n                placanje\r\n            }\r\n            dispatch(cartActions.addDostavaAndPlacanje(item))\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form} from 'react-bootstrap'\r\nimport Rating from '../compontents/Rating'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport { useParams } from 'react-router';\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport {  productDetails } from '../store/product-actions'\r\nimport {  addToCart,removeFromCart } from '../store/cart-actions'\r\n\r\nimport {  createReview } from '../store/review-actions'\r\nimport { reviewCreateActions } from '../store/review-slice'\r\n\r\nfunction ProductScreen({match}) {\r\n    \r\n  const { id } = useParams();\r\n  \r\n  const navigate = useNavigate();\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userLogin = useSelector(state => state.userLogin)\r\n  const {userInfo} = userLogin\r\n\r\n  useEffect(()=>{\r\n\r\n       dispatch(productDetails(id))\r\n\r\n       return () => {}\r\n        \r\n  }, [dispatch, id]);\r\n\r\n  const productDet = useSelector(state => state.product)\r\n  const {loading, error, product} = productDet\r\n\r\n  const addToCartHandler = () => {\r\n      dispatch(addToCart(Number(id), Number(qty)));\r\n      console.log(`Add to cart where id: ${ id } and ${ qty }`)\r\n      navigate(`/cart/?id=${id}&qty=${qty}`)\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: \"smooth\"\r\n      })\r\n    }, [])\r\n  \r\n\r\n  return (\r\n    <div>\r\n        <Link to='/' className='btn btn-primary my-3'> Nazad</Link>\r\n\r\n        {loading ? \r\n                 <Loader></Loader>\r\n                : error \r\n                ? <Message variant='danger'>{error}</Message>\r\n                :(  \r\n                    <div>\r\n                        <Row>\r\n                                <Col md={6}>\r\n                                    <Image src={product.image} alt={product.name} fluid>\r\n\r\n                                    </Image>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <h2>{product.name}</h2>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item >\r\n                                            <strong style={{ color:'#228B22', fontSize:32 }}>{product.price} din</strong> \r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Kategorija:</strong> {product.category}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Boja:</strong> {product.color}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Polozaj:</strong> {product.flowering_time}\r\n                                        </ListGroup.Item>\r\n\r\n                                        <ListGroup.Item>\r\n                                            <strong>Mesto sadnje:</strong> {product.place_of_planting}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Col>\r\n                                <Col md={3}>\r\n                                    <Card>\r\n                                    <Card.Title style={{ textAlign:'center', color:'black'}}>Kupovina</Card.Title>\r\n                                        <ListGroup variant='flush' >\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Cena:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <strong>{product.price} din</strong>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Status:\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <div style={{ \r\n                                                                        color: `${ product.countInStock > 0 ? 'green' : 'red'}`,\r\n                                                                        fontSize: 20\r\n                                                                    }}>\r\n                                                            { product.countInStock > 0 ? 'Na stanju' : 'Nema na stanju'}\r\n                                                        </div>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <ListGroup.Item>\r\n                                                    <Row>\r\n                                                        <Col>Kolicina:</Col>\r\n                                                        <Col xs='auto' className='my-1'>\r\n                                                            <Form.Control \r\n                                                                 as='select'\r\n                                                                 value={qty} \r\n                                                                 onChange={(e) => setQty(Number(e.target.value)) }>\r\n                                                                     {\r\n                                                                         [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                             <option key={x +1} value={x +1}>\r\n                                                                                 {x+1}\r\n                                                                             </option>\r\n                                                                         ))\r\n                                                                     }\r\n\r\n                                                            </Form.Control>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Button \r\n                                                    className='btn btn-block' \r\n                                                    disabled={product.countInStock == 0} \r\n                                                    type='button'\r\n                                                    onClick= {addToCartHandler}>\r\n                                                        Dodaj u Korpu\r\n                                                </Button>\r\n                                            </ListGroup.Item>\r\n                                        </ListGroup>\r\n                                    </Card>\r\n\r\n                                </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={12} >\r\n                            <h2 style={{color:'black'}}>Detaljni opis:</h2>\r\n                                <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            {product.description}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n                            {/* <Col md={6}>\r\n                                <h4>Detaljni opis:</h4>\r\n                                {product.reviews?.length === 0 && <Message variant='info'>\r\n                                    Nema Komentara\r\n                                    </Message>}\r\n                                <ListGroup variant='flush'>\r\n                                      {product.reviews?.map(review => (\r\n\r\n                                            <ListGroup.Item key={review._id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} color='#f8e825'></Rating>\r\n                                                <p>{review.createdAt.substring(0,10)}</p>\r\n                                                <p>{review.comment}</p>\r\n                                            </ListGroup.Item>\r\n                                            \r\n                                        ))}  \r\n\r\n                                        <ListGroup.Item>\r\n                                            <h4>Napisite komentar:</h4>\r\n                                            {  loadingReview && <Loader></Loader> }\r\n                                            { successReview && <Message variant='success'> Komentar potpisan</Message>}\r\n                                            { errorReview && <Message variant='danger'> {errorReview}</Message>}\r\n                                            { userInfo ? (\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                            <Form.Label>\r\n                                                                Rating\r\n                                                            </Form.Label>\r\n                                                            <Form.Control\r\n                                                                as='select'\r\n                                                                value={rating}\r\n                                                                onChange={(e) => setRating(e.target.value)}>\r\n                                                                    <option value=''>Select...</option>\r\n                                                                    <option value='1'>1 - Siromasno</option>\r\n                                                                    <option value='2'>2 - Nezadovoljavajuce</option>\r\n                                                                    <option value='3'>3 - Dobro</option>\r\n                                                                    <option value='4'>4 - Veoma Dobro</option>\r\n                                                                    <option value='5'>5 - Odlicno</option>\r\n\r\n                                                            </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>Comment</Form.Label>\r\n                                                        <Form.Control\r\n                                                                as='text'\r\n                                                                row='5'\r\n                                                                value={comment}\r\n                                                                onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                        </Form.Control>\r\n\r\n                                                    </Form.Group>\r\n                                                    <Button\r\n                                                        disabled={loadingReview}\r\n                                                        type='submit'\r\n                                                        variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n\r\n                                                </Form>\r\n                                            ): (\r\n                                                <Message variant='info'>\r\n                                                        Molim Vas <Link to={'/login'}>Ulogujte se</Link> da biste ostavili Komentar\r\n                                                </Message>\r\n                                            )}\r\n                                        </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col> */}\r\n                        </Row>\r\n                    </div>\r\n                    )}  \r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductScreen","import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n  ToggleButtonGroup,\r\n  ToggleButton\r\n} from \"react-bootstrap\";\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport Radio from '@mui/material/Radio';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Message from \"../compontents/Message\";\r\nimport { addToCart, removeFromCart, addDostavaAndPlacanjeCart } from \"../store/cart-actions\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction CartScreen() {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [search, setSearch] = useSearchParams();\r\n  const id = search.get(\"id\");\r\n  const qty = search.get(\"qty\");\r\n\r\n  const [dostava, setDostava] = useState(\"licno\");\r\n  const [placanje, setPlacanje] = useState(\"uplata\");\r\n\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  //console.log(\"Ovo je cart:\",cartItems);\r\n\r\n  useEffect(() => {\r\n    if (id  ) {\r\n\r\n\r\n    }\r\n\r\n  }, [id]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  };\r\n\r\n  const chechoutHandler =(e) => {\r\n\r\n    //navigate('/login?redirect=shipping')\r\n    dispatch(addDostavaAndPlacanjeCart(dostava, placanje))\r\n    navigate('/shipping')\r\n  }\r\n\r\n  const backHandler = () => {\r\n\r\n    navigate('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Korpa</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message variant=\"info\">\r\n            Vasa korpa je prazna <Link to=\"/\">Vratite se Nazad</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems?.map((item) => (\r\n              <ListGroup.Item key={item.id}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    ></Image>\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/products/${item.id}`}><strong><h4>{item.name}</h4></strong></Link>\r\n                  </Col>\r\n                  <Col md={2}><strong>{item.price} din</strong></Col>\r\n                  <Col md={1}>\r\n                    <Form.Control\r\n                      as=\"select\"\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(addToCart(item.id, Number(e.target.value)))\r\n                      }\r\n                    >\r\n                      { item.countInStock > 0 && (\r\n\r\n                            [...Array(item?.countInStock)?.keys()]?.map((x) => (\r\n                              <option key={x + 1} value={x + 1} style={{ width: 5}}>\r\n                                {x + 1}\r\n                              </option>\r\n                            ))\r\n                      ) }\r\n                      \r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={1}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.id)}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card border=\"info\">\r\n           <Card.Header as=\"h4\">Vasa Porudzbina</Card.Header>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item >\r\n              <Row>\r\n                <Col md={8}><strong>Proizvodi</strong></Col>\r\n                <Col md={4}> <strong>Ukupno</strong></Col>\r\n              </Row>\r\n\r\n            </ListGroup.Item>\r\n\r\n            {cartItems?.map((item) => (\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={8}>{item.qty}      X      {item.name}</Col>\r\n                    <Col md={4}> {(item.qty * item.price).toFixed(2)}</Col>\r\n                  </Row>\r\n\r\n                 </ListGroup.Item>))}\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={8}><strong>Ukupan broj proizvoda:</strong></Col>\r\n                    <Col md={4}> {cartItems.reduce((acc, item ) => acc + item.qty, 0)}</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={8}> <strong>Ukupna Cena:</strong></Col>\r\n                    <Col md={4}> {cartItems.reduce((acc, item ) => acc + item.qty * item.price, 0).toFixed(2)} din</Col>\r\n                  </Row>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Dostava</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={dostava}\r\n                    onChange={(e) => setDostava(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"licno\" control={<Radio />} label=\"Licno preuzimanje\" />\r\n                    <FormControlLabel value=\"posta\" control={<Radio />} label=\"Slanje brzom postom\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n\r\n                <FormControl>\r\n                  <FormLabel id=\"demo-controlled-radio-buttons-group\"><h4>Placanje</h4></FormLabel>\r\n                  <RadioGroup\r\n                    aria-labelledby=\"demo-controlled-radio-buttons-group\"\r\n                    name=\"controlled-radio-buttons-group\"\r\n                    value={placanje}\r\n                    onChange={(e) => setPlacanje(e.target.value)}\r\n                  >\r\n                    <FormControlLabel value=\"uplata\" control={<Radio />} label=\"Uplata na racun\" />\r\n                    <FormControlLabel value=\"pouzece\" control={<Radio />} label=\"Prilikom preuzimanja\" />\r\n                  </RadioGroup>\r\n                </FormControl>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={ cartItems.length === 0 }\r\n                onClick={() => chechoutHandler()}>\r\n                    Nastavite sa kupovinom\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    <Row>\r\n      <Col md={4}>\r\n          <Button type='button'\r\n                className='btn-block'\r\n                \r\n                onClick={backHandler}>\r\n                Nazad na listu proizvoda          \r\n          </Button>\r\n      </Col>\r\n    </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","\r\nimport React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nfunction FormContainer({children}) {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n            <Col xs={12} md={6}>\r\n                {children}\r\n            </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { login } from '../store/user-actions'\r\n\r\n\r\nfunction LoginScreen() {\r\n\r\n    const [email , setEmail] = useState('')\r\n    const [userName , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n    \r\n\r\n    const user = useSelector(state => state.userLogin)\r\n    const { userInfo, error, loading } = user\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            //navigate(`/register?redirect=${redirect}`)\r\n            navigate(`/`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        dispatch(login(email, password))\r\n        \r\n    }\r\n    return (\r\n      <FormContainer>\r\n        <h1>Prijava</h1>\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='password'\r\n                            placeholder='Unesite Password...'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Prijavite se\r\n                </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Novi korisnik? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register' }>Registracija</Link>\r\n            </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    )\r\n  }\r\n  \r\n  export default LoginScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\n\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [username , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [fullname , setUserName] = useState('')\r\n    const [place , setPlace] = useState('')\r\n    const [address , setAddress] = useState('')\r\n    const [self_phone , setSelfPhone] = useState('')\r\n    const [fix_phone , setFixPhone] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { userInfo, error, loading } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo){\r\n            navigate(`/register?redirect=${redirect}`)\r\n        }\r\n    },[navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n        dispatch(register(username, email, password, fullname, place, address, self_phone, fix_phone))\r\n        }\r\n\r\n    }\r\n\r\n\r\n  return (\r\n    <FormContainer>\r\n        <h1>Registracija</h1>\r\n        {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        User Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite User Name...'\r\n                            value={username}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email...'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fullmame'>\r\n                    <Form.Label>\r\n                        Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fullname' \r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={fullname}\r\n                            onChange={(e) => setUserName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='place'>\r\n                    <Form.Label>\r\n                        Postanski broj\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='place' \r\n                            placeholder='Unesite Vas postanski broj...'\r\n                            value={place}\r\n                            onChange={(e) => setPlace(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='address' \r\n                            placeholder='Unesite Vasu adresu...'\r\n                            value={address}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Broj Mobilnog\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='self_phone' \r\n                            placeholder='Unesite Vas mobilni telefon...'\r\n                            value={self_phone}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Broj fixnog telefona\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            type='fix_phone' \r\n                            placeholder='Unesite Vas fixni telefon...'\r\n                            value={fix_phone}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br/>\r\n                <br/>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Enter Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Registracija\r\n                </Button>\r\n                \r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n            <Col>\r\n            Imate Nalog vec? <Link to={ redirect ? `/login?redirect=${redirect}` : '/login' }>Login</Link>\r\n            </Col>\r\n        </Row>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen","import { userRegisterActions } from './userRegister-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const register = (username, email, password, fullname, place, address, self_phone, fix_phone) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json'\r\n                }\r\n            }\r\n            const { data } = await axios.post('/api/users/register/',\r\n            {\r\n                'name':username,\r\n                'email': email,\r\n                'username': fullname,\r\n                'place': place,\r\n                'address': address,\r\n                'self_phone': self_phone,\r\n                'fix_phone': fix_phone,\r\n                'password': password\r\n            }, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userRegisterActions.userRegisterRequest())\r\n            const data = await fetchData()\r\n            dispatch(userRegisterActions.userRegisterSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess(data))\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userRegisterActions.userRegisterFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { userDetailsActions } from './userDetails-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const getUserDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('ovo je u fetc:',id)\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/${id}/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userDetailsActions.userDetailsSuccess(data))\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const userDetailsReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            dispatch(userDetailsActions.userDetailsReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDetailsActions.userDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { register } from '../store/userRegister-actions' \r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUserProfile } from '../store/userUpdateProfile-actions'\r\nimport { userUpdateProfileActions } from '../store/userUpdateProfile-slice'\r\nimport { listMyOrders } from '../store/orderOrdersProfile-actions'\r\n\r\nfunction ProfileScreen() {\r\n\r\n    const [name , setName] = useState('')\r\n    const [email , setEmail] = useState('')\r\n    const [password , setPassword ] = useState('')\r\n    const [confirmPassword , setConfirmPassword ] = useState('')\r\n    const [message , setMessage ] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { user, error, loading } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderOrdersProfile = useSelector(state => state.orderOrdersProfile)\r\n    const { orders, loading: loadingOrders, error: errorOrders } = orderOrdersProfile\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            navigate(`/login`)\r\n        }else{\r\n            if(Object.keys(user).length === 0 || success ){\r\n                dispatch(userUpdateProfileActions.userUpdateProfileReset())\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[navigate, userInfo, dispatch, user, success])\r\n\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        if(password != confirmPassword){\r\n\r\n            setMessage('Password do not match.')\r\n        }else{\r\n                dispatch(updateUserProfile({\r\n                    'id': user._id,\r\n                    'name':name,\r\n                    'email':email,\r\n\r\n                    'password':password\r\n                }))\r\n                setMessage('')\r\n        }\r\n\r\n    }\r\n\r\n  return (\r\n    <Row>\r\n        \r\n        <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>\r\n                {message}\r\n            </Message>}\r\n        {error && <Message variant='danger'>\r\n                {error}\r\n            </Message>}\r\n        { loading && <Loader></Loader>}\r\n        <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='name' \r\n                            placeholder='Unesite Ime..'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email Adress\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            required\r\n                            type='email' \r\n                            placeholder='Unesite Email..'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Unesite Password..'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control \r\n                            \r\n                            type='password'\r\n                            placeholder='Potvrdite Password..'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='sumbit' varaiant='primary'>\r\n                    Update\r\n                </Button>\r\n                \r\n        </Form>\r\n        </Col>\r\n        <Col md={9}>\r\n            <h2>Moje Porudzbine</h2>\r\n\r\n            {loadingOrders ? (\r\n                <Loader>\r\n\r\n                </Loader>\r\n            ) : errorOrders ? (\r\n                <Message variant = 'danger'>\r\n                        {errorOrders}\r\n                </Message>\r\n            ) : (\r\n\r\n                <Table striped responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice} din</td>\r\n                                <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                    <i className='fas fa-times' style={{ color: 'red'}} ></i>\r\n                                )}</td>\r\n                                <td>{order._id}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button className='btn-sm'>\r\n                                            Detalji\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n\r\n                </Table>\r\n            )}\r\n        </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import { orderOrdersProfileActions } from './orderOrdersProfile-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const listMyOrders = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            \r\n            const { data } = await axios.get(`/api/orders/myorders`, config)\r\n            \r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileRequest())\r\n            const data = await fetchData()\r\n           \r\n            dispatch(orderOrdersProfileActions.orderOrdersProfileSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderOrdersProfileActions.orderOrdersProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import { userUpdateProfileActions } from './userUpdateProfile-slice' \r\nimport { userActions } from './user_slice'\r\nimport axios from 'axios'\r\n\r\nexport const updateUserProfile = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/profile/update/`, user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateProfileActions.userUpdateProfileRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userUpdateProfileActions.userUpdateProfileSuccess(data))\r\n\r\n            dispatch(userActions.userLoginSuccess())\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateProfileActions.userUpdateProfileFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import { shippingActions } from './shipping-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const saveShippingAddress = (data) => {\r\n    return  (dispatch) => {\r\n\r\n            dispatch(shippingActions.saveShippingAdress(data))\r\n           \r\n            localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nfunction CheckoutSteps({step1, step2, step3}) {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n        <Nav.Item>\r\n            {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>\r\n                            Login\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Login\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>\r\n                            Adresa\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Adresa\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n            {step3 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>\r\n                        Narudzba\r\n                        </Nav.Link>\r\n                    </LinkContainer>\r\n            ) : (\r\n                <Nav.Link disabled>\r\n                        Narudzba\r\n                </Nav.Link>\r\n            )}\r\n            \r\n        </Nav.Item>\r\n\r\n\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default CheckoutSteps","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Card, Nav } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { TabContext, TabList, TabPanel  } from '@mui/lab';\r\nimport { Tab , Box } from '@mui/material';\r\n//import { register } from '../store/userRegister-actions'\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const [value , setValue] = useState('1')\r\n    const [name , setName] = useState(shippingAddress.name)\r\n    const [email , setEmail] = useState(shippingAddress.email)\r\n    const [password , setPassword] = useState(shippingAddress.password)\r\n    const [post , setPost] = useState(shippingAddress.post)\r\n    const [address , setAddress] = useState(shippingAddress.address)\r\n    const [fix_phone , setFixPhone] = useState(shippingAddress.fix_phone)\r\n    const [self_phone , setSelfPhone] = useState(shippingAddress.self_phone)\r\n    const [demands , setDemands ] = useState(shippingAddress.demands)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n   \r\n    const [search, setSearch] = useSearchParams();\r\n    const redirect = search.get(\"redirect\");\r\n\r\n    const handleTab = (e, value) => setValue(value);\r\n    const submitHandler1 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    const submitHandler2 = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            name, email, password, post,\r\n            address, fix_phone, self_phone, demands\r\n        }))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <TabContext value={value}>\r\n      <Box sx={{ borderBottom:1, borderColor: 'divider' }}>\r\n        <TabList onChange={handleTab} aria-label=\"lab API tabs example\">\r\n          <Tab label=\"Novi Kupac\" value=\"1\" />\r\n          <Tab label=\"Postojeci Kupac\" value=\"2\" />\r\n\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value=\"1\">\r\n          <FormContainer>\r\n\r\n        <h1>Podaci Kupca</h1>\r\n        <Form onSubmit={submitHandler1}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='password'\r\n                            placeholder='Unesite lozinku...'\r\n                            value={password ? password : ''}\r\n                            onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postanski broj'>\r\n                    <Form.Label>\r\n                        Postanski broj i mesto\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite postanski broj i mesto...'\r\n                            value={post ? post : ''}\r\n                            onChange={(e) => setPost(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                 <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Adresa\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Adresu..'\r\n                            value={address ? address : ''}\r\n                            onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='fix_phone'>\r\n                    <Form.Label>\r\n                        Fixni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite fixni broj telefona..'\r\n                            value={fix_phone ? fix_phone : ''}\r\n                            onChange={(e) => setFixPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='self_phone'>\r\n                    <Form.Label>\r\n                        Mobilni telefon\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite mobilni telefon..'\r\n                            value={self_phone ? self_phone : ''}\r\n                            onChange={(e) => setSelfPhone(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='demands'>\r\n                    <Form.Label>\r\n                        Zahtevi oko isporuke\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Enter Country..'\r\n                            value={demands ? demands : ''}\r\n                            onChange={(e) => setDemands(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                </Form.Group>\r\n\r\n        </Form>\r\n    </FormContainer>\r\n      </TabPanel>\r\n      <TabPanel value=\"2\">\r\n          <FormContainer>\r\n\r\n        <h1>Podaci Kupca</h1>\r\n        <Form onSubmit={submitHandler2}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Vase Ime i Prezime\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Vase ime i prezime...'\r\n                            value={name ? name : ''}\r\n                            onChange={(e) => setName(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            required\r\n                            type='text'\r\n                            placeholder='Unesite Email...'\r\n                            value={email ? email : ''}\r\n                            onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Nastavite\r\n                    </Button>\r\n                    </Form.Group>\r\n\r\n                    </Form>\r\n                </FormContainer>\r\n\r\n            </TabPanel>\r\n\r\n        </TabContext>\r\n\r\n        </div>\r\n\r\n  )}\r\n\r\nexport default ShippingScreen","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { savePaymentMethod } from \"../store/payment-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const shipping = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n            navigate('/shipping')\r\n    }\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n  return (\r\n\r\n    <FormContainer>\r\n        <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group>\r\n\r\n                <Form.Label as='legend'>\r\n                    Nacin Placanja:\r\n                </Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                    <Form.Check \r\n                            type='radio'\r\n                            label='Pouzecem'\r\n                            id='address'\r\n                            name='addressMethod'\r\n                            \r\n                            onChange={(e) =>setPaymentMethod(e.target.value) }>\r\n\r\n                    </Form.Check>\r\n                </Col>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n                Nastavite\r\n            </Button>\r\n        </Form>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default PaymentScreen","import { paymentActions } from './payment-slice'\r\nimport axios from 'axios'\r\n\r\nexport const savePaymentMethod = (data) => {\r\n    return async (dispatch) => {\r\n\r\n\r\n            dispatch(paymentActions.savePaymentMethod(data))\r\n           \r\n            localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n           \r\n\r\n    }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport  Message  from '../compontents/Message'\r\nimport { saveShippingAddress } from \"../store/shipping-actions\"; \r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../compontents/CheckoutSteps\";\r\nimport { createOrder, resetOrder } from '../store/order-actions'\r\n\r\n\r\nfunction PlaceOrderScreen(props) {\r\n\r\n    const dispatch  = useDispatch()\r\n    const navigate = useNavigate()\r\n    const orderCreate = useSelector(state => state.order)\r\n    const { order, error, success} = orderCreate\r\n\r\n    const  shipping  = useSelector(state => state.shipping)\r\n    const { shippingAddress } = shipping\r\n\r\n    const  orderDetail  = useSelector(state => state.orderDetail)\r\n    const { order: { _id }   } = orderDetail\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {placanje, dostava } = cart\r\n\r\n    const itemsPrice = cart.cartItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    const shippingPrice =  (itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    const taxPrice = Number((0.0082) * itemsPrice).toFixed(2)\r\n    const totalPrice = (Number(itemsPrice) + Number(shippingPrice) + Number(taxPrice)).toFixed(2)\r\n\r\n   \r\n    useEffect(() =>{\r\n\r\n       \r\n        if (success){\r\n\r\n            //navigate(`/order/${order._id}`)\r\n            props.onShowOrder()\r\n            dispatch(resetOrder())\r\n        }\r\n\r\n\r\n    }, [success, navigate])\r\n\r\n\r\n    const placeOrder = (event) => {\r\n\r\n        event.preventDefault()\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            name: shippingAddress.name,\r\n            email:shippingAddress.email,\r\n            password: shippingAddress.password,\r\n            address: shippingAddress.address,\r\n            itemsPrice: itemsPrice,\r\n            place: shippingAddress.post,\r\n            fix_phone: shippingAddress.fix_phone,\r\n            self_phone: shippingAddress.self_phone,\r\n            demands: shippingAddress.demands,\r\n            dostava: dostava,\r\n            placanje:placanje,\r\n            ukupno: totalPrice\r\n\r\n        }))\r\n        console.log('jel doslo dovde?')\r\n\r\n    }\r\n  return (\r\n    <div>\r\n        <CheckoutSteps step1 step2 step3 ></CheckoutSteps>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n\r\n                        <h2>Adresa</h2>\r\n                        <div>\r\n\r\n                            <div>\r\n                                <strong>Name:</strong> { shippingAddress.name}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Adresa:</strong> { shippingAddress.address}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Email:</strong> <label type=\"email\">{ shippingAddress.email}</label>\r\n                                <p>Bice poslat mail na ovu adresu sa sadrzajem Vase porudzbine.</p>\r\n                            </div>\r\n                            <div>\r\n                                <strong>Post:</strong> { shippingAddress.post}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Fixni telefon:</strong> { shippingAddress.fix_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Mobilni telefon:</strong> { shippingAddress.self_phone}\r\n                            </div>\r\n                            <div>\r\n                                <strong>Posebni zahtevi:</strong> { shippingAddress.demands}\r\n                            </div>\r\n                        </div>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin Placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { placanje}\r\n                            \r\n                        </p>\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Narucene biljke</h2>\r\n                        { cart.cartItems.length === 0 \r\n                            ? <Message variant= 'info'> Vasa Korpa je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        cart.cartItems.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X {item.price} din = {(item.qty *item.price).toFixed(2)} din\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n                        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Stavke(zbirno):</strong></Col>\r\n                                   <Col>{itemsPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Shiping:</strong></Col>\r\n                                   <Col>{shippingPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Pdv:</strong></Col>\r\n                                   <Col>{taxPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col><strong>Ukupno:</strong></Col>\r\n                                   <Col>{totalPrice} din</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error &&\r\n                                <ListGroup.Item>\r\n                                    <Message variant='danger'>\r\n                                        {error}\r\n                                    </Message>}\r\n                            </ListGroup.Item>\r\n                            }\r\n                            <ListGroup.Item>\r\n                                <Button\r\n\r\n                                         type='button'\r\n                                         className='btn-block'\r\n                                         disabled={cart.cartItems.length === 0 }\r\n                                         onClick={placeOrder}>Posalji porudzbu</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import { orderActions } from './order-slice'\r\nimport axios from 'axios'\r\nimport { cartActions } from './cart-slice'\r\n\r\nexport const createOrder = (order) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/orders/add/`, order, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderActions.orderCreateRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(orderActions.orderCreateSuccess(data))\r\n            dispatch(cartActions.cleanCartItems())\r\n\r\n            localStorage.remove('cartItems')\r\n\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderActions.orderCreateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const resetOrder = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n        dispatch(orderActions.orderCreateReset())\r\n       \r\n           \r\n    }\r\n}","import { orderDetailsActions } from './orderDetails-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getOrderDetails = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.get(`/api/orders/${id}`, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderDetailsActions.orderDetailsRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderDetailsActions.orderDetailsSuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderDetailsActions.orderDetailsFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport  Message  from '../compontents/Message' \r\nimport { useParams } from \"react-router-dom\";\r\nimport { getOrderDetails } from '../store/orderDetails-actions'\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\nimport { payOrder } from '../store/orderPay-actions'\r\n\r\nfunction OrderScreen() {\r\n\r\n    const orderId  = useParams('id')\r\n    const dispatch  = useDispatch()\r\n    const orderDetails = useSelector(state => state.orderDetail)\r\n    const {  order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n   \r\n    const [itemsPrice, setItemPrice] = useState(0) \r\n\r\n    if(!loading && error){\r\n        setItemPrice(order.orderItems.reduce((acc,item) => acc + item.price * item.qty, 0).toFixed(2))\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if(order?.orderItems?.length !==0 || successPay || order._id !== Number(orderId.id)){\r\n            dispatch(getOrderDetails(Number(orderId.id)))\r\n        }  \r\n\r\n    }, [ orderId._id, dispatch]);\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n\r\n        dispatch(payOrder(orderId._id, paymentResult))\r\n\r\n    }\r\n\r\n    // const addPayPalScript = () => {\r\n\r\n    //     const script = ducument.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = \r\n    // }\r\n    //Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\r\n  return (\r\n    loading ? (<Loader>\r\n\r\n        </Loader>) : error ? (\r\n            <Message variant = 'danger' >\r\n                {error}\r\n            </Message>\r\n        ):\r\n    (<div>\r\n       \r\n       <h1>Narudzba: {order._id}</h1>\r\n        <Row>\r\n            <Col md={8}>\r\n\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item >\r\n\r\n                        <h2>Poruzbina je poslata na Vas email.</h2>\r\n                        <p>\r\n                            <strong>Name: </strong> { order.user?.user_name}\r\n                        </p>\r\n                        <p>\r\n                            <strong>Email: </strong> <a href={`mailto:${order.user?.email}`}>{order.user?.email}</a>\r\n                        </p>\r\n                        <br/>\r\n\r\n                        { order.isDelivered ? (\r\n                            <Message variant=\"success\"  >\r\n                                   Isporuceno dana: {order.deliveredAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije isporuceno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Nacin placanja</h2>\r\n                        <p>\r\n                            <strong>Method:</strong> { order.paymentMethod === 'uplata' ? 'Placanje pouzecem' : 'Placanje karticom'}\r\n                            \r\n                        </p>\r\n                        { order.isPaid ? (\r\n                            <Message variant='success' >\r\n                                    <div>Placeno dana:</div>   {order.paidAt}\r\n                            </Message>\r\n                        ): (\r\n                            <Message variant='warning' >\r\n                                    Nije placeno\r\n                            </Message>\r\n                        )}\r\n                    </ListGroup.Item>\r\n\r\n                     <ListGroup.Item>\r\n\r\n                        <h2>Stavke Narudzbe</h2>\r\n                        { order.orderItems?.lenght === 0 \r\n                            ? <Message variant= 'info'> Narudzba je prazna</Message> \r\n                            : (\r\n                                <ListGroup variant='flush'>\r\n                                    {\r\n                                        order.orderItems?.map( (item,index) => (\r\n                                                <ListGroup.Item key={index}>\r\n\r\n                                                    <Row>\r\n                                                        <Col md={1}>\r\n                                                            <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                                        </Col>\r\n                                                        <Col>\r\n\r\n                                                            <Link to={`/products/${item.id}`}>{item.name}</Link>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            {item.qty} X ${item.price} = ${(item.qty *item.price).toFixed(2)}\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </ListGroup.Item>\r\n\r\n                                            ))\r\n                                    }\r\n\r\n                                </ListGroup>\r\n                            )}\r\n        \r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Narudzba konacno:</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                               <Row>\r\n                                   <Col>Ukupna cena:</Col>\r\n                                   <Col>RSD {order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {!order.isPaid && loadingPay ? (\r\n                                        <Loader>\r\n                                       \r\n                                       </Loader>\r\n                                    ) : (\r\n                                        <Row>\r\n                                            <PayPalScriptProvider options={{ \"client-id\": \"Ab3TFcejtQPynvPI8n2RoDB5h023_M3oOq_5Rm0Lznlo57COnlDvHsFdQ5G-2ld61SpRFmv5IqAYvyRW\" }}>\r\n                                                <PayPalButtons \r\n                                                    style={{ layout: \"horizontal\" }}\r\n                                                    amount={order.totalPrice}\r\n                                                    onSuccess= {successPaymentHandler}  />\r\n                                            </PayPalScriptProvider>\r\n                                        </Row>\r\n                                    \r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n            </Col>\r\n        </Row>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport default OrderScreen","import { orderPayActions } from './orderPay-slice'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        console.log('starting fething data.........')\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            console.log('Before axios.........:',`/api/orders/${id}`)\r\n            const { data } = await axios.put(`/api/orders/${id}/pay`, paymentResult, config)\r\n            console.log('Fetched data:',data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderPayActions.orderPayRequest())\r\n            const data = await fetchData()\r\n            console.log('This is a data:',data)\r\n            dispatch(orderPayActions.orderPaySuccess(data))\r\n           \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                orderPayActions.orderPayFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import { userListActions } from './userList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listUsers = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.get(`/api/users/`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userListActions.userListRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userListActions.userListSuccess(data))\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userListActions.userListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction UserListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users} = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const uDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete, loading: loadingDelete, error: errorDelete } = uDelete\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listUsers())\r\n            dispatch(userDetailsReset())\r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ])\r\n\r\n    const deleteHandler = (id) => {\r\n\r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteUser(id))\r\n            dispatch(deleteUserReset())\r\n            dispatch(listUsers())\r\n        }    \r\n    }\r\n\r\n  return (\r\n    <div>\r\n        <h1>Users</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users?.map(user => (\r\n\r\n                                    <tr key={user._id}>\r\n                                        <td>{user._id}</td>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.email}</td>\r\n                                        <td>{user.isAdmin ? (\r\n                                            <i className='fas fa-check' style={{ color: 'green'}}></i>\r\n                                        ) : <i className='fas fa-check' style={{ color: 'red'}}></i>}</td>\r\n                                        <td><LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        <td>\r\n                                            <Button  className='btn' onClick={(e) => deleteHandler(user._id)}>\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import { userDeleteActions } from './userDelete-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteUser = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/users/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userDeleteActions.userDeleteRequest())\r\n            const data = await fetchData()\r\n            \r\n            dispatch(userDeleteActions.userDeleteSuccess())\r\n \r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userDeleteActions.userDeleteFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(userDeleteActions.deleteUserReset())\r\n    }\r\n}\r\n\r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport Paginate from '../compontents/Paginate'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listUsers } from '../store/userList-actions' \r\nimport { listProducts } from '../store/product-actions'\r\nimport { deleteProduct, deleteProductReset } from '../store/deleteProduct-actions'\r\nimport { createProduct, productReset } from '../store/createProduct-actions'\r\n\r\nfunction ProductListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products,page, pages} = productList\r\n\r\n    const deleteProd = useSelector(state => state.deleteProduct)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = deleteProd\r\n\r\n    const crProd = useSelector(state => state.createProduct)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct} = crProd\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n \r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n         if(!userInfo.isAdmin){\r\n             navigate('/login')\r\n            \r\n         }\r\n\r\n         if(successCreate){\r\n\r\n            dispatch(productReset())\r\n            navigate(`/admin/product/${createdProduct._id}/edit`)\r\n              \r\n          }else{\r\n            dispatch(listProducts())\r\n          }\r\n       \r\n\r\n     }, [dispatch, navigate, userInfo, successDelete, successCreate , createdProduct])\r\n\r\n    const deleteHandler = (id) => {\r\n        \r\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\r\n\r\n            dispatch(deleteProduct(id))\r\n            dispatch(deleteProductReset())\r\n            console.log('odstampaj ovo!!!')\r\n            dispatch(listProducts())\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n\r\n        dispatch(createProduct())\r\n    }\r\n  return (\r\n    <div>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Biljke</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n                <Button className='my-3' onClick={(e) => createProductHandler()}>\r\n                    <i className='fas fa-plus'></i> Kreiraj Proizvod\r\n                </Button>\r\n            </Col>\r\n\r\n        </Row>\r\n\r\n        { loadingDelete && <Loader></Loader>}\r\n        { errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        \r\n        { loadingCreate && <Loader></Loader>}\r\n        { errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>Cena</th>\r\n                                    <th>Kategorija</th>\r\n                                    <th>Boja</th>\r\n                                    <th>Stanje</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {products.map(product => (\r\n\r\n                                    <tr key={product._id}>\r\n                                        <td>{product._id}</td>\r\n                                        <td>{product.name}</td>\r\n                                        <td>{product.price} din</td>\r\n                                        <td>{product.category}</td>\r\n                                        <td>{product.color}</td>\r\n                                        <td>{product.countInStock}</td>\r\n                                        <td><LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n\r\n                                                <Button variant = 'light' className='btn-sm'>\r\n                                                     <i className='fas fa-edit'></i>\r\n                                                </Button>\r\n                                            </LinkContainer></td>\r\n                                        <td>\r\n                                                <Button  className='btn-sm' onClick={(e) => deleteHandler(product._id)}>\r\n                                                     <i className='fas fa-trash'></i>\r\n                                                </Button></td>\r\n                                        </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import { createProductActions} from './createProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const createProduct = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.post(`/api/products/create/`,{}, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(createProductActions.createProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(createProductActions.createProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                createProductActions.createProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const productReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(createProductActions.createProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { deleteProductActions} from './deleteProduct-slice'\r\nimport axios from 'axios'\r\n\r\nexport const deleteProduct = (id) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        \r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.delete(`/api/products/delete/${id}`, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(deleteProductActions.deleteProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(deleteProductActions.deleteProductSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                deleteProductActions.deleteProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(deleteProductActions.deleteProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React from 'react'\r\n\r\nfunction InfoScreen() {\r\n  return (\r\n      <div>\r\n            <h3>Info </h3>\r\n            <p>PG PolicPlant je osnovano 2020. god u Budisavi. Bavi se delatnostima uzgoja i prodaje cveca,niskog rastinja, zimzelenog i listopadnog drveca.</p>\r\n     </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default InfoScreen","import React from \"react\";\r\n\r\nfunction ONamaScreen() {\r\n  return (\r\n    <div>\r\n      <h3>O nama</h3>\r\n      <div>Neki opis...sta ja znam sta....nakenjati nesto.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ONamaScreen;\r\n","import React from \"react\";\r\n\r\nfunction KontakScreen() {\r\n  return (\r\n    <div>\r\n      <h3>Kontakt</h3>\r\n      <div>Kontakt podaci,mail, mobilni ,adresa i ostalo.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default KontakScreen;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Loader from \"../compontents/Loader\";\r\nimport Message from \"../compontents/Message\";\r\nimport FormContainer from \"../compontents/FormContainer\";\r\nimport { userActions } from \"../store/user_slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { getUserDetails } from \"../store/userDetails-actions\";\r\nimport { updateUser, updateUserReset } from \"../store/userUpdate-actions\";\r\n\r\nfunction UserEditScreen() {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const { id } = useParams()\r\n  const userId = id\r\n    console.log('ovako:', userId)\r\n    \r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, error, loading } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { error: errorUpdate, loading: loadingUpdate , success: successUpdate} = userUpdate;\r\n\r\n  console.log('ovo je user id:', user._id)\r\n  console.log('ovo je user name:', user.name)\r\n  useEffect(() => {\r\n\r\n\r\n        if(successUpdate){\r\n            dispatch(updateUserReset())\r\n            navigate('/admin/userlist')\r\n            \r\n        }else{\r\n\r\n            if(!user.name || user._id !== Number(userId)){\r\n                console.log('********************')\r\n                dispatch(getUserDetails(id))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n\r\n        }\r\n    \r\n        \r\n\r\n  }, [dispatch, user, userId, successUpdate, navigate]);\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(updateUser({\r\n        _id: user._id,\r\n        name: name,\r\n        email: email,\r\n        isAdmin: isAdmin\r\n    }))\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n        <Link to='/admin/userlist'>\r\n        Go Back\r\n        </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        { loadingUpdate && <Loader></Loader>}\r\n        { errorUpdate && <Message variant= 'danger'>{errorUpdate}</Message>}\r\n        { loading ?  <Loader></Loader> \r\n                  : error\r\n                  ?  <Message variant= 'danger'>{error}</Message>\r\n                  : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId=\"name\">\r\n                      <Form.Label>Ime</Form.Label>\r\n                      <Form.Control\r\n                        type=\"name\"\r\n                        placeholder=\"Unesite Ime...\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"email\">\r\n                      <Form.Label>Email Adresa</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        placeholder=\"Unesite Email...\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n          \r\n                    <Form.Group controlId=\"isAdmin\">\r\n                      <Form.Check\r\n                        type=\"checkbox\"\r\n                        label=\"IsAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                      ></Form.Check>\r\n                    </Form.Group>\r\n          \r\n                    \r\n          \r\n                    <Button type=\"sumbit\" varaiant=\"primary\">\r\n                      Update\r\n                    </Button>\r\n                  </Form>) }\r\n\r\n        \r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n","import { userUpdateActions } from './userUpdate-slice' \r\nimport { userListActions } from './userList-slice'\r\nimport { listUsers } from '../store/userList-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateUser = (user) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/users/update/${user._id}/`,\r\n            user, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateRequest())\r\n            const data = await fetchData()\r\n            console.log('---------------------------------')\r\n            dispatch(userUpdateActions.userUpdateSuccess())\r\n            dispatch(listUsers())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserReset = () => {\r\n    return async (dispatch) => {\r\n\r\n       \r\n\r\n        try {\r\n            dispatch(userUpdateActions.userUpdateReset())\r\n\r\n        } catch (error) {\r\n            \r\n            dispatch(\r\n                userUpdateActions.userUpdateFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {  Button } from 'react-bootstrap'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport FormContainer from '../compontents/FormContainer'\r\nimport { listProducts, productDetails } from '../store/product-actions'\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { updateProduct, updateProductReset } from '../store/updateProduct-actions'\r\n\r\n\r\nfunction ProductEditScreen( ) {\r\n\r\n    const { id } = useParams();\r\n    const productId = id;\r\n\r\n        console.log('ovo je product id:', productId)\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [color, setColor] = useState('')\r\n    const [place, setPlace] = useState('')\r\n    const [flow, setFlow] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const productDetail = useSelector(state => state.product)\r\n    const { loading, product, error } = productDetail\r\n\r\n    const productUpd = useSelector(state => state.updateProduct)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpd\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if(successUpdate){\r\n            dispatch(updateProductReset())\r\n            navigate(`/admin/productlist`)\r\n        }else{\r\n\r\n            if(!product.name || product._id !== Number(productId)){\r\n                console.log('********************')\r\n                dispatch(productDetails(productId))\r\n            }else{\r\n                console.log('++++++++++++++++++++++')\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setColor(product.color)\r\n                setPlace(product.place)\r\n                setFlow(product.flow)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n\r\n           \r\n\r\n    }, [dispatch, product , productId,navigate,successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name,\r\n            price,\r\n            image,\r\n            color,\r\n            place,\r\n            flow,\r\n            category,\r\n            countInStock,\r\n            description\r\n\r\n        }))\r\n\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n         const file = e.target.files[0]\r\n         console.log('sta je ovo:', file)\r\n         const formData = new FormData()\r\n\r\n         formData.append('image', file)\r\n         formData.append('product_id', productId)\r\n\r\n         setUploading(true)\r\n\r\n         try {\r\n             const config = {\r\n                 headers: {\r\n                     'Content-Type': 'multipart/form-data'\r\n                 }\r\n             }\r\n\r\n             const { data } = await axios.post('/api/products/upload/', formData, config)\r\n\r\n\r\n             setImage(data)\r\n             setUploading(false)\r\n\r\n         } catch (error) {\r\n            setUploading(false)\r\n         }\r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/productlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>} \r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label><strong>Name</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='name'\r\n                                    placeholder='Enter name'\r\n                                    defaultValue={name}\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='price'>\r\n                                <Form.Label><strong>Cena</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter price'\r\n                                    defaultValue={price}\r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='image'>\r\n                                <Form.Label><strong>Image</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter image'\r\n                                    defaultValue={image}\r\n                                   \r\n                                >\r\n                                </Form.Control>\r\n\r\n                                <Form.Control\r\n                                    controlid=\"image-file\"\r\n                                    type='file'\r\n                                    label=\"Izaberite sliku:\"\r\n                                    \r\n                                    onChange={async (e) =>  uploadFileHandler(e)}\r\n                                > \r\n\r\n                                </Form.Control>  \r\n                                {uploading && <Loader />}\r\n\r\n                            </Form.Group>\r\n\r\n\r\n                            <Form.Group controlId='color'>\r\n                                <Form.Label><strong>Boja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setColor(e.target.value)}>\r\n                                    <option>Odaberite boju cveca...</option>\r\n                                    {product.colorChoises?.map(col => (\r\n                                        <option value={col}>{col}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='countinstock'>\r\n                                <Form.Label><strong>Stanje</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='number'\r\n                                    placeholder='Enter stock'\r\n                                    defaultValue={countInStock}\r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='category'>\r\n                                <Form.Label><strong>Kategorija</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setCategory(e.target.value)}>\r\n                                    <option>Odaberi kategoriju cveca...</option>\r\n                                    {product.categoryChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='flow'>\r\n                                <Form.Label><strong>Vreme cvetanja</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setFlow(e.target.value)}>\r\n                                    <option>Odaberi vreme cvetanja...</option>\r\n                                    {product.floweringChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='place'>\r\n                                <Form.Label><strong>Mesto sadnje</strong></Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                             onChange={(e) => setPlace(e.target.value)}>\r\n                                    <option>Odaberi mesto sadnje...</option>\r\n                                    {product.placeChoises?.map(cat => (\r\n                                        <option value={cat}>{cat}</option>\r\n                                    ))}\r\n \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label><strong>Description</strong></Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    defaultValue={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import { updateProductActions} from './updateProduct-slice'\r\nimport { productDetails } from './product-actions'\r\nimport axios from 'axios'\r\n\r\nexport const updateProduct = (product) => {\r\n    return async (dispatch, getState) => {\r\n\r\n\r\n        const {\r\n            userLogin:{ userInfo }\r\n        } = getState()\r\n\r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`\r\n                },\r\n                \r\n            }\r\n            const { data } = await axios.put(`/api/products/update/${product._id}/`,\r\n            product, config)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(updateProductActions.updateProductRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(updateProductActions.updateProductSuccess(cartData))\r\n            dispatch(productDetails(product._id))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                updateProductActions.updateProductFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateProductReset = () => {\r\n    return async (dispatch) => {\r\n\r\n        dispatch(updateProductActions.updateProductReset())\r\n    }\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import React, { useState, useEffect} from \"react\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../compontents/Loader'\r\nimport Message from '../compontents/Message'\r\nimport  FormContainer  from '../compontents/FormContainer'\r\nimport { orderListActions } from \"../store/orderList-slice\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nimport { listOrders } from '../store/orderList-actions' \r\nimport { deleteUser, deleteUserReset } from '../store/userDelete-actions'\r\nimport {  userDetailsReset } from '../store/userDetails-actions'\r\n\r\nfunction OrderListScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const listOrds = useSelector(state => state.orderList)\r\n    const { loading, error, orders} = listOrds\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo} = userLogin\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n\r\n        if(userInfo && userInfo.isAdmin){\r\n            dispatch(listOrders())\r\n            \r\n        }else{\r\n            navigate('/login')\r\n        }\r\n       \r\n\r\n    }, [dispatch, navigate ,userInfo])\r\n\r\n    \r\n\r\n  return (\r\n    <div>\r\n        <h1>Orders</h1>\r\n        {loading \r\n                ? (\r\n                    <Loader>\r\n\r\n                    </Loader>\r\n                ) \r\n                : error ? (\r\n                            <Message variant='danger'>\r\n                                    {error}\r\n                            </Message>)\r\n                        : (\r\n\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>Total</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders?.map(order => (\r\n\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.user && order.user.name}</td>\r\n                                        <td>{order.createdAt?.substring(0,10)}</td>\r\n                                        <td>RSD{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.isPaid\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliverdAt?.substring(0,10)\r\n                                        ) : (\r\n                                            \r\n                                            <i className='fas fa-check' style={{ color: 'red'}}></i>)\r\n                                        \r\n                                            }\r\n                                        </td>\r\n\r\n                                        <td><LinkContainer to={`/order/${order._id}/`}>\r\n\r\n                                                <Button variant = 'light' className='btn'>\r\n                                                     Details\r\n                                                </Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                        \r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                    </Table>\r\n\r\n                )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import { orderListActions} from './orderList-slice'\r\nimport axios from 'axios'\r\n\r\nexport const listOrders = () => {\r\n    return async (dispatch, getState ) => {\r\n\r\n        const {userLogin: {userInfo}} = getState()\r\n       \r\n        const fetchData = async () => {\r\n\r\n            const config = {\r\n                headers:{\r\n                    'Content-type':'application/jspon',\r\n                    Authorization:`Bearer ${userInfo.token}`\r\n                }\r\n            }\r\n           \r\n           \r\n            const { data } = await axios.get(`/api/orders/`, config)\r\n            console.log(data)\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            dispatch(orderListActions.orderListRequest())\r\n            const cartData = await fetchData()\r\n            dispatch(orderListActions.orderListSuccess(cartData))\r\n\r\n        } catch (error) {\r\n            dispatch(\r\n                orderListActions.orderListFail(\r\n                  error.response && error.response.data.detail\r\n                  ? error.response.data.detail\r\n                  : error.message\r\n                )\r\n              );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const addOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\nexport const removeOrder = () => {\r\n    return async (dispatch, getState ) => {}\r\n\r\n}\r\n\r\n\r\n\r\n       \r\n\r\n     \r\n","import { Fragment } from 'react'\r\nimport classes from './CartModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n        \r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `RSD ${props.price}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.qty}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import classes from './Cart.module.css'\r\nimport CartModal from '../CartModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from './CartItem'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n    const { cartItems } = cart;\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) => \r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n    \r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    const cartitems = \r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        cartItems?.map(order => \r\n            (<CartItem key={order.id} \r\n                       name={order.name}\r\n                       qty={order.qty} \r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)} \r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n \r\n        ))}\r\n    \r\n    </ul>\r\n    \r\n\r\n    return <CartModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems && <button className={classes.button}> Narudzba</button>}\r\n        </div>\r\n    </CartModal>\r\n}\r\n\r\nexport default Cart","import { Fragment } from 'react'\r\nimport classes from './OrderModal.module.css'\r\nimport ReactDom from 'react-dom'\r\n\r\nconst Backdrop = props  => {\r\n\r\n    return <div className={classes.backdrop} onClick={props.onClose}></div>\r\n}\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n}\r\n\r\nconst portalelement= document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n\r\n    return <Fragment>\r\n        {ReactDom.createPortal(<Backdrop onClose={props.onClose}></Backdrop>,portalelement )}\r\n        {ReactDom.createPortal(<ModalOverlay>{props.children}</ModalOverlay>, portalelement)}\r\n\r\n    </Fragment>\r\n\r\n}\r\n\r\nexport default Modal","import classes from './OrderModal.module.css'\r\nimport OrderModal from './OrderModal'\r\nimport { useSelector } from 'react-redux'\r\nimport CartItem from '../Cart/CartItem'\r\n\r\nconst Order = (props) => {\r\n\r\n    const orderDetail = useSelector((state) => state.orderDetail);\r\n    const { cartItems } = orderDetail;\r\n\r\n    const ord = useSelector((state) => state.order);\r\n    const { order } = ord;\r\n\r\n    const totalAmount = cartItems?.reduce((total, item) =>\r\n        {\r\n            return total + item.qty * item.price\r\n        }, 0)\r\n\r\n    const hasItems = cartItems?.length >0\r\n\r\n    const cartItemRemoveHanlder= id => {\r\n\r\n        //cartCtx.removeItem(id)\r\n    }\r\n\r\n    const cartItemAddHanlder = item => {\r\n\r\n        //cartCtx.addItem({...item, amount:1})\r\n    }\r\n    const cartitems =\r\n    <ul className={classes['cart-items']}>\r\n        {\r\n        cartItems?.map(order =>\r\n            (<CartItem key={order.id}\r\n                       name={order.name}\r\n                       qty={order.qty}\r\n                       price={order.price}\r\n                       onRemove={cartItemRemoveHanlder.bind(null, order._id)}\r\n                       onAdd={cartItemAddHanlder.bind(null, order)}>\r\n\r\n            </CartItem>\r\n\r\n        ))}\r\n\r\n    </ul>\r\n\r\n\r\n    return <OrderModal onClose={props.onClose} >\r\n        {cartitems}\r\n        <div className={classes.total}>\r\n            <span>Ukupan iznos</span>\r\n            <span>RSD {totalAmount?.toFixed(2)}</span>\r\n        </div>\r\n        <div className={classes.total}>\r\n            <span>Order number:</span>\r\n            <span>{order.id}</span>\r\n        </div>\r\n        <div>\r\n            <p>Vase poruzdzbina je poslata na obradu. Mozete se vratiti na pocetnu stranu i  kreirati novu porudzbinu ukoliko zelite.</p>\r\n        </div>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n\r\n        </div>\r\n    </OrderModal>\r\n}\r\n\r\nexport default Order","import { Container } from \"react-bootstrap\";\r\nimport Header from \"./compontents/Header\";\r\nimport Footer from \"./compontents/Footer\";\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\nimport LoginScreen from \"./screens/LoginScreen\";\r\nimport RegisterScreen from \"./screens/RegisterScreen\";\r\nimport ProfileScreen from \"./screens/ProfileScreen\";\r\nimport ShippingScreen from \"./screens/ShippingScreen\";\r\nimport PaymentScreen from \"./screens/PaymentScreen\";\r\nimport PlaceOrderScreen from \"./screens/PlaceOrderScreen\";\r\nimport OrderScreen from \"./screens/OrderScreen\";\r\nimport UserListScreen from \"./screens/UserListScreen\";\r\nimport ProductListScreen from \"./screens/ProductListScreen\";\r\nimport InfoScreen from \"./screens/InfoScreen\";\r\nimport ONamaScreen from \"./screens/ONamaScreen\";\r\nimport KontaktScreen from \"./screens/KontakScreen\";\r\nimport UserEditScreen from \"./screens/UserEditScreen\";\r\nimport ProductEditScreen from \"./screens/ProductEditScreen\"\r\nimport OrderListScreen from \"./screens/OrderListScreen\"\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport Cart from './compontents/UI/Cart/Cart'\r\nimport Order from './compontents/UI/Order/Order'\r\n\r\nfunction App() {\r\n\r\n  const [cartIsShown, setCartIsShown] = useState(false)\r\n  const [orderIsShown, setOrderIsShown] = useState(false)\r\n\r\n  const showCartHalnder = () =>{\r\n    setCartIsShown(true)\r\n  }\r\n\r\n  const hideCartHanlder = () => {\r\n    setCartIsShown(false)\r\n  }\r\n\r\n   const showOrderHalnder = () =>{\r\n    setOrderIsShown(true)\r\n  }\r\n\r\n  const hideOrderHanlder = () => {\r\n    setOrderIsShown(false)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      { cartIsShown &&  <Cart onClose={hideCartHanlder}></Cart> }\r\n      { orderIsShown &&  <Order onClose={hideOrderHanlder}></Order> }\r\n      <Header onShowCart={showCartHalnder}/>\r\n      <main className=\"py-3\">\r\n        <Container>\r\n          <Routes>\r\n            <Route path=\"/\" element={<HomeScreen />} exact></Route>\r\n            <Route path=\"/products/:id\" element={<ProductScreen />}></Route>\r\n            <Route path=\"/cart\" >\r\n              <Route path=\":qty\" element={<CartScreen />} />\r\n              <Route path=\":id\" element={<CartScreen />} />\r\n              <Route path=\"\" element={<CartScreen />} />\r\n            </Route>\r\n            <Route path=\"/login\" element={<LoginScreen />}></Route>\r\n            <Route path=\"/register\" element={<RegisterScreen />}></Route>\r\n            <Route path=\"/profile\" element={<ProfileScreen />}></Route>\r\n            <Route path=\"/shipping\" element={<ShippingScreen />}></Route>\r\n            <Route path=\"/payment\" element={<PaymentScreen />}></Route>\r\n            <Route path=\"/placeorder\" element={<PlaceOrderScreen onShowOrder={showOrderHalnder} />}></Route>\r\n            <Route path=\"/order/:id\" element={<OrderScreen />}></Route>\r\n            <Route path=\"/admin/userlist\" element={<UserListScreen />}></Route>\r\n            <Route path=\"/admin/productlist\" element={<ProductListScreen />}></Route>\r\n            <Route path=\"/info\" element={<InfoScreen />}></Route>\r\n            <Route path=\"/onama\" element={<ONamaScreen />}></Route>\r\n            <Route path=\"/kontakt\" element={<KontaktScreen />}></Route>\r\n            <Route path=\"/admin/user/:id/edit\" element={<UserEditScreen />}></Route>\r\n            <Route path=\"/admin/product/:id/edit\" element={<ProductEditScreen />}></Route>\r\n            <Route path=\"/admin/orderlist\" element={<OrderListScreen />}></Route>\r\n          </Routes>\r\n        </Container>\r\n      </main>\r\n      <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport './index.css';\r\nimport './bootstrap.min.css'\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store = {store}>\r\n    \r\n      <App />\r\n    \r\n  </Provider>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"OrderModal_backdrop__1aYhg\",\"modal\":\"OrderModal_modal__27xrH\",\"slide-down\":\"OrderModal_slide-down__2pcEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__98AE_\",\"total\":\"Cart_total__Z4PSk\",\"actions\":\"Cart_actions__1QwPZ\",\"button--alt\":\"Cart_button--alt__1D7XD\",\"button\":\"Cart_button__2u8tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1Hm_f\",\"summary\":\"CartItem_summary__3sWj1\",\"price\":\"CartItem_price__BRjqn\",\"amount\":\"CartItem_amount__2NjcN\",\"actions\":\"CartItem_actions__2fwtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3dzLQ\",\"icon\":\"HeaderCartButton_icon__y446C\",\"badge\":\"HeaderCartButton_badge__D31DK\",\"bump\":\"HeaderCartButton_bump__Sh8Rq\"};"],"sourceRoot":""}